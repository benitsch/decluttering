comment,code,non-information
@impl note taken from @link com sun javafx scene control behavior text area behavior context menu requested javafx scene input context menu event,"public static void showContextMenu(TextArea textArea, ContextMenu contextMenu, ContextMenuEvent e) {",yes
icon set tool tip text printed view model get localization,"TABLE_ICONS.put(SpecialField.PRINTED, icon);",yes
synchronize changes of underlying date value with temporal accessor value,"BindingsHelper.bindBidirectional(valueProperty(), temporalAccessorValue,",no
ask if user really wants to close given database,private boolean confirmClose(BasePanel panel) {,yes
css information,"INTEGRITY_INFO(MaterialDesignIcon.INFORMATION),",no
check if there is default type with same name if so is modification of type so remove default one,ExternalFileType toRemove = null;,no
entry type,"for (Map.Entry<EntryType, TextField> entry : textFields.entrySet()) {",yes
todo username domain and identity should be included as in net version todo should check seems that it is not included in log4j2,,no
already parsed via command line parameter jabref jar somefile bib,if (isLoaded(dbFile) || !dbFile.exists()) {,no
finally add things to currently opened tab,for (ParserResult pr : toOpenTab) {,yes
to simplify exporter api we simply do normal export to temporary file and read contents afterwards,"tmp = Files.createTempFile(""jabrefCb"", "".tmp"");",no
class monitors set of files for changes upon detecting change it notifies registered file update listener implementation based on,"public class DefaultFileUpdateMonitor implements Runnable, FileUpdateMonitor {",no
for auto group,"private final RadioButton autoGroupKeywordsOption = new RadioButton(Localization.lang(""Generate groups from keywords in a BibTeX field""));",no
creates new list in element is converted using provided mapping changes to underlying list are propagated to converted list in contrast to @link org fxmisc easybind easy bind map observable list function items are converted when are inserted and at initialization instead of when they are accessed thus initial cpu overhead and memory consumption is higher but access to list items is quicker,"public static <A, B> MappedList<B, A> mapBacked(ObservableList<A> source, Function<A, B> mapper) {",no
sets @link consumer is invoked after task has failed with exception consumer always runs on java fx thread,public BackgroundTask<V> onFailure(Consumer<Exception> onException) {,no
todo add undo final undoable modify subtree undo new undoable modify subtree get group tree root node remove subgroups panel get undo manager add edit undo,group.getGroupNode().removeAllChildren();,no
db file exists,if (basePanel.getBibDatabaseContext().getDatabaseFile().isPresent()) {,yes
unlikely possibility is that both disk and mem version has been modified in same way check for too,"boolean modificationsAgree = (DuplicateCheck.compareEntriesStrictly(memEntry, diskEntry) > 1);",no
should only occur when preferences are set directly via preferences put and not via set firstname mode,return AutoCompleteFirstNameMode.BOTH;,no
dir must be folder not file,} else {,yes
method is called when user presses ok in preferences dialog calls appropriate method in view model,void storeSettings();,no
todo does not work for citations in footnotes tables,List<String> names = getSortedReferenceMarks(nameAccess);,no
save,save();,yes
constructor with optional column captions for two entries,"public MergeEntries(BibEntry entryLeft, BibEntry entryRight, String headingLeft, String headingRight, BibDatabaseMode type) {",no
if content selector values are present then we want to show auto complete suggestions immediately on focus,autoCompleter.setShowOnFocus(true);,no
is called when user drops preview layouts on cell in chosen list view to sort them,,no
helper methods for javafx binding methods are taken from browse jdk 8134679,public class BindingsHelper {,no
formats string to multiple texts by replacing parts and adding font characteristics,"public static List<Text> formatToTexts(String original, TextReplacement... replacements) {",no
copies given list of @link log event to clipboard,public void copyLog(List<LogEventViewModel> messages) {,no
entries had keys,"JabRefGUI.getMainFrame().getDialogService().notify(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(keyAndLink) + ""'."");",no
add radio buttons if two entries do not have identical fields,if (identicalFields.contains(field)) {,no
delivers possible completions as list of @link bib entry based on cite key,public class BibEntrySuggestionProvider extends SuggestionProvider<BibEntry> implements AutoCompleteSuggestionProvider<BibEntry> {,no
css eye,"READ_STATUS(MaterialDesignIcon.EYE),",no
method to add new abbreviation to abbreviations list property it also sets current abbreviation property to new abbreviation,"public void addAbbreviation(String name, String abbreviation) {",no
class for handling general actions cut copy and paste focused component is kept track of by globals focus listener and we call action stored under relevant name in action map,private class EditAction extends SimpleCommand {,no
returns new observable value holds value held by observable value or other when observable value is empty,public ObjectBinding<T> orElse(T other) {,no
command is only executable if database is open deprecated use instead,@Deprecated,no
define focused tab,if (pr.getFile().filter(path -> path.getAbsolutePath().equals(focusedFile)).isPresent()) {,no
single tab displayed in entry editor holding several field editors,abstract class FieldsEditorTab extends EntryEditorTab {,no
poll with timeout in case library is not analyzed completely but contains more duplicates,"dups = this.duplicates.poll(100, TimeUnit.MILLISECONDS);",no
clears current log,public void clearLog() {,yes
sets new key bind to objects key binding object if given key event is valid combination of keys,public boolean setNewBinding(KeyEvent evt) {,no
revert change,base.setPreamble(oldValue);,yes
fade new page in for smoother transition,"FadeTransition fadeIn = new FadeTransition(Duration.millis(100), imageView);",no
css rss,"BLOG(MaterialDesignIcon.RSS),",no
get search describer for given search query,public static SearchDescriber getSearchDescriberFor(SearchQuery searchQuery) {,yes
does actual operation on bibtex entry based on settings specified in same dialog returns number of occurrences replaced,"private int replaceItem(BibEntry entry, NamedCompound compound) {",no
should be opened in browser,field = StandardField.URL;,no
returns hash map containing key bindings,"public SortedMap<KeyBinding, String> getKeyBindings() {",yes
add menu for fetching bibliographic information,ContextMenu fetcherMenu = new ContextMenu();,no
ctrl on win,"LOGGER.debug(""Mode Copy"");",no
adds specified node as child of current root group contained in new groups must not be of type all entries group since tree has exactly one all entries group root new groups are inserted directly they are not deep copy,"private static void addGroups(GroupTreeNode newGroups, CompoundEdit ce) {",no
adds given entries to node group,public List<FieldChange> addEntriesToGroup(List<BibEntry> entries) {,yes
no we canceled or there is panel to get database from highly unlikely,return false;,no
default,return GroupHierarchyType.INDEPENDENT;,yes
bug report body,"String issueBody = systemInfo + ""\n\n"" + howToReproduce + ""\n\n"" + ""Paste your log details here."";",yes
do nothing by default,},yes
text after citation,if (end < line.length()) {,no
only instance of class,private static ExternalFileTypes singleton;,yes
placeholder class for custom generic type safe dragboard to be used in drag and drop does not depend on serialization do not use class directly use instance provided in @link gui globals local dragboard,public class CustomLocalDragboard {,no
search and import unknown references from associated bib files,public void importButtonClicked() {,no
wizard dialog for generating new sub database from existing te aux file,public class FromAuxDialog extends BaseDialog<Void> {,no
shows dialog with warnings from import or open of file,"public static void showParserResultWarningDialog(final ParserResult parserResult, final JabRefFrame jabRefFrame,",no
get permutation array,int[] permutation = new int[to - from];,no
set pseudo classes to indicate if row is root or sub item deep,"PseudoClass rootPseudoClass = PseudoClass.getPseudoClass(""root"");",no
do not report error since getting suffix is non critical operation and error will be triggered and reported elsewhere,},no
selected entries,entries = frame.getCurrentBasePanel().getSelectedEntries();,yes
for fields in joint add row and possibly radio buttons,int row = 2;,no
puts list of preview layout in map previous content is cleared,public void putPreviewLayouts(List<PreviewLayout> previewLayouts) {,no
remove entry from import inspection dialog,entries.remove(entry);,yes
second check if duplicate is of entry in import,other = findInternalDuplicate(entry);,no
todo remove old entry or add it to list of entries to be deleted we only delete it after ok is clicked entries to delete add other get,} else if (result == DuplicateResolverDialog.DuplicateResolverResult.KEEP_RIGHT) {,no
taken from,"public Image render(int width, int height) {",no
check if looks like remote link,if (REMOTE_LINK_PATTERN.matcher(link).matches()) {,yes
get list of exporters and sort before adding to file dialog,List<Exporter> exporters = Globals.exportFactory.getExporters().stream(),yes
save properties dependent on id makes it possible to restore them,new SharedDatabasePreferences(context.getDatabase().generateSharedDatabaseID()),no
initialize protected terms loader,Globals.protectedTermsLoader = new ProtectedTermsLoader(Globals.prefs.getProtectedTermsPreferences());,yes
returns menu item container node associated with menu item can contain label node of type label for displaying menu item text right node of type label for displaying accelerator text or arrow if it menu graphic node for displaying menu item icon and left node for displaying either radio button or check box is basically rewritten impl styleable get node should not be used since it marked as deprecated,private static Label getAssociatedNode(MenuItem menuItem) {,no
set content type content type style sheet sheet html editor kit get editor kit get style sheet sheet add rule body style sheet add rule addition style sheet add rule removal style sheet add rule change style set editable false,},yes
sets name and abbreviation of @code current abbreviation property to values of @code abbreviations name and @code abbreviations abbreviation properties,"private void setCurrentAbbreviationNameAndAbbreviationIfValid(String name, String abbreviation) {",no
finally go through citation markers and update referring to entries in current list,int maxAuthorsFirst = style.getIntCitProperty(OOBibStyle.MAX_AUTHORS_FIRST);,no
describe advanced search expression,"textFlow.getChildren().add(TooltipTextUtil.createText(String.format(""%s "", Localization.lang(""This search contains entries in which"")), TooltipTextUtil.TextType.NORMAL));",no
if we re going to override cite keys warn user about it,} else if (entries.parallelStream().anyMatch(BibEntry::hasCiteKey)) {,no
method is called after new database has been added to gui if is action necessary method returned true note if several such methods need to be called sequentially it is important that implementations of method do not return until operation is finished,"void performAction(BasePanel panel, ParserResult pr);",no
searches recursively files in specified directory br br files matched by given @link unlinked pdf file filter are taken into resulting tree br br result will be tree structure of nodes of type @link check box tree item br br user objects are attached to nodes is @link file node wrapper wraps @link file object br br for ensuring capability to cancel work of recursive method first position in integer array state must be set to to keep recursion running when states value changes method will resolve recursion and return what it has saved so far,"private CheckBoxTreeItem<FileNodeWrapper> searchDirectory(File directory, UnlinkedPDFFileFilter ff) {",no
method attaches linked file from url if not already linked to entry using key and value pair from find full texts map and then downloads file into given target directory,"private void addLinkedFileFromURL(URL url, BibEntry entry, Path targetDirectory) {",no
init paste handler for url editor to format pasted url link in text area,textArea.setPasteActionHandler(() -> textArea.setText(new CleanupURLFormatter().format(new TrimWhitespaceFormatter().format(textArea.getText()))));,no
create new suggestion provider string,"public SuggestionProviderString(Callback<T, String> stringConverter) {",yes
set new sections name to child section,xChildNamed.setName(OOBibBase.BIB_SECTION_NAME);,yes
ok done then try to gather in we have found since we might have found one or more bibtex results it best to gather them in bib database,ParserResult bibtexResult = mergeImportResults(imports);,no
todo can we find out whether save was actually done or not,},no
method shall be used to add new journal abbreviation file to set of journal abbreviation files it basically just calls @link open file path method,public void addNewFile() {,no
undoable add or remove group undo new undoable add or remove group groups root new group tree node view model new groups undoable add or remove group add node ce add edit undo,},yes
new version could be found only respect ignored version on automated version checks,if (!newerVersion.isPresent() || (newerVersion.get().equals(toBeIgnored) && !manualExecution)) {,no
compare deleted entry in memory with one in tmpfile entry could have been removed in memory,"double matchWithTmp = DuplicateCheck.compareEntriesStrictly(memEntry, tmpEntry);",no
retrieve bookmark by name,if (!xNamedBookmarks.hasByName(name)) {,yes
run validation checks,if (!validSettings()) {,yes
be happy with first found bib entry and move on to next key,break;,yes
css open in app,CONNECT_OPEN_OFFICE(MaterialDesignIcon.OPEN_IN_APP),yes
fills current values to text fields,public void setValues(AbstractBibtexKeyPattern keyPattern) {,no
create default suggestion provider based on to string method of generic objects,public static <T> SuggestionProvider<T> create(Collection<T> possibleSuggestions) {,no
lines above work also if dir does not exist at all null is accepted by filechooser as inital path,,no
css paperclip,ATTACH_FILE(MaterialDesignIcon.PAPERCLIP),yes
converts citations into rtf format,protected static ClipboardContent processRtf(List<String> citations) {,no
push to application,final PushToApplicationAction pushToApplicationAction = pushToApplicationsManager.getPushToApplicationAction();,yes
returns default context menu items except undo redo,public static List<MenuItem> getDefaultContextMenuItems(TextInputControl textInputControl) {,no
use preferences value if db is open,mode = Globals.prefs.getDefaultBibDatabaseMode();,no
we have to use supplier for localized text so that language changes are correctly reflected,"SearchDisplayMode(Supplier<String> displayName, Supplier<String> toolTipText) {",no
todo switch icon color search icon set icon icon theme jab ref icon advanced search get icon,} else {,no
we have overwritten marker for start of reference list we need to add it again,cursor.collapseToEnd();,no
create and run cleaner,"CleanupWorker cleaner = new CleanupWorker(panel.getBibDatabaseContext(), preferences.getCleanupPreferences(",yes
if we found it remove it from type list,if (toRemove != null) {,yes
work around for different input methods,private class InputMethodRequestsObject implements InputMethodRequests {,no
class represents change in field value relevant information is bib entry field name old and new value old new values can be null,public class UndoablePreambleChange extends AbstractUndoableJabRefEdit {,no
parse temporary file,ImportFormatPreferences importFormatPreferences = Globals.prefs.getImportFormatPreferences();,no
show progress indicator,ProgressIndicator progress = new ProgressIndicator();,yes
fail on unsupported java versions,ensureCorrectJavaVersion();,no
get string associated with file type icon,public String getIconName() {,no
things to be appended to opened tab should be done after opening tabs add them to list,toOpenTab.add(pr);,no
set title frame title,return;,no
we do not trim value at assignment to enable users to have spaces at beginning and at end of pattern,if (!text.trim().isEmpty()) {,no
jni convenience easier to iterate over array than calling hashtable,String pairs[] = null;,no
create menu items one for case changer,List<Formatter> caseChangers = new ArrayList<>();,no
we import files and collect results,List<ImportFormatReader.UnknownFormatImport> imports = new ArrayList<>();,no
constructs list cell based on view model of row and bunch of specified converter methods,"public class ViewModelListCellFactory<T> implements Callback<ListView<T>, ListCell<T>> {",no
todo store undo if undo is empty group selector conclude assignment undoable change entries of group get undoable edit target undo target get node assigned entries,},no
todo means duplicate string name exists so it not very exceptional situation we should maybe give warning,},no
dialog shown when closing of application needs to wait for save operation to finish,public class WaitForSaveFinishedDialog {,no
todo find better way to update preview,basePanel.closeBottomPane();,no
we are alone so we start server,"Globals.REMOTE_LISTENER.openAndStart(new JabRefMessageHandler(), remotePreferences.getPort());",no
keep track of changes made to columns like reordering or resizing,public class PersistenceVisualStateTable {,no
encoding of shared database is always utf,encodingDisableProperty.setValue(isShared);,no
replace placeholder if used,"command = command.replace(""%DIR"", absolutePath);",no
if file is ordinary file not resource part of jar bundle we watch it for changes and turn on live reloading,"if (!cssUri.toString().contains(""jar"")) {",no
shift on windows or modifier,"LOGGER.debug(""Mode LINK"");",no
show tooltips,if (command instanceof SimpleCommand) {,no
class provides editable text field is used as table cell it handles editing of name column,"public class JournalAbbreviationsNameTableEditingCell extends TableCell<AbbreviationViewModel, String> {",no
return first one we found anyway,return Optional.of(suffix);,no
regex is correct otherwise ok would have been disabled therefore do not catch anything here,if (keywordGroupRegExp.isSelected()) {,no
returns int representing selected hierarchical group context,private GroupHierarchyType getContext() {,yes
todo warn if assignment has undesired side effects modifies field keywords if warn assignment side effects warn assignment side effects node get node get group panel frame return user aborted operation,,no
bidirectional binding does not work so use listeners instead,"flow.estimatedScrollYProperty().addListener((observable, oldValue, newValue) -> scrollY.setValue(newValue));",no
main function for building merge entry panel,private void initialize() {,no
prefs tab is component displayed in preference dialog it needs to extend from component,interface PreferencesTab {,no
actual operation method will not be called on event dispatch thread so it should not do gui operations without utilizing invoke later,"void pushEntries(BibDatabaseContext database, List<BibEntry> entries, String keyString);",no
create dummy group,try {,no
action for launching mass field functionality defaults to selected entries or entries if none are selected input field name either set field or clear field,public class MassSetFieldsAction extends SimpleCommand {,no
need to toggle twice to make sure nothing is selected,root.setSelected(false);,no
ctrl on win no modifier on xubuntu,"LOGGER.debug(""Mode Copy"");",no
if we are supposed to set character format for citations must run test before we delete old citation markers otherwise if specified character format does not exist we end up deleting markers before process crashes due to missing format with catastrophic consequences for user need to do only once,mustTestCharFormat = false; // need to do this only once,no
get center of focused cell,Bounds anchorBounds = row.getBoundsInParent();,no
opens new console starting on given file location if command is specified in globals default system console will be executed,public static void openConsole(File file) throws IOException {,no
 think setting root to null is not possible,root.setGroup(DefaultGroupsFactory.getAllEntriesGroup());,no
general info dialog mac adapter calls method when quit is selected from application menu cmd is pressed or quit is selected from dock function returns boolean indicating if quitting is ok or not non osx jab ref calls when choosing quit from menu side effect tears down jab ref,public boolean quit() {,no
fits standard found entries message thus hinders searchbar to jump around while searching if frame width is too small,currentResults.setPrefWidth(150);,no
view model for field editor shows various options backed by map,public abstract class MapBasedEditorViewModel<T> extends OptionEditorViewModel<T> {,no
hide horizontal scrollbar and always wrap text,setWrapText(true);,no
delivers possible completions as list of @link author,public class PersonNameSuggestionProvider extends SuggestionProvider<Author> implements AutoCompleteSuggestionProvider<Author> {,no
xml syntax highlighting for rich text fx codearea created by carlos martins github @cemartins license bsd clause see and,public StyleSpans<Collection<String>> computeHighlighting(String text) {,no
inserts jab ref preferences values into properties of view model,public void setValues() {,no
alt on windows,"LOGGER.debug(""Mode MOVE"");",no
for column get actual width or if it does not exist default value,"Map<String,Double> columnWidths = new HashMap<>();",no
opens import inspection dialog to let user decide of given entries to import,"private void addImportedEntries(final BasePanel panel, final List<BibEntry> entries) {",no
update journal abbreviation loader,journalAbbreviationLoader.update(abbreviationsPreferences);,yes
generate dialog title,String dialogTitle;,yes
wrapper around one of actions from @link action to convert them to controlsfx @link org controlsfx control action action,class JabRefAction extends org.controlsfx.control.action.Action {,no
open file browser,,no
flipped around,resolveStringsAllProperty.setValue(preferences.getBoolean(JabRefPreferences.RESOLVE_STRINGS_ALL_FIELDS));,no
css file multiple,"FILE_MULTIPLE(MaterialDesignIcon.FILE_MULTIPLE),",yes
find office executable relative to class class loader,"String sOffice = System.getProperty(""os.name"").startsWith(""Windows"") ? ""soffice.exe"" : ""soffice"";",no
add entries to open tab,BasePanel panel = getCurrentBasePanel();,no
css star circle,"RELEVANCE(MaterialDesignIcon.STAR_CIRCLE),",yes
set empty background and create proper rendering in background for smoother loading,"background = new Rectangle(getDesiredWidth(), getDesiredHeight());",no
function to initialize parameters currently it is expected that command path preference key is set to path of application,protected abstract void initParameters();,no
root of global groups tree,private final GroupTreeNodeViewModel m_groupsRootHandle;,no
gets invoked if entry in current database changes,private void onDatabaseChanged(ListChangeListener.Change<? extends BibEntry> change) {,yes
wait until office is started,for (int i = 0;; ++i) {,no
check if we are supposed to set character format for citations,boolean mustTestCharFormat = style.isFormatCitations();,no
css arrow up bold,"MOVE_TAB_ARROW(MaterialDesignIcon.ARROW_UP_BOLD),",yes
todo reflective access should be removed,"Field privateStringField = TableView.class.getDeclaredField(""contentWidth"");",no
creates column for do is or ur ls @code first field is preferred to be shown over second field,"private TableColumn<BibEntryTableViewModel, Field> createUrlOrDoiColumn(JabRefIcon icon, Field firstField, Field secondField) {",no
get comparator to order suggestions,protected abstract Comparator<T> getComparator();,no
check if there are empty keys,boolean emptyKeys = false;,yes
repeat for individual file dir reuse text and dir vars,text = viewModel.userSpecificFileDirectoryProperty().getValue();,no
alt on win,"LOGGER.debug(""Node LINK"");",no
represents view model for page in document viewer,public abstract class DocumentPageViewModel {,yes
menu to show up on right click in text field for converting text formats,class ConversionMenu extends Menu {,no
is ugly but we have proper update mechanism in place to propagate changes so redraw everything,refresh();,no
todo print error message localization lang pdf does not exist,} else {,no
prints parsing statistics,public String getInformation(boolean includeMissingEntries) {,no
calls abbreviations file view model write or create method for file in journal files property will overwrite existing files with content of abbreviations property of abbriviations file non existing files will be created,public void saveJournalAbbreviationFiles() {,no
sets @link consumer is invoked after task is successfully finished consumer always runs on java fx thread,public BackgroundTask<V> onSuccess(Consumer<V> onSuccess) {,no
copyright 2014 2016 controls fx rights reserved redistribution and use in source and binary forms with or without modification are permitted provided that following conditions are met redistributions of source code must retain above copyright notice list of conditions and following disclaimer redistributions in binary form must reproduce above copyright notice list of conditions and following disclaimer in documentation and or other materials provided with distribution neither name of controls fx associated website nor names of contributors may be used to endorse or promote products derived from software without specific prior written permission software is provided by copyright holders and contributors as is and express or implied warranties including but not limited to implied warranties of merchantability and fitness for particular purpose are disclaimed in event shall controlsfx be liable for direct indirect incidental special exemplary or consequential damages including but not limited to procurement of substitute goods or services loss of use data or profits or business interruption however caused and on theory of liability whether in contract strict liability or tort including negligence or otherwise arising in way out of use of software even if advised of possibility of such damage,package org.jabref.gui.autocompleter;,no
extract destination url,try {,no
updates view to reflect changes to visible components,private void updateView() {,yes
class represents change in field value relevant information is bib entry field name old and new value old new values can be null,public class UndoableFieldChange extends AbstractUndoableJabRefEdit {,no
abstract class for pushing entries into different editors,public abstract class AbstractPushToApplication implements PushToApplication {,no
put warning into as exception text it will be displayed to user,,no
wraps old swing commands so that they fit into new infrastructure in long term class should be removed,@Deprecated,no
default context menu with specific menu item to cleanup url,public static Supplier<List<MenuItem>> getCleanupURLMenu(TextArea textArea) {,no
icon is chosen based on field name in cell so map fields to names,column.setCellValueFactory(cellData -> EasyBind.monadic(cellData.getValue().getField(firstField)).map(x -> firstField).orElse(EasyBind.monadic(cellData.getValue().getField(secondField)).map(x -> secondField)));,no
execute command,try {,no
ignored,return Collections.emptyList();,no
returns true if there is external file type registered for extension,public boolean isExternalFileTypeByExt(String extension) {,no
unknown can not un abbreviate anything,return false;,yes
vim set shiftwidth softtabstop expandtab,,no
redo change,try {,no
we need to get tab header following is ugly workaround,Node tabHeaderArea = ((TabPaneSkin) this.tabbedPane.getSkin()),no
reset fields,for (TextField field : textFields.values()) {,yes
similar to @link org fxmisc easybind monadic monadic observable value,public class OptionalObjectProperty<T> extends SimpleObjectProperty<Optional<T>> {,no
,"public static void showContextMenu(TextField textField, ContextMenu contextMenu, ContextMenuEvent e) {",no
css clipboard arrow left,EXPORT_TO_CLIPBOARD(MaterialDesignIcon.CLIPBOARD_ARROW_LEFT),yes
todo replace by,public class JabRefDesktop {,no
executes callable task provides return value after calculation is done @param command task to execute future object provides returning value,public <T> Future<T> execute(Callable<T> command) {,yes
need to run on java fx thread,"JabRefGUI.getMainFrame().addParserResult(pr, focusPanel)",no
set original filename again,tabbedPane.getTabs().get(i).setText(getBasePanelAt(i).getTabTitle());,no
if required check that entries have bib te keys defined,if (application.requiresBibtexKeys()) {,no
check if value returned by get column value is same as simple check of entry field would give reasons for being different are combinations may also happen entry has crossref where field content is obtained from field has string in it get column value resolves there are alias fields for example if entry has date field but year field bib entry get resolved field or alias string bib database will return year value from date field when queried for year,public boolean isResolved(BibEntry entry) {,no
imlement default,},no
use default key bindings,for (KeyBinding keyBinding : KeyBinding.values()) {,yes
store shown columns and width in preferences,private void updateColumnPreferences() {,no
todo add undo final undoable add or remove group undo new undoable add or remove group groups root node undoable add or remove group remove node keep children panel get undo manager add edit undo,GroupTreeNode groupNode = group.getGroupNode();,no
read saved file paths and read abbreviations,public void createFileObjects() {,no
on linux java fx fonts look blurry per default can be improved by using non default rendering setting see,if (Globals.prefs.getBoolean(JabRefPreferences.FX_FONT_RENDERING_TWEAK)) {,no
runs specified runnable on java fx application thread and waits for completion,public static void runAndWaitInJavaFXThread(Runnable action) {,yes
jab ref main class,public class JabRefMain extends Application {,yes
bootstraps component context from uno installation,"public static final XComponentContext bootstrap(String[] argArray, URLClassLoader loader) throws BootstrapException {",no
if globals prefs is keyword sync enabled return final bib entry entry event get bib entry named compount code similar to special field update listener named compound nc new named compound localization lang synchronized special fields based on keywords list field change changes special fields utils sync special fields from keywords entry globals prefs get keyword delimiter for field change change changes nc add edit new undoable field change change do not insert compound into undo manager it would be added before component undoes insertion of entry and creates heavy problems prohibits undo deleting multiple entries,},no
get target folder,Optional<Path> fileDir = databaseContext.getFirstExistingFileDir(filePreferences);,no
ctrl on windows no modifier on xubuntu,"LOGGER.debug(""Mode COPY"");",no
default command,"String cmd = ""xdg-open "" + filePath.toAbsolutePath().getParent().toString();",no
reloads jab ref preferences into ui,private void updateAfterPreferenceChanges() {,no
we define two file type objects as equal if name extension open with and icon name are equal,@Override,no
create buttons,"ButtonType replaceEntries = new ButtonType(Localization.lang(""Merge entries""), ButtonBar.ButtonData.OK_DONE);",yes
time stamp,,no
class can be used to wrap @see observable list inside it when wrapped listener listening for updates to wrapped observable list for example because of binding to it is ensured to be notified on java fx application thread it should be used to implement bindings where updates come in from background thread but should be reflected in ui where it is necessary that changes to ui are performed on java fx application thread,public class UiThreadObservableList<E> implements ObservableList<E> {,no
executes collection of callable tasks and returns list of resulting future objects after calculation is done @param tasks tasks to execute @return list of future objects provide returning values,public <T> List<Future<T>> executeAll(Collection<Callable<T>> tasks) {,yes
will set @code current file property to @link abbreviations file view model object was added to @code journal files list property lastly if there are files in list property methode will do nothing as @code current file property is already @code null,public void selectLastJournalFile() {,no
method to delete abbreviation set in current abbreviation property current abbreviation property will be set to previous or next abbreviation in abbreviations property if applicable else it will be set to @code null if there are abbreviations left,public void deleteAbbreviation() {,no
we need to sort reference marks according to order of appearance,names = sortedReferenceMarks;,no
returns wrapper around given list posts changes on java fx thread,public static <T> ObservableList<T> forUI(ObservableList<T> list) {,no
kill remote thread,stopRemoteThread();,yes
first try xmp import if empty try pdf import otherwise create empty entry,if (!xmpEntriesInFile.isEmpty()) {,no
revert change,base.removeString(string.getId());,no
go through unchanged types remove them from ones should be stored and from list of defaults since we do not need to mention in prefs,for (ExternalFileType type : unchanged) {,no
checks if tabs are valid to do after conversion of tabs use mvvmfx validator to do should be observable for binding of ok button in view,,no
next add visible tabs if not already present at right position,for (int i = 0; i < visibleTabs.size(); i++) {,no
update tab titles,updateAllTabTitles();,yes
helper class to create and style controls according to @link action,public class ActionFactory {,no
class for fetching and merging bibliographic information,public class FetchAndMergeEntry {,yes
paranoia ensure that there are never two instances of all entries group,if (newGroups.getGroup() instanceof AllEntriesGroup) {,no
create button triggers search,"Button search = new Button(Localization.lang(""Search""));",yes
activate context menu if user presses context menu key,"tableView.addEventHandler(KeyEvent.KEY_RELEASED, event -> {",no
,public static <V> V runInJavaFXThread(Callable<V> callable) {,yes
add edit field for bibtex key,fields.add(InternalField.KEY_FIELD);,no
remove reference marks do not look like jab ref citations,List<String> tmp = new ArrayList<>();,no
although entries are redefined without use also updates link source base,"Map<BibEntry, BibDatabase> entries = findCitedEntries(databases, cited, linkSourceBase);",no
for remaining entries intersection has to be used approach ensures that one empty keyword list leads to empty set of common keywords,for (BibEntry entry : entries) {,no
very simple implementation of @link task executor interface submitted task is invoked in separate thread,public class DefaultTaskExecutor implements TaskExecutor {,no
buttons in base dialogs react on enter,if (event.getCode() == KeyCode.ENTER) {,no
but not for entry,refKeys.get(marker).add(currentKey);,no
if we found it remove it from type list,if (toRemove != null) {,yes
main window of application,public class JabRefFrame extends BorderPane {,no
redo change,try {,no
tools for automatically detecting open office or libre office installations,public class DetectOpenOfficeInstallation {,no
heuristic missed so try to get page number from first shown page,currentPage.set(,no
assuming current page is a4 or has same aspect ratio,setPageWidth(desiredPageDimension.getWidth(Math.sqrt(2)) + delta);,no
check if there are two entries selected,List<BibEntry> selectedEntries = basePanel.getSelectedEntries();,yes
class controls user interface of journal abbreviations dialog ui elements and layout are defined in fxml file,public class ManageJournalAbbreviationsView extends BaseDialog<Void> {,no
only add tab if db is not already open,Optional<BasePanel> panel = getBasePanelList().stream(),no
class represents change of type for entry,public class UndoableChangeType extends AbstractUndoableJabRefEdit {,no
general,,no
sets title of main window,public void setWindowTitle() {,no
check mode of currently used db,if (panel != null) {,no
parent root just add,this.moveTo(target);,no
write entries using sw is used later to form email content,BibEntryWriter bibtexEntryWriter = new BibEntryWriter(,no
opens given files if one of it is null or 404 nothing happens,"public void openFiles(List<Path> filesToOpen, boolean raisePanel) {",no
ask for consent to send data to mr lib on first time to tab,if (preferences.isMrdlibAccepted()) {,no
only first of extensions gotten from file type is saved into class using get,String extensionString = exporter.getFileType().getExtensions().get(0);,no
path to edited subtree root node,private final List<Integer> m_pathToNode;,no
up to version 4b mime type is not included,"mimeType = """";",no
application insights java copyright microsoft corporation rights reserved mit license permission is hereby granted free of charge to person obtaining copy of software and associated documentation files software to deal in software without restriction including without limitation rights to use copy modify merge publish distribute sublicense and or sell copies of software and to permit persons to whom software is furnished to do so subject to following conditions above copyright notice and permission notice shall be included in copies or substantial portions of software software is provided as is without warranty of kind express or implied including but not limited to warranties of merchantability fitness for particular purpose and noninfringement in event shall authors or copyright holders be liable for claim damages or other liability whether in action of contract tort or otherwise arising from out of or in connection with software or use or other dealings in software,,no
on windows store application as empty if default option is selected or if application name is empty,if (defaultApplicationSelectedProperty.getValue() || application.isEmpty()) {,no
creates list of files leaf nodes in tree structure have been selected,private List<Path> getFileListFromNode(CheckBoxTreeItem<FileNodeWrapper> node) {,no
css server plus,ADD_ROW(MaterialDesignIcon.SERVER_PLUS),yes
method returns enum constant value,public String getConstant() {,yes
copies doi url to clipboard,public class CopyDoiUrlAction extends SimpleCommand {,no
update type label,"TypedBibEntry typedEntry = new TypedBibEntry(entry, databaseContext.getMode());",no
update key list to match new sorting,for (int j = 0; j < cEntries.length; j++) {,no
runs given task and returns future representing task,<V> Future<V> execute(BackgroundTask<V> task);,yes
alt on windows,"LOGGER.debug(""Mode LINK"");",no
runs cleanup on entry and records change,"private void doCleanup(CleanupPreset preset, BibEntry entry, NamedCompound ce) {",no
action can be invoked without open database so we have to check if we have one before trying to invoke methods to execute changes in preferences,,no
set up list of external file types either from default values or from values recorded in preferences,private void updateExternalFileTypes() {,no
notifies tab it got focus and should display given entry,public void notifyAboutFocus(BibEntry entry) {,no
handled by fx in text input control paste,break;,no
file does not exist so we ca not move it,"dialogService.showErrorDialogAndWait(Localization.lang(""File not found""), Localization.lang(""Could not find file '%0'."", linkedFile.getLink()));",yes
opens edit group dialog and changes given group to edited one,public void editGroup(GroupNodeViewModel oldGroup) {,no
we ca not watch files directly so monitor parent directory for updates,Path directory = file.toAbsolutePath().getParent();,no
extract list of bibtex keys from reference mark name,public List<String> parseRefMarkName(String name) {,no
leave expansion state of tree item as it is,this.draggedItem.setExpanded(this.draggedItem.isExpanded());,no
display link to expand text,if (!this.getChildren().contains(moreLink)) {,no
start looking at changes,"BibDatabaseDiff differences = BibDatabaseDiff.compare(referenceDatabase, databaseOnDisk);",no
change root group even though it will be all entries anyway,root.setGroup(changedGroups.getGroup());,no
when mime type is included array length should be,mimeType = val[2];,no
loop through available databases,for (BibDatabase loopDatabase : databases) {,yes
replace entries by merged entry,entries.add(diag.getMergedEntry());,no
if value null and then call null field has been omitted as updatefield also handles value null,"List<FieldChange> changes = SpecialFieldsUtils.updateField(specialField, value, be, nullFieldIfValueIsTheSame, Globals.prefs.isKeywordSyncEnabled(), Globals.prefs.getKeywordDelimiter());",no
storing backup of whole subtree is not required when children are kept,m_subtreeBackup = editType != UndoableAddOrRemoveGroup.REMOVE_NODE_KEEP_CHILDREN ? editedNode.getNode(),no
inserts citation into html body and copies it to clipboard,protected static ClipboardContent processHtml(List<String> citations) {,no
only one linked file open directly,"LinkedFileViewModel linkedFileViewModel = new LinkedFileViewModel(linkedFiles.get(0), entry.getEntry(), database, Globals.TASK_EXECUTOR, dialogService, Globals.prefs.getXMPPreferences(), Globals.prefs.getFilePreferences(), externalFileTypes);",no
if not start gui,"new JabRefGUI(mainStage, argumentProcessor.getParserResults(), argumentProcessor.isBlank());",yes
empty,},yes
after adding databases go through and see if post open actions need to be done for instance checking if we found new entry types can be imported or checking if database contents should be modified due to new features in version of jab ref note that we have to check whether does not go over get base panel count is because import to open might have been used adds to loaded databases but not to get base panel count,,no
new zip file chooser,public ZipFileChooser(FileSystem zipFile) throws IOException {,yes
expand node and children on drag over,dragExpansionHandler.expandGroup(row.getTreeItem());,yes
todo merge with import,"factory.createMenuItem(StandardActions.MERGE_DATABASE, new OldDatabaseCommandWrapper(Actions.MERGE_DATABASE, this, stateManager)),",no
css code equal,"FIND_DUPLICATES(MaterialDesignIcon.CODE_EQUAL),",yes
find entries in clipboard,List<BibEntry> entriesToAdd = Globals.clipboardManager.extractData();,yes
access child section text content interface and insert it into document,"XTextContent xChildSection = UnoRuntime.queryInterface(XTextContent.class, xChildNamed);",no
set visibility of progress bar in right end of status line at bottom of frame,public void setProgressBarVisible(final boolean visible) {,no
converts path relative to base path into class name,"private static String pathToClass(String basePath, Path path) {",no
following is necesary to initiate drag and drop in javafx although we do not need contents it does not work without,ClipboardContent content = new ClipboardContent();,no
mask text,boolean maskText = (textInputControl instanceof PasswordField);,no
use correct viewer even if pdf and ps are mixed up,"String[] split = file.get().getFileName().toString().split(""\\."");",no
interface defines potential actions may need to be taken after opening bib file into jab ref can for instance be file upgrade actions should be offered due to new features in jab ref and may depend on jab ref version file was last written by interface is introduced in attempt to add such functionality in flexible manner,public interface GUIPostOpenAction {,no
warning before overwriting is only relevant if overwriting can happen,warnBeforeOverwriting.setDisable(dontOverwrite.isSelected());,no
todo remove copy as soon as one included in ai is compatible with log4j,public final class ApplicationInsightsLogEvent extends ApplicationInsightsEvent {,no
insert connector,"xSet.insert(xImpLoader.activate(""com.sun.star.comp.connections.Connector"", null, null, null));",yes
as there is concept like empty node icon we return simply other icon,return JabRefIcons.GROUP_INTERSECTION.getGraphicNode();,no
add bib databases databases to frame,boolean first = false;,no
is simple implementation of generic suggestion provider callback complexity of suggestion generation is where is number of possible suggestions,"public abstract class SuggestionProvider<T> implements Callback<ISuggestionRequest, Collection<T>> {",no
returns newer version excluding non stable versions except if installed one is unstable too if newer version was found then empty optional is returned,private Optional<Version> getNewVersion() throws IOException {,no
prints connection problem to status bar and shows dialog if it was executed manually,"private void showConnectionError(Exception exception, boolean manualExecution) {",no
css file powerpoint,"FILE_POWERPOINT(MaterialDesignIcon.FILE_POWERPOINT),",yes
detect google search url,"private static final String GOOGLE_SEARCH_EXP = ""^https?://(?:www\\.)?google\\.[\\.a-z]+?/url.*"";",yes
update keywords,keywords.removeAll(keywordsToRemove);,yes
css auto fix,"AUTO_GROUP(MaterialDesignIcon.AUTO_FIX),",yes
bootstraps initial component context from native uno installation see also code cppuhelper default bootstrap initial component context code,"public static final XComponentContext defaultBootstrap_InitialComponentContext(String ini_file, Map<String, String> bootstrap_parameters) throws Exception {",no
css twitter,"TWITTER(MaterialDesignIcon.TWITTER),",yes
drag and drop support,row.setOnDragDetected(event -> {,no
file on disk has changed thus look for notable changes and notify listeners in case there are such changes,"ChangeScanner scanner = new ChangeScanner(database, referenceFile);",no
append given value to given field for entries in collection method does not update undo manager but returns relevant compound edit should be registered by caller,"private static UndoableEdit massAppendField(Collection<BibEntry> entries, Field field, String textToAppend) {",no
we have to use reflection to get associated label,try {,no
if so mark base changed prevent undo button from removing change marking,if (changed) {,no
passed file we take first one should be focused,String focusedFile = bibDatabases.stream(),no
decides if content stored in given dragboard can be droped on given target row currently following sources are allowed group will be added as subgroup on drop entries if group implements @link group entry changer will be assigned to group on drop,public boolean acceptableDrop(Dragboard dragboard) {,no
string was removed or renamed locally we guess that it was removed,"BibtexString bs = new BibtexString(label, disk);",no
returns consent dialog used to ask permission to send data to mr lib,private ScrollPane getPrivacyDialog(BibEntry entry) {,no
left text pane,if (leftString.isPresent()) {,no
initializes components layout data structure and actions in dialog,private void initialize() {,no
add type change menu,"ContextMenu typeMenu = new ChangeEntryTypeMenu().getChangeEntryTypePopupMenu(entry, databaseContext, undoManager);",no
property is only needed to get proper ide support in fxml files validation parameter passed to icon is indeed of type @link icon theme jab ref icons,private ObjectProperty<IconTheme.JabRefIcons> glyph;,no
cloud upload,"CONNECT_DB(MaterialDesignIcon.CLOUD_UPLOAD),",yes
removal of node and of children,public static final int REMOVE_NODE_AND_CHILDREN = 2;,yes
worker checks if there is new version of jab ref available if there is it will display dialog to user offering him multiple options to proceed see changelog go to download page ignore version and remind later if versions check is executed manually and is latest version it will also display dialog to inform user,public class VersionWorker {,no
if crossref entry is not already in database,if (!resultDatabase.getEntryByKey(crossref).isPresent()) {,yes
insert it at current position,"rebuildBibTextSection(allBases, style);",no
especially for track execute when action run same function but from different source,"public JabRefAction(Action action, Command command, KeyBindingRepository keyBindingRepository, Sources source) {",no
action for save and save as operations called from base panel class is also used for save operations when closing database or quitting applications save operation is loaded off of gui thread using background task callers can query whether operation was canceled or whether it was successful,public class SaveDatabaseAction {,no
default menu contains functions for changing case of text and doing several conversions,public static Supplier<List<MenuItem>> getDefaultMenu(final TextInputControl textInput) {,no
set headings,for (int i = 0; i < 6; i++) {,yes
method should be called after storing preferences to collect properties require restart of jab ref to load,List<String> getRestartWarnings();,no
creates new auto completion binding between given text input control and given suggestion provider,"private AutoCompletionTextInputBinding(final TextInputControl textInputControl,",yes
we accept kinds of dates not just in format specified,return Date.parse(string).map(Date::toTemporalAccessor).orElse(null);,no
whole method is part of background task when autodecting instances so we need to show dialog in fx thread,"Optional<DocumentTitleViewModel> selectedDocument = dialogService.showChoiceDialogAndWait(Localization.lang(""Select document""), Localization.lang(""Found documents:""), Localization.lang(""Use selected document""), viewModel);",no
taken from,"private static BufferedImage resize(BufferedImage img, int newWidth, int newHeight) {",no
we always want that first item is selected after change also automatically selects first file on initial load,fileChoice.itemsProperty().addListener(,no
function to get command to be executed for pushing keys to be cited,"@SuppressWarnings(""unused"")",no
for reason graphic is not set correctly by @link action utils class so we have to fix by hand,"private static void setGraphic(MenuItem node, Action action) {",no
entry type or bibtex key will never be resolved,if (InternalField.TYPE_HEADER.equals(field) || InternalField.OBSOLETE_TYPE_HEADER.equals(field),no
removal of single node children if are kept,public static final int REMOVE_NODE_KEEP_CHILDREN = 1;,yes
copyright 2014 2015 controls fx rights reserved redistribution and use in source and binary forms with or without modification are permitted provided that following conditions are met redistributions of source code must retain above copyright notice list of conditions and following disclaimer redistributions in binary form must reproduce above copyright notice list of conditions and following disclaimer in documentation and or other materials provided with distribution neither name of controls fx associated website nor names of contributors may be used to endorse or promote products derived from software without specific prior written permission software is provided by copyright holders and contributors as is and express or implied warranties including but not limited to implied warranties of merchantability and fitness for particular purpose are disclaimed in event shall controlsfx be liable for direct indirect incidental special exemplary or consequential damages including but not limited to procurement of substitute goods or services loss of use data or profits or business interruption however caused and on theory of liability whether in contract strict liability or tort including negligence or otherwise arising in way out of use of software even if advised of possibility of such damage,package org.jabref.gui.autocompleter;,no
use property as initial source,updateA.accept(propertyB.getValue());,no
map containing registered external file types,private final Set<ExternalFileType> externalFileTypes = new TreeSet<>(Comparator.comparing(ExternalFileType::getName));,yes
workaround taken from,private void setupClearButtonField(CustomTextField customTextField) {,no
always overwrite keys by default,return true;,no
we are not alone there is already server out there send command line arguments to other instance,if (remoteClient.sendCommandLineArguments(args)) {,no
process arguments,"ArgumentProcessor argumentProcessor = new ArgumentProcessor(arguments, ArgumentProcessor.Mode.INITIAL_START);",yes
nothing set so we use default values,"while (preferences.get(JabRefPreferences.CUSTOM_TAB_NAME + ""_def"" + i) != null) {",no
run actual open in thread to prevent program locking until file is loaded,"BackgroundTask.wrap(() -> openIt(file, dialog.importEntries(), dialog.importStrings(), dialog.importGroups(), dialog.importSelectorWords()))",no
it could be that somehow path is null for example if it got deleted in meantime,if (directory == null) {,no
extract url parameter,"String[] pairs = query.split(""&"");",no
collect callables to execute in one collection,for (BibEntry entry : entries) {,no
todo add undo store undo information abstract undoable edit undo add previous entries null undoable modify group undo new undoable modify group group selector this groups root node new group if undo add previous entries null panel get undo manager add edit undo else named compound nc new named compound modify group nc add edit undo nc add edit undo add previous entries nc end panel get undo manager add edit nc if add change is empty undo add previous entries undoable change entries of group get undoable edit null add change,,no
adds filename to top of menu if it already is in menu it is merely moved to top,public void newFile(Path file) {,no
view model can be used for add exporter and modify exporter functionalities it takes optional exporter is empty for add exporter and takes selected exporter for modify exporter returns optional exporter empty if invalid or exporter is created and otherwise contains exporter to be added or is modified,,no
we need to catch one here because open office panel class is loaded before connection and therefore can not directly reference or catch disposed exception is in oo jar file,throw new ConnectionLostException(ex.getMessage());,no
css label outline,"OPTIONAL(MaterialDesignIcon.LABEL_OUTLINE),",yes
resize policy is almost same as @link table view constrained resize policy we make sure that width of columns sums up to total width of table however in contrast to @link table view constrained resize policy we size columns initially by preferred width,"public class SmartConstrainedResizePolicy implements Callback<TableView.ResizeFeatures, Boolean> {",no
we have to cast bib entries from bib entry suggestion provider to parsed entry link,Collection<BibEntry> bibEntries = (Collection<BibEntry>) super.complete(request);,no
puts list of bib entry in map previous content is cleared,public void putBibEntries(List<BibEntry> entries) {,no
wraps old swing commands so that they fit into new infrastructure in long term class should be removed,@Deprecated,no
run in one minute,"}, 60000);",no
see if there are duplicate citations marks referring to different entries if so we need to use uniquefiers,"Map<String, List<String>> refKeys = new HashMap<>();",no
todo,,no
todo print error message localization lang error while writing file to string ex,},no
parse modified file,"result = OpenDatabase.loadDatabase(diskdb.toAbsolutePath().toString(), importFormatPreferences, Globals.getFileUpdateMonitor());",no
represents binding between text input control and auto completion popup class is slightly modified version of @link impl org controlsfx autocompletion auto completion text field binding works with general text input controls instead of just text fields,public class AutoCompletionTextInputBinding<T> extends AutoCompletionBinding<T> {,no
creates instance of @link linked file based on given file we try to guess file type and relativize path against given file directories todo move method to @link linked file as soon as @link custom external file type lives in model,"public static LinkedFile fromFile(Path file, List<Path> fileDirectories, ExternalFileTypes externalFileTypesFile) {",no
create default suggestion provider based on to string method of generic objects using provided string converter,"public static <T> SuggestionProvider<T> create(Callback<T, String> stringConverter, Collection<T> possibleSuggestions) {",no
remove entry,entries.remove(entry);,yes
repaints table with most recent font configuration,public void updateFont() {,no
updates timestamp of changed entries if feature is enabled,class UpdateTimestampListener {,no
add new component,visibleComponents.add(component);,yes
setting character format failed so we throw exception will result in error message for user,throw new UndefinedCharacterFormatException(charStyle);,no
implementation of task executor runs task on current thread in sequential order class is not designed to be used in production but should make code involving asynchronous operations deterministic and testable,public class CurrentThreadTaskExecutor implements TaskExecutor {,no
file matched name try to open it directly using given app,"openExternalFilePlatformIndependent(type, link);",no
represents viewport for page note instances of @link document viewer page are reused not page is rendered in new instance but instead @link document viewer page update item object is called,"private class DocumentViewerPage implements Cell<DocumentPageViewModel, StackPane> {",no
set given field to given value for entries in collection method does not update undo manager but returns relevant compound edit should be registered by caller,"private static UndoableEdit massSetField(Collection<BibEntry> entries, Field field, String textToSet,",no
go back to relevant position,"xViewCursor.gotoRange(position, false);",no
displays bib entry using given layout format,public class PreviewViewer extends ScrollPane implements InvalidationListener {,no
saved now exit,return true;,no
try to get as much information from temporal accessor,LocalDate date = dateTime.query(TemporalQueries.localDate());,no
there is apparently neat way to get page number from pd page thus old style for loop,for (int i = 0; i < pages.getCount(); i++) {,no
read prefs information for file types,String[][] vals = StringUtil,no
start office process,Process p = Runtime.getRuntime().exec(cmdArray);,no
make list of pd fs linked from entry,List<Path> files = entry.getFiles().stream(),no
method is called when dialog is opened or if it is made visible after being hidden calls appropriate method in view model,void setValues();,no
perform migrations,PreferencesMigrations.runMigrations();,yes
constructs @link table cell based on value of cell and bunch of specified converter methods,"public class ValueTableCellFactory<S, T> implements Callback<TableColumn<S, T>, TableCell<S, T>> {",no
store new patterns globally,prefs.putKeyPattern(keypatterns);,no
backup of groups before modification,private final GroupTreeNode m_groupRoot;,no
mapped list implementation based on,"public final class MappedList<A, B> extends TransformationList<A, B> {",no
start of ugly hack we need to find out tabs will be shown and not and remove and re add appropriate tabs to editor we do not want to simply remove and re add complete list of visible tabs because tabs give ugly animation looks like tabs are shifting in from right hack is required since tabbed get tabs set all visible tabs changes order of tabs in editor,,no
make sure layout is set according to checkbox,cleanupEnabled.selectedProperty().addListener(new EnablementStatusListener<>(fieldFormatterCleanups.isEnabled()));,no
shift on win or modifier,"LOGGER.debug(""Mode LINK"");",no
expand or collapse tree item and reset time,this.dragStarted = System.currentTimeMillis();,yes
user wants to save,try {,no
open file,String filePath = file.get().toString();,no
returns path to system applications folder,Path getApplicationDirectory();,yes
opens shared database,public class ConnectToSharedDatabaseCommand extends SimpleCommand {,yes
parameters,if (query == null) {,yes
will wrap built in and ieee abbreviations in pseudo abbreviation files and add them to list of journal abbreviation files,void addBuiltInLists() {,no
url,if (decode.matches(URL_EXP)) {,yes
first remove tabs that we do not want to show,List<EntryEditorTab> toBeRemoved = tabs.stream().filter(tab -> !tab.shouldShow(entry)).collect(Collectors.toList());,yes
prevent right click to select group,event.consume();,no
css close circle,"INTEGRITY_FAIL(Color.RED, MaterialDesignIcon.CLOSE_CIRCLE),",yes
unknown external file type instance represents file type unknown to jab ref can happen for example when database is loaded contains links to files of type has not been defined on jab ref instance,public class UnknownExternalFileType implements ExternalFileType {,no
wait 500 ms then try to connect again but do not wait longer than min 600 500 ms total,if (i == 600) {,no
returns text formatter restricts input to integers,public static TextFormatter<String> getIntegerTextFormatter() {,no
format name field for table according to user preferences,public static String formatName(final String nameToFormat) {,yes
css view list,"TOGGLE_GROUPS(MaterialDesignIcon.VIEW_LIST),",yes
ok we have seen exact marker before,if (!refKeys.get(marker).contains(currentKey)) {,no
execute callables and wait for results,List<Future<Boolean>> futures = JabRefExecutorService.INSTANCE.executeAll(tasks);,no
stores user dialogs related to @link backup manager,public class BackupUIManager {,no
nothing to do here,},yes
minimum number of selected entries to ask user for confirmation,private static final int WARNING_LIMIT = 5;,no
exception used to indicate that plugin attempted to set character format is not defined in current open office document,class NoDocumentException extends Exception {,no
create call with arguments we need socket pipe does not work,String[] cmdArray = new String[argArray.length + 2];,no
writable image get desired width get desired height,BackgroundTask<Image> generateImage = BackgroundTask,yes
return boolean if selected entry have url or doi,private boolean isExistURLorDOI(List<BibEntry> selectEntryList) {,no
class can be used to wrap @see string property inside it when wrapped listener listening for updates to wrapped string property for example because of binding to it is ensured to be notified on java fx application thread it should be used to implement bindings where updates come in from background thread but should be reflected in ui where it is necessary that changes to ui are performed on java fx application thread,public class UiThreadStringProperty extends StringProperty {,no
prefs put boolean jab ref preferences window maximised get extended state frame maximized both,,yes
dialog for managing term list files,public class ManageProtectedTermsDialog extends BaseDialog<Void> {,yes
check if path to command has been specified,if ((commandPath == null) || commandPath.trim().isEmpty()) {,no
will only happen if field exists,"mergedEntry.setField(field, leftEntry.getField(field).get());",no
we need to make copy as instances of log event are reused by log4j,MutableLogEvent copy = new MutableLogEvent();,no
perform permutation,Object[] permutedPart = new Object[to - from];,yes
stream all match in contrast to stream any match returns true for empty streams so has to be checked explicitly,"return Bindings.createBooleanBinding(() -> !source.isEmpty() && source.stream().allMatch(predicate), source);",yes
if there is value do nothing,if ((!valToMove.isPresent()) || valToMove.get().isEmpty()) {,no
set default value,"Globals.prefs.put(JabRefPreferences.DEFAULT_BIBTEX_KEY_PATTERN, defaultPat.getText());",no
update citation list depending on selected reference,public void activeReferenceChanged(ReferenceViewModel reference) {,no
enable actions depend on connect,selectDocument.setDisable(false);,no
deleted since it does not work anymore needs refactoring menu item previous preview layout new menu item localization lang previous preview layout ;previous preview layout set accelerator key binding repository get key combination key binding base panel previous preview style ;menu item next preview layout new menu item localization lang next preview layout ;next preview layout set accelerator key binding repository get key combination key binding base panel next preview style,,yes
for types,private final TextField nameField = new TextField();,no
we only handle entry modify here so context is always path,"@SuppressWarnings(""unchecked"")",no
opens given url using system browser,public static void openBrowser(String url) throws IOException {,yes
constructor taking two entries,"public MergeEntries(BibEntry entryLeft, BibEntry entryRight, BibDatabaseMode type) {",yes
we create decoration pane ourselves for performance reasons otherwise it has to be injected later leading to complete redraw relayout of complete scene,DecorationPane root = new DecorationPane();,no
css eye,"READ_STATUS_READ(Color.rgb(111, 204, 117, 1), MaterialDesignIcon.EYE),",yes
first check if valid entry is selected,if (selectedKeyBinding.isNull().get()) {,yes
return string for displaying node name and number of children if it is directory,public String getDisplayText() {,no
dir must be folder not file,if (!Files.isDirectory(directory)) {,yes
set up key bindings specific for entry editor,private void setupKeyBindings() {,yes
bootstraps servicemanager with jurt base components registered see also unoidl code com sun star lang service manager< code,public static XMultiServiceFactory createSimpleServiceManager() throws Exception {,no
footnote anchor gives correct position in text,range = footer.getAnchor();,no
see if it helps to append,"lp = new File(commandPath + "".in"");",no
remove annotations for current entry and reinitialize annotation cache,cache.remove(entry);,no
for reason graphic is not set correctly so let fix,button.graphicProperty().unbind();,no
set up groups tree,groupTree.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);,no
store directory for next time,preferences.setWorkingDir(path);,no
threads will be allowed to finish,this.executorService.shutdown();,no
fetches possibly saved data and configures control elements respectively,private void applyPreferences() {,no
exception used to indicate that plugin attempted to set character format is not defined in current open office document,class CreationException extends Exception {,no
autosave,,no
sets indeterminate status of progress bar,public void setProgressBarIndeterminate(final boolean value) {,yes
action was either canceled or unsuccessful,"dialogService.notify(Localization.lang(""Unable to save library""));",no
remove fields are not in merged entry unless they are internal fields,for (Field field : originalFields) {,no
text before citation,if (start > 0) {,no
entry type,EntryType oldType = originalEntry.getType();,yes
display warnings if,int tabNumber = 0;,yes
set string associated with file type icon,public void setIconName(String name) {,yes
added comparator for read status,if (specialField == SpecialField.READ_STATUS) {,yes
constructor should only be called to create pseudo abbreviation file for built in lists means it is placeholder and it path will be null meaning it has place on filesystem it is pseudo file property will therefore be set to true,"public AbbreviationsFileViewModel(List<AbbreviationViewModel> abbreviations, String name) {",no
todo reflective access should be removed,"Method m = TextFields.class.getDeclaredMethod(""setupClearButtonField"", TextField.class, ObjectProperty.class);",no
new or modified entry type construct it from string array,ExternalFileType type = CustomExternalFileType.buildFromArgs(val);,no
to account for numbering and for uniqiefiers we must refresh cite markers,updateSortedReferenceMarks();,no
open http pdf ps viewer for given link string,"public static void openExternalViewer(BibDatabaseContext databaseContext, String initialLink, Field initialField)",no
general,,yes
read keybindings from keybinding repository and create table keybinding models for them,private void populateTable() {,no
text leading up to s1 insert s2,"stringBuilder.append(txt, piv, ind);",no
migrations warning for migrating review into comment field,"new MergeReviewIntoCommentAction(),",no
todo show detailed description of changes string builder sb new string builder html localization lang changes have been made to following metadata elements p><br>&nbsp;&nbsp sb append changes stream map unit unit key collect collectors joining <br>&nbsp;&nbsp sb append html info pane set text sb to string,"return new Label(Localization.lang(""Metadata change""));",no
global string constants for gui actions,@Deprecated,no
put everything together,VBox container = new VBox();,no
check if we should italicize et al string in citations,boolean italicize = style.getBooleanCitProperty(OOBibStyle.ITALIC_ET_AL);,yes
inform user to select entries first,dialogService.showInformationDialogAndWait(,yes
performs change method is responsible for adding proper undo edit to named compound so change can be undone,"public abstract void makeChange(BibDatabaseContext database, NamedCompound undoEdit);",no
set up bindings,BindingsHelper.bindContentBidirectional(,no
try to contact already running jab ref,RemoteClient remoteClient = new RemoteClient(remotePreferences.getPort());,no
css file excel,"FILE_EXCEL(MaterialDesignIcon.FILE_EXCEL),",yes
opens url with users standard browser if fails popup will be shown to instruct user to open link manually and link gets copied to clipboard,public static void openBrowserShowPopup(String url) {,no
sets runnable is invoked after task is finished irrespectively if it was successful or failed with error,public BackgroundTask<V> onFinished(Runnable onFinished) {,no
field editor provides various pre defined options as drop down combobox,public class TagBar<T> extends HBox {,no
method stores file paths of files in journal files property to global jab ref preferences pseudo abbreviation files will not be stored,private void saveExternalFilesList() {,no
icon set tool tip text localization lang open url,"TABLE_ICONS.put(StandardField.URL, icon);",yes
empty search field should cause search to be cleared,if (searchField.getText().isEmpty()) {,no
priority icon used for menu,"SpecialFieldViewModel priorityViewModel = new SpecialFieldViewModel(SpecialField.PRIORITY, undoManager);",no
checkbox marked circle outline,PLAIN_TEXT_IMPORT_DONE(MaterialDesignIcon.CHECKBOX_MARKED_CIRCLE_OUTLINE),yes
returns currently viewed base panel,public BasePanel getCurrentBasePanel() {,yes
generate keys,BibtexKeyPatternPreferences prefs = jabRefPreferences.getBibtexKeyPatternPreferences();,no
class is similar to @link graphic validation decoration but with different style and font based icon,public class IconValidationDecorator extends GraphicValidationDecoration {,no
method returns component detailing nature of change,public abstract Node description();,no
only remove explicit groups from entries keyword groups should not be deleted,if (group.getGroupNode().getGroup() instanceof ExplicitGroup) {,no
are there children or children of children are matched if yes we also need to show node,return node.children.getSource().stream().anyMatch(this::showNode);,no
if there are entries to add,if (!toAdd.isEmpty()) {,yes
node should be generated for call as nodes can be added to scene graph only once,return icon.getGraphicNode();,no
user does not want to override cite keys,if (!overwriteKeys) {,no
todo add undo panel get undo manager add edit new undoable field change entry editor get name text next abbreviation,},no
shows dialog with warnings from import or open of file,"public static void showParserResultWarningDialog(final ParserResult parserResult, final JabRefFrame jabRefFrame) {",no
popup has private access in @link auto completion binding so we use reflection to access it,"@SuppressWarnings(""unchecked"")",no
try to strip query string if to get correct suffix,URL url = new URL(link);,no
add chosen export type to last used pref to become default,"Globals.prefs.put(JabRefPreferences.LAST_USED_EXPORT, exporter.getName());",no
create new text section from document factory and access it named interface,XNamed xChildNamed;,no
tag item in tag bar,public class Tag<T> extends HBox {,no
todo warn if warn assignment side effects warn assignment side effects node get node get group panel frame return user aborted operation,,no
todo expand parent to make new group visible parent expand,,no
class will copy selected entry bib te key as hyperlink to url to clipboard in case entry does not have bib te key it will not be copied in case entry does not have url will only copy bib te key,public class CopyBibTeXKeyAndLinkAction implements BaseAction {,no
check whether there is icon defined for file type,for (ExternalFileType fileType : ExternalFileTypes.getDefaultExternalFileTypes()) {,no
needs to fixed because it gives asdf when going prefs get lyxpipe,File lp = new File(commandPath);,no
concatenates formatted message of given log event by using new line separator,private String getLogMessagesAsString(List<LogEventViewModel> messages) {,no
creates background task that first runs task and based on result runs second task,"public <T> BackgroundTask<T> then(Function<V, BackgroundTask<T>> nextTaskFactory) {",no
opens new group dialog and add resulting group to specified group,public void addNewSubgroup(GroupNodeViewModel parent) {,no
on ses there is generic application available to handle file opening so use one,"return """";",no
generate new cite keys for entry,"final NamedCompound compound = new NamedCompound(Localization.lang(""Autogenerate BibTeX keys""));",no
default value,String text = defaultPat.getText();,yes
customization of appearance parameters,"public AppearancePrefsTab(DialogService dialogService, JabRefPreferences prefs) {",no
remove node then insert children,GroupTreeNode removedNode = cursor,no
remove current possible suggestions,public void clearSuggestions() {,yes
get entries and check if it makes sense to perform operation,entries = basePanel.getSelectedEntries();,no
method first saves external files to internal list then writes abbreviations to files and finally updates abbreviations auto complete it basically calls @link save external files list save journal abbreviation files and finally @link journal abbreviation loader update journal abbreviation preferences,public void saveEverythingAndUpdateAutoCompleter() {,no
do not open original file,result.getDatabaseContext().clearDatabaseFile();,no
finds entry in list best fitting specified entry even if entries get score above zero entry is still returned,"private static BibEntry bestFit(BibEntry targetEntry, List<BibEntry> entries) {",no
more bps to check we found matching one,break;,no
default pattern,protected final TextField defaultPat = new TextField();,yes
we try to find page is displayed in center of viewport,Optional<DocumentViewerPage> inMiddleOfViewport = Optional.empty();,no
function to get command name in case it is different from application name,protected String getCommandName() {,no
check if we are running acceptable version of java,final BuildInfo buildInfo = Globals.BUILD_INFO;,yes
@inherit doc,@Override,yes
alt on windows,"LOGGER.debug(""Mode LINK"");",no
general information,VBox contextPanel = new VBox(10);,no
compare normalized markers since actual markers can be different,String[] markers = normCitMarkers[i];,no
keywords from first entry have to be added,BibEntry firstEntry = entries.get(0);,no
must be set here because in initialize button is still null,btnConnect.disableProperty().bind(viewModel.formValidation().validProperty().not());,no
everything is ok,return null;,yes
see if we can find type with matching name in default type list,ExternalFileType found = null;,no
we need to wait with setting divider since it gets reset few times during initial set up,mainStage.showingProperty().addListener(new ChangeListener<Boolean>() {,no
we calculate new hit value we could be more intelligent and try to figure out new number of hits based on entry change for example previously matched entry gets removed hits hits,BackgroundTask,no
it was modified remove entry from defaults list since type has not been removed,defTypes.remove(found);,no
can not rename remote links,return;,no
remember modified children for redo,m_modifiedSubtree.clear();,no
if given component is visible it will be hidden and other way around,public void toggle(SidePaneType type) {,yes
interface presents user described paste behaviour applying to paste method,@FunctionalInterface,no
icon set too localization lang open pdf,"TABLE_ICONS.put(StandardField.PDF, icon);",yes
first get list of default file types as starting point,List<ExternalFileType> types = new ArrayList<>(getDefaultExternalFileTypes());,no
name to change to is already in database so we ca not comply,"LOGGER.info(""Cannot rename string '"" + mem + ""' to '"" + disk + ""' because the name """,no
look up external file type registered with name if,public Optional<ExternalFileType> getExternalFileTypeByName(String name) {,no
todo add undo redo ce add edit new undoable insert entry panel get database entry,,no
action concerned with generate new sub database from latex aux file,public class NewSubLibraryAction extends SimpleCommand {,no
starts search of unlinked files according chosen directory and file type selection search will process in separate thread and progress indicator will be displayed,private void startSearch() {,no
gets filename for current linked file and compares it to new suggested filename,public boolean isGeneratedNameSameAsOriginal() {,no
modified externally,"fieldChanges.add(new FieldChangeViewModel(field, memEntry, tmpEntry, mem.orElse(null), tmp.get(), disk.get()));",no
responsible for managing of threads except gui threads in jab ref,public class JabRefExecutorService {,no
logic is done in open it even raising existing panel,"getOpenDatabaseAction().openFile(file, true);",no
focuses given field,public void requestFocus(Field fieldName) {,yes
set paste action handler variable to passed handler,public void setPasteActionHandler(PasteActionHandler handler) {,yes
gets invoked if user selects different group we need to notify @link state manager about change so that main table gets updated,private void onSelectedGroupChanged(ObservableList<GroupNodeViewModel> newValue) {,no
merge entries,for (BibEntry entry : pr.getDatabase().getEntries()) {,no
panel contains two comboboxes and add button,private GridPane getSelectorPanel() {,no
gets invoked if user changes active database we need to get new group tree and update view,private void onActiveDatabaseChanged(Optional<BibDatabaseContext> newDatabase) {,no
use application if app is specified and just open filename otherwise,"String[] cmd = (application != null) && !application.isEmpty() ? new String[] {""/usr/bin/open"", ""-a"",",no
set default values overwritten if edited group null,keywordGroupSearchField.setText(prefs.get(JabRefPreferences.GROUPS_DEFAULT_FIELD));,no
check if cloned entry has crossref field,clonedEntry.getField(StandardField.CROSSREF).ifPresent(crossref -> {,yes
print icon used for menu,"SpecialFieldViewModel printedViewModel = new SpecialFieldViewModel(SpecialField.PRINTED, undoManager);",no
return string array representing file type is used for storage into preferences and same array can be used to construct file type later using string constructor,private String[] getStringArrayRepresentation(ExternalFileType type) {,no
must be here,Abbreviation abbreviation = journalAbbreviationRepository.getAbbreviation(text).get();,yes
method will write abbreviations of abbreviation file to file on file system it essentially will check if current file is built in list and if not it will call @link abbreviation writer write or create,public void writeOrCreate() throws IOException {,no
constructs @link image for image representing given function in resource file listing images @param name name of icon such as open save save as etc @link image for function,private static Image getImageFX(String name) {,no
need to toggle twice to make sure everything is selected,root.setSelected(true);,no
fetch entries from gui,GlobalBibtexKeyPattern keypatterns = getKeyPatternAsGlobalBibtexKeyPattern();,no
icon set tool tip text localization lang open file file type get name,"TABLE_ICONS.put(fileType.getField(), icon);",yes
default context menu with specific menu for normalizing person names regarding to bib tex rules,public static Supplier<List<MenuItem>> getNameMenu(final TextInputControl textInput) {,no
update map of uniquefiers for benefit of both following generation of new citation markers and for method builds bibliography,"uniquefiers.put(key, String.valueOf((char) uniq));",no
check if of files are already open,for (Iterator<Path> iterator = filesToOpen.iterator(); iterator.hasNext();) {,no
automatically imports files given as arguments,public void automatedImport(List<String> filenames) {,yes
return null if directory is not valid,if ((directory == null) || !directory.exists() || !directory.isDirectory()) {,yes
set bounds graphics environment get local graphics environment get maximum window bounds window location pw new window location this jab ref preferences pos jab ref preferences pos jab ref preferences size jab ref preferences size pw display window at stored location,,yes
css file find,AUTO_FILE_LINK(MaterialDesignIcon.FILE_FIND),no
file,"TABLE_ICONS.put(StandardField.FILE, icon);",yes
here we store names of current files if there is current file we remove previously stored filename,if (filenames.isEmpty()) {,no
add to group,"addToGroups(entries, stateManager.getSelectedGroup(database));",yes
subtree was added or removed,private final GroupTreeNode m_subtreeBackup;,no
run recursive search in background task,public void searchButtonClicked() {,no
read typical java property url into map currently does not support escaping of character it simply looks for first to determine where key ends both key and value is trimmed for whitespace at ends,// FIXME: prefix can be removed?!,no
asks user for confirmation that he really wants to delete file from disk or just remove link,public boolean delete() {,no
different actions depending on where user releases drop in target row bottom top import entries center link files to entry,"switch (ControlHelper.getDroppingMouseLocation(row, event)) {",no
empty tab without database,if (panel == null) {,yes
exporter view model wraps template exporter from logic and is used in exporter customization dialog view and view model,,no
preferences panel for key generation,class BibtexKeyPatternPrefTab extends BibtexKeyPatternPanel implements PreferencesTab {,no
insert factory of loader,"xSet.insert(xImpLoader.activate(""com.sun.star.comp.loader.JavaLoader"", null, null, null));",yes
we try to to prevent publishing changes in search field directly to search task takes time for larger group structures,"final Timer searchTask = FxTimer.create(Duration.ofMillis(400), () -> {",no
build individual layout cards for group,VBox explicitPanel = createOptionsExplicitGroup();,no
installs style file and provides live reloading live reloading has to be turned on by setting code> djabref theme css< code property there two possible modes when only code> djabref theme css< code is specified then standard code base css< code is found will be watched and on changes in file style sheet will be reloaded and changes are immediately visible when path to css file is passed to code> djabref theme css< code then given style is loaded in addition to base css file changes in specified css file lead to immediate redraw of interface when working from ide usually means that code base css< code is located in build folder to use css file is located in sources directly full path can be given as value for vm option code> djabref theme css path to src base css code,public class ThemeLoader {,no
set entry number in case is included in preview layout,ExporterFactory.entryNumber = 1;,no
for reason graphic is not set correctly so let fix to do find way to reuse jab ref icon view,button.graphicProperty().unbind();,no
pass other keys to children,},no
class is indirectly constructed by log4j,"@SuppressWarnings(""unused"")",no
different actions depending on where user releases drop in target row bottom top insert source row before after row center add as child,switch (mouseLocation) {,no
opens file browser of folder of given file if possible file is selected,public static void openFolderAndSelectFile(Path fileLink) throws IOException {,no
fixme prefix can be removed,"private static Map<String, String> readIconThemeFile(URL url, String prefix) {",no
class represents removal of entry constructor needs references to database entry and map of open entry editors latter to be able to close entry editor if it is opened after undo and removal is then undone,public class UndoableRemoveEntry extends AbstractUndoableJabRefEdit {,no
we know that tmp entry is not equal to disk entry check if it has been modified locally as well since last tempfile was saved,"boolean isModifiedLocally = (DuplicateCheck.compareEntriesStrictly(memEntry, tmpEntry) <= 1);",no
preferences might be not initialized in tests return immediately todo replace ugly workaround by proper injection propagation,if (Globals.prefs == null) {,no
merged bib entry,public BibEntry getMergeEntry() {,yes
focuses search field if it is not focused,public void focus() {,yes
decide whether to show tab for given entry,public abstract boolean shouldShow(BibEntry entry);,yes
register undo redo listener,basePanel.getUndoManager().registerListener(new UndoRedoEventManager());,yes
icon set tool tip text localization lang open ar xiv url,"TABLE_ICONS.put(StandardField.EPRINT, icon);",yes
reporting etc method is called on event dispatch thread after push entries returns,void operationCompleted();,no
creates object can undo redo edit event,"public UndoableAddOrRemoveGroup(GroupTreeNodeViewModel groupsRoot,",no
we have to use reflection since table util is not visible to us,try {,no
insert acceptor,"xSet.insert(xImpLoader.activate(""com.sun.star.comp.connections.Acceptor"", null, null, null));",yes
todo font padding customization set font gui globals current font,},no
we have sorted citation markers according to order of appearance so we simply count up for marker referring to new entry,List<Integer> num = new ArrayList<>(keys.length);,no
specific importer,"ParserResult pr = importer.get().importDatabase(filename, Globals.prefs.getDefaultEncoding());",yes
get office component context,XComponentContext xContext = org.jabref.gui.openoffice.Bootstrap.bootstrap(loader);,no
type of editing add node remove node keep children remove node and children,private final int m_editType;,no
font configuration,HBox fontBox = new HBox();,yes
shift on windows or modifier,"LOGGER.debug(""Mode MOVE"");",no
gui component allows editing of fields of bib entry one shows up when you double click on entry in table it hosts tabs required general optional and buttons to left entry editor also registers itself to event bus receiving events whenever field of entry changes enabling text fields to update themselves if change is made from somewhere else,public class EntryEditor extends BorderPane {,no
todo float marked entries model update marking state globals prefs get boolean jab ref preferences float marked entries,,no
ignore,"return new ReadOnlyStringWrapper("""");",yes
find default choice if,Exporter defaultChoice = exporters.stream(),yes
marker appears for more than one unique entry,int uniq = 'a';,no
constructs @link tree table cell based on view model of row and bunch of specified converter methods,"public class ViewModelTableRowFactory<S> implements Callback<TableView<S>, TableRow<S>> {",no
override used newline character with one stored in preferences preferences return system newline character sequence as default,OS.NEWLINE = Globals.prefs.get(JabRefPreferences.NEWLINE);,no
for cited key,for (String key : cited) {,yes
connection string,"String sConnect = ""uno:socket,host=localhost,port=2083"" + "";urp;StarOffice.ComponentContext"";",yes
generates plain text string out of preview and copies it additionally to html to clipboard wysiwyg editors use html plain text editors text,protected static String processPreview(List<String> citations) {,no
ieee tran,"populateSubMenu(items, ""IEEETran"", IEEETranEntryTypeDefinitions.ALL, entry, undoManager);",yes
sort visible components by preferred position,visibleComponents.sort(new PreferredIndexSort());,yes
method should be called after storing preferences calls appropriate method in view model,List<String> getRestartWarnings();,no
should be done after we know it was successfully opened,"ParserResult parserResult = OpenDatabase.loadDatabase(file.toFile(),",no
find default directory for field type,"List<String> dir = databaseContext.getFileDirectories(field, Globals.prefs.getFilePreferences());",yes
set up annotation list,annotationList.getSelectionModel().setSelectionMode(SelectionMode.SINGLE);,yes
bootstraps initial component context with service manager and basic jurt components inserted,"public static XComponentContext createInitialComponentContext(Map<String, Object> context_entries) throws Exception {",no
redo,} else {,no
generate keys for given entries,private void generateKeys(List<BibEntry> entries) {,yes
action keeps reference to url when activated it shows help dialog unless it is already visible and shows url in it,public class HelpAction extends SimpleCommand {,no
only serialize linked files not ones are automatically found,List<LinkedFile> filesToSerialize = files.stream(),no
puts value of concrete class in map previous content stored in map is removed,"public <T> void putValue(Class<T> type, T value) {",no
create default local component context,"XComponentContext xLocalContext = createInitialComponentContext((Map<String, Object>) null);",yes
update appearance of group,anySelectedEntriesMatched.invalidate();,no
checks if there are duplicates to given entry in list of entries to be imported,private Optional<BibEntry> findInternalDuplicate(BibEntry entry) {,no
if there are entries to remove,if (!toRemove.isEmpty()) {,yes
general fields from preferences,"for (Map.Entry<String, Set<Field>> tab : entryEditorPreferences.getEntryEditorTabList().entrySet()) {",no
class for creating information about customizable entry editor tabs,public final class EntryEditorTabList {,no
do not make class final as it otherwise ca not be mocked for tests,public class ExternalFileTypes {,no
refresh reference marks with citation markers we computed,boolean hadBibSection = getBookmarkRange(OOBibBase.BIB_SECTION_NAME) != null;,no
save database,"boolean success = saveDatabase(targetPath, false,",yes
class defines interaction with external application in form of pushing selected entries to it,public interface PushToApplication {,no
hyperlink click listener for javafx web view to open links on click in browser code adapted from href https: stackoverflow com 33445383 >https: stackoverflow com 33445383,"public class OpenHyperlinksInExternalBrowser implements ChangeListener<Worker.State>, EventListener {",no
constructs @link tree table cell based on view model of row and bunch of specified converter methods,"public class ViewModelTreeTableCellFactory<S> implements Callback<TreeTableColumn<S, S>, TreeTableCell<S, S>> {",no
looks up url for image representing given function in resource file listing images,public static URL getIconUrl(String name) {,no
quick hack to disable navigating,"browser.addEventFilter(javafx.scene.input.MouseEvent.ANY, javafx.scene.input.MouseEvent::consume);",no
use received map directly,correctEntries = entries;,yes
register for changes,for (Observable observable : newEntry.getObservables()) {,yes
empty,public SuggestionProviders() {,yes
disables selection,public class NoSelectionModel<T> extends MultipleSelectionModel<T> {,no
moves given component down,public void moveDown(SidePaneComponent comp) {,yes
for case that password is already set,prefs.clearPassword();,no
updated original entry with new fields,Set<Field> jointFields = new TreeSet<>(Comparator.comparing(Field::getName));,no
gui for tab displaying article recommendations based on currently selected bib entry,public class RelatedArticlesTab extends EntryEditorTab {,no
todo null todo null todo null,GroupTreeNode newParent = root.getNode().getDescendant(pathToNewParent).get();,yes
date picker with configurable datetime format where both date and time can be changed via text field and date can additionally be changed via java fx default date picker also supports incomplete dates first recall how date picker normally works user selects date in popup sets value property to selected date converter converter property is used to transform date to string representation and display it in text field idea is now to intercept process and add additional step user selects date in popup sets value property to selected date date is converted to @link temporal accessor enriched by time component using add current time local date string converter string converter property is used to transform temporal accessor to string representation and display it in text field inspiration taken from,public class TemporalAccessorPicker extends DatePicker {,no
simple command does not track progress of action,public abstract class SimpleCommand extends CommandBase {,no
create new entry and add it to undo stack remove other two entries and add them to undo stack is not working,"NamedCompound ce = new NamedCompound(Localization.lang(""Merge entries""));",no
if we are not allowed to overwrite values check if there is non empty value already for entry for new field,Optional<String> valInNewField = entry.getField(newField);,no
holds version in memory check if it has been modified,this.inMem = inMem;,no
class provides view model for abbreviation objects can also define placeholder objects of abbreviations is indicated by using @code pseudo abbreviation property,public class AbbreviationViewModel {,no
todo implement jump to entry todo add toolitp for tag localization lang jump to entry feature was removed while converting linked entries editor to java fx right now there is nice way to re implement it as we have good interface to control focus of main table except directly using jab ref frame class as below parsed entry link get linked entry if present frame get current base panel highlight entry,},no
base panel get preview panel update layout preferences get preview preferences,},yes
mouse location within cell when dropping gesture occurs,public enum DroppingMouseLocation {,no
store changes to table preferences method is called when user clicks ok,@Override,no
todo rework so that we do not rely on jab ref frame and not complete preferences,this.frame = frame;,no
util class for searching files on file system are not linked to provided bib database,public class UnlinkedFilesCrawler extends BackgroundTask<CheckBoxTreeItem<FileNodeWrapper>> {,no
entry type unknown treat fields as required,fields.addAll(entry.getFields());,no
switch to currently selected entry if mode is changed to live,,no
returns list of base panel,public List<BasePanel> getBasePanelList() {,yes
we need to wrap list since otherwise sorting in table does not work,entriesSorted = new SortedList<>(entriesFiltered);,no
creates box of related article information to be used in stack pane displayed in related articles tab,"private ScrollPane getRelatedArticleInfo(List<BibEntry> list, MrDLibFetcher fetcher) {",no
redo change,base.removeString(string.getId());,yes
refresh cite markers in document,"public List<String> refreshCiteMarkers(List<BibDatabase> databases, OOBibStyle style)",yes
todo swing utilities invoke later undo put value action short description event get undo description ;undo set enabled event is can undo ;redo put value action short description event get redo description ;redo set enabled event is can redo,},no
move children to new node then add new node,GroupTreeNode newNode = m_subtreeBackup.copySubtree();,no
checks whether file exists or if new file should be opened file will be added to set of journal abbreviation files if file also exists abbreviations will be read and written to abbreviations property,private void openFile(Path filePath) {,no
todo reflective access should be removed,"Class<?> clazz = Class.forName(""javafx.scene.control.TableUtil"");",no
if user does not change anything with action we do not do anything either even output message,},no
enriches suggestion provider by given set of content selector values,public class ContentSelectorSuggestionProvider implements AutoCompleteSuggestionProvider<String> {,no
revert change,try {,yes
always fill out available space,setPrefHeight(Double.POSITIVE_INFINITY);,no
good bye,tearDownJabRef(filenames);,yes
enrich auto completion by content selector values,try {,no
name reference,"XNamed xNamed = UnoRuntime.queryInterface(XNamed.class, bookmark);",yes
log event will be forwarded to @link log messages archive,@Override,no
to do after conversion of tabs to mvvm rework interface and make valid settings bindable button btn save button this get dialog pane lookup button save button btn save disable property bind view model valid settings valid property not,},no
frame titles,"public static final String FRAME_TITLE = ""JabRef"";",yes
set to true in case command could not be executed if file is not found set to true in case tunnel to program if one is used does not operate set to true if corresponding path is not defined in preferences,protected boolean couldNotCall;,no
add context menu only for non null items,row.contextMenuProperty().bind(,no
copies selected entries and formats them with selected citation style or preview then it is copied to clipboard worker can not be reused,public class CitationStyleToClipboardWorker {,no
class defines type of external files can be linked to from jab ref class contains enough information to provide icon standard extension and link to application handles files of type,public class CustomExternalFileType implements ExternalFileType {,no
error stream has been closed see if there were errors,if (!sb.toString().trim().isEmpty()) {,no
in case it did not work,catch (IOException excep) {,yes
file filter implementation allows only files are not linked in of @link bib entry of specified @link bib database br br file filter sits on top of file filter implementation it first consults only if major filefilter has accepted file implementation will verify on file,public class UnlinkedPDFFileFilter implements FileFilter {,no
sort entries into current members and non members of group current members will be removed current non members will be added,List<BibEntry> toRemove = new ArrayList<>(entries.size());,no
for only full auto completer returns full name smith bob for only abbreviated auto completer returns first name abbreviated smith for both auto completer returns versions,public enum AutoCompleteFirstNameMode {,no
resolve bibtex key from citation reference marker name and look up index of key in list of keys,,no
send event to trigger changes,postUndoRedoEvent();,no
class provides model for managing journal abbreviation lists it provides necessary methods to create modify or delete journal abbreviations and files to visualize model one can bind properties to ui elements,public class ManageJournalAbbreviationsViewModel extends AbstractViewModel {,no
makes sure that given component is visible,public void show(SidePaneType type) {,yes
todo show parserwarnings if not here for import format reader unknown format import imports parser result warning dialog show parser result warning dialog parser result frame,if (bibtexResult == null) {,no
action concerned with opening existing database,public class OpenDatabaseAction extends SimpleCommand {,yes
icon set tool tip text priority view model get localization,"TABLE_ICONS.put(SpecialField.PRIORITY, icon);",yes
check if type has changed,if (!identicalTypes && !typeRadioButtons.isEmpty() && typeRadioButtons.get(0).isSelected()) {,no
in case string converter was provided use default strategy,if (this.stringConverter == null) {,no
installs base css file as stylesheet in given scene changes in css file lead to redraw of scene using new css file,"public void installCss(Scene scene, JabRefPreferences preferences) {",no
todo add undo and display message move group change undo new move group change group tree node view model source get parent get node source get node get position in parent target get node target get child count,,no
except file,return pathname -> true;,yes
current version of installed jab ref,private final Version installedVersion;,yes
occurrence or at end check if there are path separators in suffix if so it is definitely not proper suffix so we should give up,if (strippedLink.substring(strippedLinkIndex + 1).indexOf('/') >= 1) {,yes
method causes open base panels to set up tables anew when called from prefs dialog3 updates to new settings,public void setupAllTables() {,no
pretend that we just switched to current file in order to refresh display,notifyNewSelectedFile(currentFile);,no
pass other keys to parent,},yes
must be executed after initialization of view otherwise it does not work,Platform.runLater(() -> {,no
remember type in case we need to uniquefy,types[i] = type;,no
steps to reproduce,"String howToReproduce = ""Steps to reproduce:\n\n1. ...\n2. ...\n3. ..."";",yes
do not open original file,pr.getDatabaseContext().clearDatabaseFile();,yes
we have to put entry editor previous before because otherwise decrease font size is found first,"ENTRY_EDITOR_PREVIOUS_PANEL_2(""Entry editor, previous panel 2"", Localization.lang(""Entry editor, previous panel 2""), ""ctrl+MINUS"", KeyBindingCategory.VIEW),",no
update active search query when switching between databases,stateManager.activeSearchQueryProperty().set(newBasePanel.getCurrentSearchQuery());,no
create help button for currently selected fetcher,StackPane helpButtonContainer = new StackPane();,yes
in case of removing node but keeping of children number of children has to be stored,private final int m_subtreeRootChildCount;,no
move contents from one field to for collection of entries,"private static UndoableEdit massRenameField(Collection<BibEntry> entries, Field field, Field newField,",no
adding of single node group,public static final int ADD_NODE = 0;,yes
is called when user drops preview layouts either in available list view or in empty space of chosen list view,,no
todo use web search instead as soon as it is available todo use web search instead as soon as it is available,"LOOKUP_IDENTIFIER(MaterialDesignIcon.MAGNIFY),",no
executes task on current thread code is essentially taken from @link javafx concurrent task task callable call but adapted to run sequentially,@Override,no
method returns default key binding key are assigned,public String getDefaultKeyBinding() {,yes
todo add undo undoable add or remove group undo new undoable add or remove group parent new group tree node view model new group node undoable add or remove group add node panel get undo manager add edit undo,,no
test if field is legally set,"new LatexFieldFormatter(fieldFormatterPreferences).format(newValue, fieldName);",no
need to run async otherwise dialog does not work,ControlsFxVisualizer visualizer = new ControlsFxVisualizer();,no
revert change,if (nameChange) {,yes
and adding merged entries,if (!result.getToAdd().isEmpty()) {,yes
remove newlines hyphens before linebreaks,"markingContent = markingContent.replaceAll(""-"" + NEWLINE, """");",yes
creates background task that first runs task and based on result runs second task,"public <T> BackgroundTask<T> thenRun(Function<V, T> nextOperation) {",no
action checks whether new custom entry types were loaded from bib file if so offer to remember entry types is given,public class CheckForNewEntryTypesAction implements GUIPostOpenAction {,no
,"private void openTheFile(Path file, boolean raisePanel) {",no
other fields,"entryEditorTabs.add(new OtherFieldsTab(databaseContext, panel.getSuggestionProviders(), undoManager,",yes
register listener wrapper created by fx collections will set weak listener on wrapped list weak listener gets garbage collected hence we need to maintain reference to list,entriesList = databaseContext.getDatabase().getEntries();,no
try to download fulltext pdf for selected by following url or doi link,public class FindFullTextAction extends SimpleCommand {,no
editor for external file types,public class CustomizeExternalFileTypesDialog extends BaseDialog<Void> {,yes
configure elements,ToggleGroup groupType = new ToggleGroup();,yes
class is essentially wrapper around task we can not use task directly since it runs certain update notifications on java fx thread and so makes testing harder we take opportunity and implement fluid interface,public abstract class BackgroundTask<V> {,no
updates view with contents of given entry,protected abstract void bindToEntry(BibEntry entry);,yes
try to connect to office,Object context = xUrlResolver.resolve(sConnect);,no
switch tab if asked to do so,if (dataBaseNumber >= 0) {,no
store visual state,"new PersistenceVisualStateTable(this, Globals.prefs);",yes
class has abstract ui role as it listens for @link autosave event and saves bib file associated with given @link base panel,public class AutosaveUIManager {,no
set owner timestamp,"UpdateField.setAutomaticFields(entries, updateFieldPreferences);",no
submenu will behave dependent on style is currently selected citation preview,PreviewPreferences previewPreferences = Globals.prefs.getPreviewPreferences();,no
find linking footnote marker,"XFootnote footer = UnoRuntime.queryInterface(XFootnote.class, range.getText());",no
tests if we are running acceptable java and terminates jab ref when we are sure version is not supported test uses requirements for java version as specified in code gradle build< code it is possible to define minimum version including built number and to indicate whether java can be used it currently ca not it tries to compare version number to version of currently running jvm check is optimistic and will rather return true even if we could not exactly determine version note users with very old version like will not profit from since class versions are incompatible and jab ref wo not even start currently jab ref wo not start with java either but warning that it can not be used with version is helpful anyway to prevent users to update from old directly to version additionally we soon might have jab ref does start with java but is not perfectly compatible therefore we should leave java check alive,private static void ensureCorrectJavaVersion() {,no
subscribe to type changes for rebuilding currently visible tab,"typeSubscription = EasyBind.subscribe(this.entry.typeProperty(), type -> {",yes
may happen during initialization just ignore,continue;,no
look for last in link and return following characters gives extension for most reasonably named links,public static Optional<String> getSuffix(final String link) {,no
selected group show entries,return Optional.empty();,no
headings,"private final List<String> columnHeadings = Arrays.asList(Localization.lang(""Field""),",yes
get text content interface,"XTextContent xTextContent = UnoRuntime.queryInterface(XTextContent.class, bookmark);",yes
method to change current abbrevaition property to new abbreviation,"public void editAbbreviation(String name, String abbreviation) {",yes
update merged entry,private void updateMergedEntry() {,yes
release panel from save status,panel.setSaving(false);,yes
set text of of boxes,if (exporter != null) {,yes
do nothing,} else if (answer == DuplicateResolverDialog.DuplicateResolverResult.KEEP_MERGE) {,yes
class represents removal of entry constructor needs references to database entry and map of open entry editors latter to be able to close entry editor if it is opened before insert is undone,public class UndoableInsertEntry extends AbstractUndoableJabRefEdit {,no
method is called to indicate that settings panel returned from get settings panel method has been shown to user and that user has indicated that settings should be stored method must store state of widgets in settings panel to globals prefs,public void storeSettings() {,no
check given possible suggestion is match is valid suggestion,"protected abstract boolean isMatch(T suggestion, ISuggestionRequest request);",yes
read name format options mk,final boolean namesNatbib = Globals.prefs.getBoolean(JabRefPreferences.NAMES_NATBIB); //MK:,yes
method inserts cite marker in text for given bib entry and may refresh bibliography,"public void insertEntry(List<BibEntry> entries, BibDatabase database,",no
fixme move to view model until field formatter cleanups panel is property implemented,MetaData metaData = panel.getBibDatabaseContext().getMetaData();,no
since directory does not exist we can not move it to there so option is not checked regardless of presets stored in preferences,cleanUpMovePDF.setDisable(true);,no
todo reflective access should be removed,"Field privatePopup = AutoCompletionBinding.class.getDeclaredField(""autoCompletionPopup"");",no
ensure that there is always only one all entries group,if (newGroups.getGroup() instanceof AllEntriesGroup) {,no
class for manipulating bibliography of currently start document in open office,class OOBibBase {,no
check for running jab ref,if (!handleMultipleAppInstances(arguments) || argumentProcessor.shouldShutDown()) {,no
mac adapter calls method when about is selected from application menu,public void about() {,no
todo be bit smarter and try to infer correct icon for example using @link external file types get external file type by name string,public JabRefIcon getTypeIcon() {,no
restore focus to field run async so editor is already initialized correctly,selectedFieldName.ifPresent(this::requestFocus);,no
get page number of current page in document,public abstract int getPageNumber();,yes
first see if stripped link gives reasonable suffix,String suffix;,no
hide progress indicator if finished over 70 loaded,"browser.getEngine().getLoadWorker().progressProperty().addListener((observable, oldValue, newValue) -> {",no
fields,for (Field field : jointFields) {,yes
ask if keys should be generated,"boolean citePressed = dialogService.showConfirmationDialogAndWait(Localization.lang(""Cite""),",yes
quote string so explorer handles url query strings correctly,"String quotePath = ""\"""" + filePath + ""\"""";",no
class provides model for abbreviation files it actually does not save files as objects but rather saves paths also allows to specify pseudo files as placeholder objects,public class AbbreviationsFileViewModel {,no
set language to none,"xCursorProps.setPropertyValue(""CharLocale"", new Locale(""zxx"", """", """"));",no
to align with buttons below also have 5em padding,"info.setStyle(""-fx-padding: 0.5em 0 0.5em 0;"");",no
todo switch icon color search icon set icon icon theme jab ref icon search get icon,},no
entry currently shown,private Optional<BibEntry> entry = Optional.empty();,no
setting multi value special field setted value is displayed too,"String[] allParams = {viewModel.getLocalization(), params[0], params[1]};",no
first hide old page and show background instead recalculate size of background to make sure correct,background.setWidth(getDesiredWidth());,no
for reason graphic is not set correctly so let fix,"setGraphic(menu, action);",no
exception used to indicate that plugin attempted to set character format is not defined in current open office document,class UndefinedCharacterFormatException extends Exception {,no
submits one shot task becomes enabled after given delay,"<V> Future<?> schedule(BackgroundTask<V> task, long delay, TimeUnit unit);",no
css folder,OPEN(MaterialDesignIcon.FOLDER_OUTLINE),no
action may only be used in menu or button never in entry editor file list editor and entry editor have other ways to update file links,public class AutoLinkFilesAction extends SimpleCommand {,no
backwards compatibility stub,"public static XComponentContext createInitialComponentContext(Hashtable<String, Object> context_entries) throws Exception {",no
swing,requires java.desktop;,yes
preferences and xml,requires java.prefs;,yes
annotations @post construct,requires java.annotation;,yes
libre office,requires org.jabref.thirdparty.libreoffice;,yes
mocking class used as placeholder for real oracle jdbc drivers to prevent build errors,public class DatabaseChangeEvent {,no
data,},no
mocking class used as placeholder for real oracle jdbc drivers to prevent build errors,public interface DatabaseChangeListener {,no
mocking class used as placeholder for real oracle jdbc drivers to prevent build errors,public class DatabaseChangeRegistration {,no
do nothing,},yes
fixme reuse search worker here,"SearchQuery searchQuery = new SearchQuery(""Journal Title 500"", false, false);",no
fixme reuse search worker here,"SearchQuery searchQuery = new SearchQuery(""Journal Title 500"", false, false);",no
mocking class used as placeholder for real oracle jdbc drivers to prevent build errors,public class OracleConnection implements Connection {,no
mocking class used as placeholder for real oracle jdbc drivers to prevent build errors,public class OracleDriver {,no
mocking class used as placeholder for real oracle jdbc drivers to prevent build errors,public class OracleStatement {,no
package contains stubs for oracle jdbc to prevent build errors if non distributable oraclejdbdc6 jar is unavailable in classpath,package oracle.jdbc;,no
empty,},yes
annotation to indicate that usage of apache commons lang3 is explicitly allowed intention is to fully switch to google guava and only use apache commons lang3 if there is other possibility,public @interface ApacheCommonsLang3Allowed {,no
rationale,String value();,yes
print statistics,System.out.println(new AuxParserResultViewModel(result).getInformation(true));,no
defines different modes that base panel can operate in,,no
puts content onto clipboard,public void setContent(ClipboardContent content) {,yes
get string residing on clipboard text found on clipboard if none found return empty string,public String getContents() {,yes
will open file like import file but will also request jab ref to focus on database,private static Optional<ParserResult> importToOpenBase(String argument) {,no
run entry fetcher from command line,private Optional<ParserResult> fetch(String fetchCommand) {,no
download web resource to temporary file,try {,yes
means guess format,"System.out.println(Localization.lang(""Importing in unknown format"") + "": "" + file);",no
check if we should reset preferences to default values,if (cli.isPreferencesReset()) {,no
check if we should import preferences from file,if (cli.isPreferencesImport()) {,yes
list to put imported loaded database in,List<ParserResult> loaded = importAndOpenFiles();,yes
enables blanks within search term stands for blank,"String searchTerm = data[0].replace(""\\$"", "" "");",no
export matches,if (!matches.isEmpty()) {,no
read in export format take default format if format entered,switch (data.length) {,no
default exporter html table with abstract bib te,"formatName = ""tablerefsabsbib"";",no
export new database,Optional<Exporter> exporter = Globals.exportFactory.getExporterByName(formatName);,no
leftover arguments have bib extension are interpreted as bib files to open other files and files could not be opened as bib we try to import instead,"boolean bibExtension = aLeftOver.toLowerCase(Locale.ENGLISH).endsWith(""bib"");",no
we will try to import file normally we will import it into new tab but if import has been initiated by instance through remote listener we will instead import it into current library will enable easy integration with web browsers can open reference file in jab ref,if (startupMode == Mode.INITIAL_START) {,no
write output if something could be resolved,if ((newBase != null) && newBase.hasEntries()) {,no
show just warning message if encoding did not work for characters,if (fileWriter.hasEncodingProblems()) {,yes
signals that latest import should be stored in bib te format to given file,if (!loaded.isEmpty()) {,no
signals that latest import should be stored in given format to given file,ParserResult pr = loaded.get(loaded.size() - 1);,no
set global variable for database file directory before exporting so formatters can resolve linked files correctly is ugly hack,File theFile = pr.getFile().get();,no
string clear search clear search main table get input map put globals get key prefs get key key binding clear search clear search main table get action map put clear search new abstract action @override public void action performed action event need to close here action overshadows responsible actions when main table is selected switch mode case showing nothing frame get global search bar end search break case showing preview get preview panel close break case showing editor case will show editor entry editor closing get entry editor break default logger warn unknown base panel mode mode doing nothing break main table get action map put actions cut new abstract action @override public void action performed action event try run command actions cut catch throwable ex logger warn could not cut ex main table get action map put actions copy new abstract action @override public void action performed action event try run command actions copy catch throwable ex logger warn could not copy ex main table get action map put actions paste new abstract action @override public void action performed action event try run command actions paste catch throwable ex logger warn could not paste ex,},no
search can lead to unexpected 100 cpu usage is perceived as bug if search incidentally starts at directory with lots of stuff below it is now disabled by default,private class SearchAutoCompleteListener {,no
returns collection of suggestion providers are populated from current library,public SuggestionProviders getSuggestionProviders() {,no
generates and copies citations based on selected entries to clipboard @param output format desired @link citation style output format,private void copyCitationToClipboard(CitationStyleOutputFormat outputFormat) {,no
removes selected entries from database @param cut if false user will get asked if he really wants to delete entries and it will be localized as deleted if true action will be localized as cut,public void delete(boolean cut) {,no
method is called from jab ref frame if database specific action is requested by user runs command if it is defined or prints error message to standard error stream,public void runCommand(final Actions command) {,no
method is called from jab ref frame when user wants to create new entry bib entry new entry,public void insertEntry(final BibEntry bibEntry) {,no
set up auto completion for database,private void setupAutoCompletion() {,yes
sets entry editor as bottom component in split pane if entry editor already was shown makes sure that divider does not move updates mode to showing editor then shows given entry @param entry entry to edit,public void showAndEdit(BibEntry entry) {,no
method selects given entry and scrolls it into view in table if entry editor is shown it is given focus afterwards,public void clearAndSelect(final BibEntry bibEntry) {,no
method is called from entry editor when it should be closed we relay to selection listener takes care of rest,public void entryEditorClosing() {,no
closes entry editor if it is showing given entry,private void ensureNotShowingBottomPanel(BibEntry entry) {,no
depending on whether preview or entry editor is showing save current divider location in correct preference setting,private void saveDividerLocation(Number position) {,no
get array containing currently selected entries array is stable and not changed if selection changes list containing selected entries is never null,public List<BibEntry> getSelectedEntries() {,no
set query user currently searches while basepanel is active,public void setCurrentSearchQuery(Optional<SearchQuery> currentSearchQuery) {,no
ensures that search auto completer is up to date when entries are changed aka let auto completer if harvest words from entry actual methods for autocomplete indexingmust run in javafx thread,private class SearchAutoCompleteListener {,no
ensures that results of current search are updated when new entry is inserted into database actual methods for performing search must run in javafx thread,private class SearchListener {,no
keeps track of string dialog if it is open,"private final Map<Actions, BaseAction> actions = new HashMap<>();",no
to contain instantiated entry editors is to save time as most enums must not be null,private BasePanelMode mode = BasePanelMode.SHOWING_NOTHING;,no
auto completer used in search bar,private PersonNameSuggestionProvider searchAutoCompleter;,yes
used to track whether base has changed since last save,private BibEntry showing;,no
query user searches when base panel is active,private Optional<SearchQuery> currentSearchQuery = Optional.empty();,no
ensure that at addition of new entry entry is added to groups interface,this.bibDatabaseContext.getDatabase().registerListener(new GroupTreeListener());,no
ensure that entry changes mark panel as changed,this.bibDatabaseContext.getDatabase().registerListener(this);,no
check if file is modified,"String changeFlag = isModified() && !isAutosaveEnabled ? ""*"" : """";",yes
if database is not empty and file is assigned database came from import and has to be treated somehow mark as changed also happens internally at basepanel to ensure consistency line 224,title.append('*');,no
action for copying selected entries,"actions.put(Actions.COPY, this::copy);",yes
action for pasting entries or cell contents more robust detection of available content flavors does not only look at first one offered support for parsing string flavor clipboard contents are bibtex entries allows you to paste entire bibtex entries from text editor web browser etc copy and paste entries between multiple instances of jab ref since only text representation seems to get as far as clipboard at least on system,"actions.put(Actions.PASTE, this::paste);",no
action for copying selected entry key,"actions.put(Actions.COPY_KEY, this::copyKey);",yes
action for copying selected entry title,"actions.put(Actions.COPY_TITLE, this::copyTitle);",yes
action for copying cite for selected entry,"actions.put(Actions.COPY_CITE_KEY, this::copyCiteKey);",no
action for copying bib te keys as hyperlinks to urls of selected entries,"actions.put(Actions.COPY_KEY_AND_LINK, new CopyBibTeXKeyAndLinkAction(mainTable, Globals.clipboardManager));",no
collect non null titles,List<String> titles = selectedBibEntries.stream(),no
entries had titles,"output(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(copiedTitles) + ""'."");",no
collect non null keys,for (BibEntry be : bes) {,yes
entries had keys,"output(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(copiedCiteCommand) + ""'."");",no
collect non null keys,for (BibEntry be : bes) {,yes
entries had keys,"output(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(copiedKeys) + ""'."");",no
ok in future version string should be configurable to allow arbitrary exports,"StringReader sr = new StringReader(""\\bibtexkey - \\begin{title}\\format[RemoveBrackets]{\\title}\\end{title}\n"");",no
collect non null keys,for (BibEntry be : bes) {,yes
entries had keys,"output(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(copiedKeysAndTitles) + ""'."");",no
set owner and timestamp,"UpdateField.setAutomaticFields(bibEntry, true, true, Globals.prefs.getUpdateFieldPreferences());",no
create undoable insert entry object,"getUndoManager().addEdit(new UndoableInsertEntry(bibDatabaseContext.getDatabase(), bibEntry));",yes
database just changed,markBaseChanged();,yes
focus field and entry in main table async to give entry editor time to load,entryEditor.setFocusToField(field);,no
add listener binds selection to state manager todo should be replaced by proper java fx binding as soon as table is implemented in java fx,mainTable.addSelectionListener(listEvent -> Globals.stateManager.setSelectedEntries(mainTable.getSelectedEntries()));,no
update entry editor and preview according to selected entries,mainTable.addSelectionListener(event -> mainTable.getSelectedEntries(),no
todo register actions globally,/*,no
restore last splitting state before main table is created as creation affects stored size of entry editors,adjustSplitter();,no
set up name autocompleter for search,instantiateSearchAutoCompleter();,yes
saves divider position as soon as it changes we need to keep reference to subscription otherwise binding gets garbage collected,"dividerPositionSubscription = EasyBind.monadic(Bindings.valueAt(splitPane.getDividers(), 0))",no
create change monitor and change pane so we get notifications about outside changes to file,resetChangeMonitorAndChangePane();,no
if database is not empty and file is assigned database came from import and has to be treated somehow mark as changed,this.baseChanged = true;,no
ensure that suggestion providers are in sync with entries,CoarseChangeFilter changeFilter = new CoarseChangeFilter(bibDatabaseContext);,no
create empty suggestion providers if auto completion is deactivated,suggestionProviders = new SuggestionProviders();,no
put asterisk behind filename to indicate database has changed,frame.setWindowTitle();,no
run search operation,FileFinder fileFinder = FileFinders.constructFromConfiguration(Globals.prefs.getAutoLinkPreferences());,no
automatically add new entry to selected group or set of groups,if (Globals.prefs.getBoolean(JabRefPreferences.AUTO_ASSIGN_GROUP)) {,no
imo only used to update status found entries,DefaultTaskExecutor.runInJavaFXThread(() -> frame.getGlobalSearchBar().performSearch());,no
url or doi found in url and doi fields look for web links in file field as fallback,,no
useful for checking out new algorithm improvements and thresholds not used inside jab ref code itself,public class CrossrefFetcherEvaluator {,no
method takes care of creating dependencies by default it just creates new instance of class dependencies without default constructor are constructed by hand,private static Object createDependency(Class<?> clazz) {,no
use own method to construct dependencies,Injector.setInstanceSupplier(DefaultInjector::createDependency);,no
interface provides methods to create dialogs and show them to user,public interface DialogService {,no
will create and display new @link choice dialog of type with default choice and collection of possible choices @impl note implementation should accept @code null for @code default choice but callers should use @link show choice dialog and wait string string string collection,"<T> Optional<T> showChoiceDialogAndWait(String title, String content, String okButtonLabel, T defaultChoice, Collection<T> choices);",no
will create and display new @link text input dialog with text fields to enter data,"Optional<String> showInputDialogAndWait(String title, String content);",no
will create and display new @link text input dialog with text field with default value to enter data,"Optional<String> showInputDialogWithDefaultAndWait(String title, String content, String defaultValue);",yes
will create and display new information dialog it will include blue information icon on left and single ok button to create information dialog with custom buttons see also @link show custom button dialog and wait alert alert type string string button type,"void showInformationDialogAndWait(String title, String content);",no
will create and display new information dialog it will include yellow warning icon on left and single ok button to create warning dialog with custom buttons see also @link show custom button dialog and wait alert alert type string string button type,"void showWarningDialogAndWait(String title, String content);",no
will create and display new error dialog it will include red error icon on left and single ok button to create error dialog with custom buttons see also @link show custom button dialog and wait alert alert type string string button type,"void showErrorDialogAndWait(String title, String content);",no
create and display error dialog displaying given exception @param message error message @param exception exception causing error,"void showErrorDialogAndWait(String message, Throwable exception);",yes
create and display error dialog displaying given exception @param exception exception causing error,"void showErrorDialogAndWait(String title, String content, Throwable exception);",yes
create and display error dialog displaying given message,void showErrorDialogAndWait(String message);,yes
will create and display new confirmation dialog it will include blue question icon on left and ok and cancel button to create confirmation dialog with custom buttons see also @link show custom button dialog and wait alert alert type string string button type,"boolean showConfirmationDialogAndWait(String title, String content);",no
create and display new confirmation dialog it will include blue question icon on left and ok with given label and cancel button to create confirmation dialog with custom buttons see also @link show custom button dialog and wait alert alert type string string button type,"boolean showConfirmationDialogAndWait(String title, String content, String okButtonLabel);",no
create and display new confirmation dialog it will include blue question icon on left and ok with given label and cancel also with given label button to create confirmation dialog with custom buttons see also @link show custom button dialog and wait alert alert type string string button type true if use clicked ok otherwise false,"boolean showConfirmationDialogAndWait(String title, String content, String okButtonLabel, String cancelButtonLabel);",no
create and display new confirmation dialog it will include blue question icon on left and yes with given label and cancel also with given label button to create confirmation dialog with custom buttons see also @link show custom button dialog and wait alert alert type string string button type moreover dialog contains opt out checkbox with given text to support do not ask again behaviour,"boolean showConfirmationDialogWithOptOutAndWait(String title, String content,",no
create and display new confirmation dialog it will include blue question icon on left and yes with given label and cancel also with given label button to create confirmation dialog with custom buttons see also @link show custom button dialog and wait alert alert type string string button type moreover dialog contains opt out checkbox with given text to support do not ask again behaviour,"boolean showConfirmationDialogWithOptOutAndWait(String title, String content,",no
shows custom dialog and returns result @param dialog dialog to show type of result,<R> Optional<R> showCustomDialogAndWait(Dialog<R> dialog);,yes
constructs and shows canceable progress dialog clicking cancel will cancel underlying service and close dialog @param title title of dialog @param content message to show above progress bar @param task task executes work and for to show dialog,"<V> void showProgressDialogAndWait(String title, String content, Task<V> task);",no
,void notify(String message);,no
shows new file save dialog method does not return until displayed file save dialog is dismissed return value specifies file chosen by user or empty optional if selection has been made after file was selected given file dialog configuration is updated with selected extension type if,Optional<Path> showFileSaveDialog(FileDialogConfiguration fileDialogConfiguration);,no
shows new file open dialog method does not return until displayed open dialog is dismissed return value specifies file chosen by user or empty optional if selection has been made after file was selected given file dialog configuration is updated with selected extension type if selected file or empty optional if file has been selected,Optional<Path> showFileOpenDialog(FileDialogConfiguration fileDialogConfiguration);,no
shows new file open dialog method does not return until displayed open dialog is dismissed return value specifies files chosen by user or empty list if selection has been made selected files or empty list if file has been selected,List<Path> showFileOpenDialogAndGetMultipleFiles(FileDialogConfiguration fileDialogConfiguration);,no
shows new directory selection dialog method does not return until displayed open dialog is dismissed return value specifies file chosen by user or empty optional if selection has been made selected directory or empty optional if directory has been selected,Optional<Path> showDirectorySelectionDialog(DirectoryDialogConfiguration directoryDialogConfiguration);,no
displays print dialog allow user to update job state such as printer and settings changes will be available in appropriate properties after print dialog has returned print dialog is also used to confirm user wants to proceed with printing,boolean showPrintDialog(PrinterJob job);,no
shows new dialog list files contained in given archive and lets user select one of files method does not return until displayed open dialog is dismissed return value specifies file chosen by user or empty optional if selection has been made selected file or empty optional if file has been selected,Optional<Path> showFileOpenFromArchiveDialog(Path archivePath) throws IOException;,no
contains different @link data format may occur in jab ref,public class DragAndDropDataFormats {,no
dialog prompts user to choose type for entry returns null if canceled,public class EntryTypeView extends BaseDialog<EntryType> {,no
button type will always be cancel even if we pressed one of entry type buttons,return type;,no
we set managed property so that they will only be rendered when they are visble so that nodes only take space when visible avoids removing and adding from scence graph,bibTexTitlePane.managedProperty().bind(bibTexTitlePane.visibleProperty());,no
do nothing,break;,yes
class provides super class for dialogs implemented in java fx to create custom java fx dialog one should create instance of class and set dialog pane through inherited @link dialog set dialog pane dialog pane method dialog can be shown via @link dialog show or @link dialog show and wait layout of pane should be defined in external fxml file and loaded it via @link fxml loader,public class FXDialog extends Alert {,no
field is initialized upon startup only gui code is allowed to access it logic code should use dependency injection,public static JournalAbbreviationLoader journalAbbreviationLoader;,no
field is initialized upon startup only gui code is allowed to access it logic code should use dependency injection,public static ProtectedTermsLoader protectedTermsLoader;,no
manager for state of gui,,no
remote listener,public static final RemoteListenerServerLifecycle REMOTE_LISTENER = new RemoteListenerServerLifecycle();,yes
in main program field is initialized in jab ref java test case initializes field if required,public static JabRefPreferences prefs;,no
key binding preferences,private static KeyBindingRepository keyBindingRepository;,no
key binding preferences,public static synchronized KeyBindingRepository getKeyPrefs() {,yes
background tasks,public static void startBackgroundTasks() throws JabRefException {,yes
fixme workaround for bug,SDKShutdownActivity.INSTANCE.stopAll();,no
static variables for graphics files and keyboard shortcuts,public class GUIGlobals {,no
perform initializations are only used in graphical mode is to prevent xlib connection to refused by server error when access to server on un*x is unavailable,public static void init() {,no
add additional space to improve appearance,public static final int WIDTH_ICON_COL = 16 + 12;,no
width of ranking icon column,public static final int WIDTH_ICON_COL_RANKING = 5 * 16;,yes
set up entry editor colors first time,GUIGlobals.updateEntryEditorColors();,no
update preferences,"Globals.prefs.putInt(JabRefPreferences.FONT_SIZE, size);",yes
number of characters per line,private static final int WIDTH = 100;,no
boolean options,"options.addOption(""h"", ""help"", false, Localization.lang(""Display help on command line options""));",no
class provides methods to create default java fx dialogs will also work on top of swing windows created dialogs are instances of @link fx dialog class available dialogs in class are useful for displaying small information graphic dialogs rather than complex windows for more complex dialogs it is advised to rather create new sub class of @link fx dialog,public class JabRefDialogService implements DialogService {,no
need to force alert to layout in order to grab graphic as we are replacing dialog pane with custom pane,alert.getDialogPane().applyCss();,no
create new dialog pane has checkbox instead of hide show details button use supplied callback for action of checkbox,alert.setDialogPane(new DialogPane() {,no
fool dialog into thinking there is expandable content group wo not take up space if it has children,alert.getDialogPane().setExpandableContent(new Group());,no
jab ref launcher,public class JabRefLauncher {,yes
side pane is displayed at left side of jab ref and shows instances of @link side pane component,public class SidePane extends BorderPane {,no
override method if component needs to make changes before it can close,public void beforeClosing() {,no
override method if component needs to do actions after it is shown,public void afterOpening() {,no
nothing to do by default,},yes
auto generated method stub,return null;,yes
auto generated method stub,return false;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,,yes
auto generated method stub,return false;,yes
auto generated method stub,,yes
auto generated method stub,,yes
auto generated method stub,,yes
auto generated method stub,return false;,yes
auto generated method stub,return null;,yes
auto generated method stub,,yes
auto generated method stub,return false;,yes
auto generated method stub,,yes
auto generated method stub,return null;,yes
auto generated method stub,,yes
auto generated method stub,return 0;,yes
auto generated method stub,return null;,yes
auto generated method stub,,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,,yes
auto generated method stub,,yes
auto generated method stub,return 0;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,,yes
auto generated method stub,,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return false;,yes
auto generated method stub,,yes
auto generated method stub,,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,return null;,yes
auto generated method stub,,yes
auto generated method stub,return null;,yes
auto generated method stub,,yes
auto generated method stub,,yes
auto generated method stub,return 0;,yes
