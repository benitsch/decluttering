@impl Note taken from {@link com sun javafx scene control behavior Text Area Behavior context Menu Requested(javafx scene input Context Menu Event)}
public static void show Context Menu( Text Area text Area Context Menu context Menu Context Menu Event e) {
icon set Tool Tip Text(printed View Model get Localization())
TABLE ICONS put( Special Field PRINTED icon)
Synchronize changes of the underlying date value with the temporal Accessor Value
Bindings Helper bind Bidirectional(value Property() temporal Accessor Value
Ask if the user really wants to close the given database
private boolean confirm Close( Base Panel panel) {
css information *
INTEGRITY INFO( Material Design Icon INFORMATION)
Check if there is a default type with the same name If so this is a modification of that type so remove the default one
External File Type to Remove = null
each entry type
for ( Map Entry< Entry Type Text Field> entry text Fields entry Set()) {
TODO Username domain and identity should be included as in NET version TODO Should check seems that it is not included in Log4j2
Already parsed via command line parameter e g "jabref jar somefile bib"
if (is Loaded(db File) || !db File exists()) {
finally add things to the currently opened tab
for ( Parser Result pr to Open Tab) {
To simplify the exporter API we simply do a normal export to a temporary file and read the contents afterwards
tmp = Files create Temp File("jabref Cb" " tmp")
This class monitors a set of files for changes Upon detecting a change it notifies the registered {@link File Update Listener}s Implementation based on https
public class Default File Update Monitor implements Runnable File Update Monitor {
for Auto Group
private final Radio Button auto Group Keywords Option = new Radio Button( Localization lang(" Generate groups from keywords in a Bib Te X field"))
Creates a new list in which each element is converted using the provided mapping All changes to the underlying list are propagated to the converted list In contrast to {@link org fxmisc easybind Easy Bind map( Observable List Function)} the items are converted when the are inserted (and at the initialization) instead of when they are accessed Thus the initial CPU overhead and memory consumption is higher but the access to list items is quicker
public static <A B> Mapped List<B A> map Backed( Observable List<A> source Function<A B> mapper) {
Sets the {@link Consumer} that is invoked after the task has failed with an exception The consumer always runs on the Java FX thread
public Background Task<V> on Failure( Consumer< Exception> on Exception) {
/ TODO Add undo final Undoable Modify Subtree undo = new Undoable Modify Subtree(get Group Tree Root() node " Remove subgroups") panel get Undo Manager() add Edit(undo)
group get Group Node() remove All Children()
db file exists
if (base Panel get Bib Database Context() get Database File() is Present()) {
Another (unlikely ) possibility is that both disk and mem version has been modified in the same way Check for this too
boolean modifications Agree = ( Duplicate Check compare Entries Strictly(mem Entry disk Entry) > 1)
Should only occur when preferences are set directly via preferences put and not via set Firstname Mode
return Auto Complete First Name Mode BOTH
Dir must be a folder not a file
} else {
This method is called when the user presses OK in the Preferences dialog This calls the appropriate method in the View Model
void store Settings()
TODO doesn't work for citations in footnotes/tables
List< String> names = get Sorted Reference Marks(name Access)
Save
save()
Constructor with optional column captions for the two entries
public Merge Entries( Bib Entry entry Left Bib Entry entry Right String heading Left String heading Right Bib Database Mode type) {
If content selector values are present then we want to show the auto complete suggestions immediately on focus
auto Completer set Show On Focus(true)
This is called when the user drops some Preview Layouts on another cell in chosen List View to sort them
Helper methods for javafx binding Some methods are taken from https
public class Bindings Helper {
Formats a String to multiple Texts by replacing some parts and adding font characteristics
public static List< Text> format To Texts( String original Text Replacement replacements) {
Copies the given list of {@link Log Event}s to the clipboard
public void copy Log( List< Log Event View Model> messages) {
All entries had keys
Jab Ref GUI get Main Frame() get Dialog Service() notify( Localization lang(" Copied") + " '" + Jab Ref Dialog Service shorten Dialog Message(key And Link) + "' ")
Add radio buttons if the two entries do not have identical fields
if (identical Fields contains(field)) {
Delivers possible completions as a list of {@link Bib Entry} based on their cite key
public class Bib Entry Suggestion Provider extends Suggestion Provider< Bib Entry> implements Auto Complete Suggestion Provider< Bib Entry> {
css eye *
READ STATUS( Material Design Icon EYE)
Method to add a new abbreviation to the abbreviations list property It also sets the current Abbreviation property to the new abbreviation
public void add Abbreviation( String name String abbreviation) {
Class for handling general actions cut copy and paste The focused component is kept track of by Globals focus Listener and we call the action stored under the relevant name in its action map
private class Edit Action extends Simple Command {
Returns a new Observable Value that holds the value held by this Observable Value or {@code other} when this Observable Value is empty
public Object Binding<T> or Else(T other) {
A command that is only executable if a database is open Deprecated use instead
@ Deprecated
Define focused tab
if (pr get File() filter(path > path get Absolute Path() equals(focused File)) is Present()) {
A single tab displayed in the Entry Editor holding several Field Editors
abstract class Fields Editor Tab extends Entry Editor Tab {
poll with timeout in case the library is not analyzed completely but contains no more duplicates
dups = this duplicates poll(100 Time Unit MILLISECONDS)
Clears the current log
public void clear Log() {
Sets a a new key bind to this objects key binding object if the given key event is a valid combination of keys
public boolean set New Binding( Key Event evt) {
Revert the change
base set Preamble(old Value)
Fade new page in for smoother transition
Fade Transition fade In = new Fade Transition( Duration millis(100) image View)
css rss *
BLOG( Material Design Icon RSS)
Get the search describer for a given search query
public static Search Describer get Search Describer For( Search Query search Query) {
Does the actual operation on a Bibtex entry based on the settings specified in this same dialog Returns the number of occurrences replaced
private int replace Item( Bib Entry entry Named Compound compound) {
should be opened in browser
field = Standard Field URL
Returns the Hash Map containing all key bindings
public Sorted Map< Key Binding String> get Key Bindings() {
Add menu for fetching bibliographic information
Context Menu fetcher Menu = new Context Menu()
ctrl on win
LOGGER debug(" Mode Copy")
Adds the specified node as a child of the current root The group contained in new Groups must not be of type All Entries Group since every tree has exactly one All Entries Group (its root) The new Groups are inserted directly i e they are not deep Copy()'d
private static void add Groups( Group Tree Node new Groups Compound Edit ce) {
Adds the given entries to this node's group
public List< Field Change> add Entries To Group( List< Bib Entry> entries) {
No we canceled (or there is no panel to get the database from highly unlikely)
return false
default
return Group Hierarchy Type INDEPENDENT
Bug report body
String issue Body = system Info + "\n\n" + how To Reproduce + "\n\n" + " Paste your log details here "
Do nothing by default
}
Text after the citation
if (end < line length()) {
The only instance of this class
private static External File Types singleton
Placeholder class for a custom generic type safe dragboard to be used in drag and drop does not depend on serialization Don't use this class directly Use the instance provided in {@link GUI Globals local Dragboard}
public class Custom Local Dragboard {
Search and import unknown references from associated BIB files
public void import Button Clicked() {
A wizard dialog for generating a new sub database from existing Te X AUX file
public class From Aux Dialog extends Base Dialog< Void> {
Shows a dialog with the warnings from an import or open of a file
public static void show Parser Result Warning Dialog(final Parser Result parser Result final Jab Ref Frame jab Ref Frame
get permutation array
int[] permutation = new int[to from]
Set pseudo classes to indicate if row is root or sub item ( > 1 deep)
Pseudo Class root Pseudo Class = Pseudo Class get Pseudo Class("root")
Don't report this error since this getting the suffix is a non critical operation and this error will be triggered and reported elsewhere
}
Selected entries
entries = frame get Current Base Panel() get Selected Entries()
For all fields in joint add a row and possibly radio buttons
int row = 2
Puts A List of {@link Preview Layout} in the map All previous content is cleared
public void put Preview Layouts( List< Preview Layout> preview Layouts) {
Remove the entry from the import inspection dialog
entries remove(entry)
Second check if the duplicate is of another entry in the import
other = find Internal Duplicate(entry)
TODO Remove old entry Or add it to a list of entries to be deleted We only delete it after Ok is clicked entries To Delete add(other get())
} else if (result == Duplicate Resolver Dialog Duplicate Resolver Result KEEP RIGHT) {
Taken from https
public Image render(int width int height) {
Check if this looks like a remote link
if (REMOTE LINK PATTERN matcher(link) matches()) {
Get list of exporters and sort before adding to file dialog
List< Exporter> exporters = Globals export Factory get Exporters() stream()
Save all properties dependent on the ID This makes it possible to restore them
new Shared Database Preferences(context get Database() generate Shared Database ID())
Initialize protected terms loader
Globals protected Terms Loader = new Protected Terms Loader( Globals prefs get Protected Terms Preferences())
Returns Menu Item Container node associated with this menu item which can contain 1 label node of type Label for displaying menu item text 2 right node of type Label for displaying accelerator text or an arrow if it's a Menu 3 graphic node for displaying menu item icon and 4 left node for displaying either radio button or check box This is basically rewritten impl styleable Get Node() which should not be used since it's marked as deprecated
private static Label get Associated Node( Menu Item menu Item) {
set Content Type(CONTENT TYPE) Style Sheet sheet = ((HTML Editor Kit) get Editor Kit()) get Style Sheet() sheet add Rule(BODY STYLE) sheet add Rule(ADDITION STYLE) sheet add Rule(REMOVAL STYLE) sheet add Rule(CHANGE STYLE) set Editable(false)
}
Sets the name and the abbreviation of the {@code current Abbreviation} property to the values of the {@code abbreviations Name} and {@code abbreviations Abbreviation} properties
private void set Current Abbreviation Name And Abbreviation If Valid( String name String abbreviation) {
Finally go through all citation markers and update those referring to entries in our current list
int max Authors First = style get Int Cit Property(OO Bib Style MAX AUTHORS FIRST)
describe advanced search expression
text Flow get Children() add( Tooltip Text Util create Text( String format("%s " Localization lang(" This search contains entries in which")) Tooltip Text Util Text Type NORMAL))
if we're going to override some cite keys warn the user about it
} else if (entries parallel Stream() any Match( Bib Entry has Cite Key)) {
This method is called after the new database has been added to the GUI if the is Action Necessary() method returned true Note if several such methods need to be called sequentially it is important that all implementations of this method do not return until the operation is finished
void perform Action( Base Panel panel Parser Result pr)
Searches recursively all files in the specified directory All files matched by the given {@link Unlinked PDF File Filter} are taken into the resulting tree The result will be a tree structure of nodes of the type {@link Check Box Tree Item} The user objects that are attached to the nodes is the {@link File Node Wrapper} which wraps the {@link File} Object For ensuring the capability to cancel the work of this recursive method the first position in the integer array 'state' must be set to 1 to keep the recursion running When the states value changes the method will resolve its recursion and return what it has saved so far
private Check Box Tree Item< File Node Wrapper> search Directory( File directory Unlinked PDF File Filter ff) {
This method attaches a linked file from a URL (if not already linked) to an entry using the key and value pair from the find Full Texts map and then downloads the file into the given target Directory
private void add Linked File From URL(URL url Bib Entry entry Path target Directory) {
init paste handler for URL Editor to format pasted url link in text Area
text Area set Paste Action Handler(() > text Area set Text(new Cleanup URL Formatter() format(new Trim Whitespace Formatter() format(text Area get Text()))))
Create a new Suggestion Provider String
public Suggestion Provider String( Callback<T String> string Converter) {
Set the new sections name to ' Child Section'
x Child Named set Name(OO Bib Base BIB SECTION NAME)
Ok done Then try to gather in all we have found Since we might have found one or more bibtex results it's best to gather them in a Bib Database
Parser Result bibtex Result = merge Import Results(imports)
TODO can we find out whether the save was actually done or not
}
This method shall be used to add a new journal abbreviation file to the set of journal abbreviation files It basically just calls the {@link open File( Path)}} method
public void add New File() {
Undoable Add Or Remove Group undo = new Undoable Add Or Remove Group(groups Root new Group Tree Node View Model(new Groups) Undoable Add Or Remove Group ADD NODE) ce add Edit(undo)
}
no new version could be found only respect the ignored version on automated version checks
if (!newer Version is Present() || (newer Version get() equals(to Be Ignored) && !manual Execution)) {
Compare the deleted entry in memory with the one in the tmpfile The entry could have been removed in memory
double match With Tmp = Duplicate Check compare Entries Strictly(mem Entry tmp Entry)
retrieve bookmark by name
if (!x Named Bookmarks has By Name(name)) {
Run validation checks
if (!valid Settings()) {
Be happy with the first found Bib Entry and move on to next key
break
css open in app *
CONNECT OPEN OFFICE( Material Design Icon OPEN IN APP)
Fills the current values to the text fields
public void set Values( Abstract Bibtex Key Pattern key Pattern) {
Create a default suggestion provider based on the to String() method of the generic objects
public static <T> Suggestion Provider<T> create( Collection<T> possible Suggestions) {
The lines above work also if the dir does not exist at all! NULL is accepted by the filechooser as no inital path
css paperclip*
ATTACH FILE( Material Design Icon PAPERCLIP)
Converts the citations into the RTF format
protected static Clipboard Content process Rtf( List< String> citations) {
Push To Application
final Push To Application Action push To Application Action = push To Applications Manager get Push To Application Action()
Returns the default context menu items (except undo/redo)
public static List< Menu Item> get Default Context Menu Items( Text Input Control text Input Control) {
use preferences value if no DB is open
mode = Globals prefs get Default Bib Database Mode()
We have to use supplier for the localized text so that language changes are correctly reflected
Search Display Mode( Supplier< String> display Name Supplier< String> tool Tip Text) {
TODO switch Icon color search Icon set Icon( Icon Theme Jab Ref Icon ADVANCED SEARCH get Icon())
} else {
We have overwritten the marker for the start of the reference list We need to add it again
cursor collapse To End()
Create and run cleaner
Cleanup Worker cleaner = new Cleanup Worker(panel get Bib Database Context() preferences get Cleanup Preferences(
If we found it remove it from the type list
if (to Remove != null) {
Work around for different input methods https
private class Input Method Requests Object implements Input Method Requests {
This class represents a change in any field value The relevant information is the Bib Entry the field name the old and the new value Old/new values can be null
public class Undoable Preamble Change extends Abstract Undoable Jab Ref Edit {
Parse the temporary file
Import Format Preferences import Format Preferences = Globals prefs get Import Format Preferences()
Show progress indicator
Progress Indicator progress = new Progress Indicator()
Fail on unsupported Java versions
ensure Correct Java Version()
Get the string associated with this file type's icon
public String get Icon Name() {
things to be appended to an opened tab should be done after opening all tabs add them to the list
to Open Tab add(pr)
set Title(FRAME TITLE)
return
we do not trim the value at the assignment to enable users to have spaces at the beginning and at the end of the pattern
if (!text trim() is Empty()) {
jni convenience easier to iterate over array than calling Hashtable
String pairs[] = null
create menu items one for each case changer
List< Formatter> case Changers = new Array List<>()
We import all files and collect their results
List< Import Format Reader Unknown Format Import> imports = new Array List<>()
Constructs a {@link List Cell} based on the view model of the row and a bunch of specified converter methods
public class View Model List Cell Factory<T> implements Callback< List View<T> List Cell<T>> {
TODO Store undo if (!undo is Empty()) { group Selector conclude Assignment( Undoable Change Entries Of Group get Undoable Edit(target undo) target get Node() assigned Entries)
}
TODO This means a duplicate string name exists so it's not a very exceptional situation We should maybe give a warning
}
Dialog shown when closing of application needs to wait for a save operation to finish
public class Wait For Save Finished Dialog {
TODO Find a better way to update preview
base Panel close Bottom Pane()
We are alone so we start the server
Globals REMOTE LISTENER open And Start(new Jab Ref Message Handler() remote Preferences get Port())
Keep track of changes made to the columns like reordering or resizing
public class Persistence Visual State Table {
the encoding of shared database is always UTF 8
encoding Disable Property set Value(is Shared)
replace the placeholder if used
command = command replace("%DIR" absolute Path)
If the file is an ordinary file (i e not a resource part of a jar bundle) we watch it for changes and turn on live reloading
if (!css Uri to String() contains("jar")) {
Shift on Windows or no modifier
LOGGER debug(" Mode LINK")
Show tooltips
if (command instanceof Simple Command) {
This class provides a editable text field that is used as table cell It handles the editing of the name column
public class Journal Abbreviations Name Table Editing Cell extends Table Cell< Abbreviation View Model String> {
return the first one we found anyway
return Optional of(suffix)
regex is correct otherwise OK would have been disabled therefore I don't catch anything here
if (keyword Group Reg Exp is Selected()) {
Returns the int representing the selected hierarchical group context
private Group Hierarchy Type get Context() {
TODO warn if assignment has undesired side effects (modifies a field != keywords) if (! Warn Assignment Side Effects warn Assignment Side Effects(m Node get Node() get Group() m Panel frame())) { return // user aborted operation
( Bidirectional) binding does not work so use listeners instead
flow estimated Scroll Y Property() add Listener((observable old Value new Value) > scroll Y set Value(new Value))
Main function for building the merge entry J Panel
private void initialize() {
A prefs Tab is a component displayed in the Preference Dialog It needs to extend from Component
interface Preferences Tab {
The actual operation This method will not be called on the event dispatch thread so it should not do GUI operations without utilizing invoke Later()
void push Entries( Bib Database Context database List< Bib Entry> entries String key String)
create a dummy group
try {
An Action for launching mass field Functionality * Defaults to selected entries or all entries if none are selected * Input field name * Either set field or clear field
public class Mass Set Fields Action extends Simple Command {
Need to toggle a twice to make sure nothing is selected
root set Selected(false)
ctrl on win no modifier on Xubuntu
LOGGER debug(" Mode Copy")
If we are supposed to set character format for citations must run a test before we delete old citation markers Otherwise if the specified character format doesn't exist we end up deleting the markers before the process crashes due to a the missing format with catastrophic consequences for the user need to do this only once
must Test Char Format = false // need to do this only once
Get center of focused cell
Bounds anchor Bounds = row get Bounds In Parent()
Opens a new console starting on the given file location If no command is specified in {@link Globals} the default system console will be executed
public static void open Console( File file) throws IO Exception {
I think setting root to null is not possible
root set Group( Default Groups Factory get All Entries Group())
General info dialog The Mac Adapter calls this method when " Quit" is selected from the application menu Cmd Q is pressed or " Quit" is selected from the Dock The function returns a boolean indicating if quitting is ok or not <p> Non OSX Jab Ref calls this when choosing " Quit" from the menu <p> SIDE EFFECT tears down Jab Ref
public boolean quit() {
fits the standard "found x entries" message thus hinders the searchbar to jump around while searching if the frame width is too small
current Results set Pref Width(150)
View model for a field editor that shows various options backed by a map
public abstract class Map Based Editor View Model<T> extends Option Editor View Model<T> {
Hide horizontal scrollbar and always wrap text
set Wrap Text(true)
Delivers possible completions as a list of {@link Author}s
public class Person Name Suggestion Provider extends Suggestion Provider< Author> implements Auto Complete Suggestion Provider< Author> {
XML Syntax Highlighting for Rich Text FX Codearea created by (c) Carlos Martins (github @cemartins) License BSD 2 Clause see https and https
public Style Spans< Collection< String>> compute Highlighting( String text) {
Inserts the Jab Ref Preferences values into the the Properties of the View Model
public void set Values() {
Alt on Windows
LOGGER debug(" Mode MOVE")
for each column get either actual width or if it does not exist default value
Map< String Double> column Widths = new Hash Map<>()
Opens the import inspection dialog to let the user decide which of the given entries to import
private void add Imported Entries(final Base Panel panel final List< Bib Entry> entries) {
Update journal abbreviation loader
journal Abbreviation Loader update(abbreviations Preferences)
Generate dialog title
String dialog Title
Wrapper around one of our actions from {@link Action} to convert them to controlsfx {@link org controlsfx control action Action}
class Jab Ref Action extends org controlsfx control action Action {
Open File Browser
Flipped around
resolve Strings All Property set Value(preferences get Boolean( Jab Ref Preferences RESOLVE STRINGS ALL FIELDS))
css file multiple *
FILE MULTIPLE( Material Design Icon FILE MULTIPLE)
find office executable relative to this class's class loader
String s Office = System get Property("os name") starts With(" Windows") "soffice exe" "soffice"
Add the entries to the open tab
Base Panel panel = get Current Base Panel()
css star circle *
RELEVANCE( Material Design Icon STAR CIRCLE)
Set empty background and create proper rendering in background (for smoother loading)
background = new Rectangle(get Desired Width() get Desired Height())
Function to initialize parameters Currently it is expected that command Path Preference Key is set to the path of the application
protected abstract void init Parameters()
The root of the global groups tree
private final Group Tree Node View Model m groups Root Handle
Gets invoked if an entry in the current database changes
private void on Database Changed( List Change Listener Change< extends Bib Entry> change) {
wait until office is started
for (int i = 0 ++i) {
Check if we are supposed to set a character format for citations
boolean must Test Char Format = style is Format Citations()
css arrow up bold *
MOVE TAB ARROW( Material Design Icon ARROW UP BOLD)
TODO reflective access should be removed
Field private String Field = Table View class get Declared Field("content Width")
Creates a column for DO Is or UR Ls The {@code first Field} is preferred to be shown over {@code second Field}
private Table Column< Bib Entry Table View Model Field> create Url Or Doi Column( Jab Ref Icon icon Field first Field Field second Field) {
Get the comparator to order the suggestions
protected abstract Comparator<T> get Comparator()
Check if there are empty keys
boolean empty Keys = false
Repeat for individual file dir reuse 'text' and 'dir' vars
text = view Model user Specific File Directory Property() get Value()
alt on win
LOGGER debug(" Node LINK")
Represents the view model for a page in the document viewer
public abstract class Document Page View Model {
Menu to show up on right click in a text field for converting text formats
class Conversion Menu extends Menu {
This is ugly but we have no proper update mechanism in place to propagate the changes so redraw everything
refresh()
TODO Print error message Localization lang("PDF does not exist")
} else {
Prints parsing statistics
public String get Information(boolean include Missing Entries) {
Calls the {@link Abbreviations File View Model write Or Create()} method for each file in the journal Files property which will overwrite the existing files with the content of the abbreviations property of the Abbriviations File Non existing files will be created
public void save Journal Abbreviation Files() {
Sets the {@link Consumer} that is invoked after the task is successfully finished The consumer always runs on the Java FX thread
public Background Task<V> on Success( Consumer<V> on Success) {
Copyright (c) 2014 2016 Controls FX All rights reserved Redistribution and use in source and binary forms with or without modification are permitted provided that the following conditions are met * Redistributions of source code must retain the above copyright notice this list of conditions and the following disclaimer * Redistributions in binary form must reproduce the above copyright notice this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution * Neither the name of Controls FX any associated website nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED IN NO EVENT SHALL CONTROLSFX BE LIABLE FOR ANY DIRECT INDIRECT INCIDENTAL SPECIAL EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES LOSS OF USE DATA OR PROFITS OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY WHETHER IN CONTRACT STRICT LIABILITY OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE
package org jabref gui autocompleter
Extract destination URL
try {
Updates the view to reflect changes to visible components
private void update View() {
This class represents a change in any field value The relevant information is the Bib Entry the field name the old and the new value Old/new values can be null
public class Undoable Field Change extends Abstract Undoable Jab Ref Edit {
Abstract class for pushing entries into different editors
public abstract class Abstract Push To Application implements Push To Application {
put the warning into as exception text > it will be displayed to the user
This wraps the old Swing commands so that they fit into the new infrastructure In the long term this class should be removed
@ Deprecated
The default context menu with a specific menu item to cleanup URL
public static Supplier< List< Menu Item>> get Cleanup URL Menu( Text Area text Area) {
icon is chosen based on field name in cell so map fields to its names
column set Cell Value Factory(cell Data > Easy Bind monadic(cell Data get Value() get Field(first Field)) map(x > first Field) or Else( Easy Bind monadic(cell Data get Value() get Field(second Field)) map(x > second Field)))
Execute command
try {
Ignored
return Collections empty List()
Returns true if there is an external file type registered for this extension
public boolean is External File Type By Ext( String extension) {
unknown cannot un/abbreviate anything
return false
vim set shiftwidth=4 softtabstop=4 expandtab
Redo the change
try {
We need to get the tab header the following is a ugly workaround
Node tab Header Area = (( Tab Pane Skin) this tabbed Pane get Skin())
reset all fields
for ( Text Field field text Fields values()) {
Similar to {@link org fxmisc easybind monadic Monadic Observable Value}
public class Optional Object Property<T> extends Simple Object Property< Optional<T>> {
public static void show Context Menu( Text Field text Field Context Menu context Menu Context Menu Event e) {
css clipboard arrow left *
EXPORT TO CLIPBOARD( Material Design Icon CLIPBOARD ARROW LEFT)
TODO Replace by http //docs oracle com/javase/7/docs/api/java/awt/ Desktop html http //stackoverflow com/questions/18004150/desktop api is not supported on the current platform
public class Jab Ref Desktop {
Executes a callable task that provides a return value after the calculation is done @param command The task to execute @return A Future object that provides the returning value
public <T> Future<T> execute( Callable<T> command) {
Need to run this on the Java FX thread
Jab Ref GUI get Main Frame() add Parser Result(pr focus Panel)
set original filename (again)
tabbed Pane get Tabs() get(i) set Text(get Base Panel At(i) get Tab Title())
If required check that all entries have Bib Te X keys defined
if (application requires Bibtex Keys()) {
Check if the value returned by get Column Value() is the same as a simple check of the entry's field(s) would give The reasons for being different are (combinations may also happen) The entry has a crossref where the field content is obtained from The field has a string in it (which get Column Value() resolves) There are some alias fields For example if the entry has a date field but no year field {@link Bib Entry get Resolved Field Or Alias( String Bib Database)} will return the year value from the date field when queried for year
public boolean is Resolved( Bib Entry entry) {
TODO imlement default
}
Use default key bindings
for ( Key Binding key Binding Key Binding values()) {
Store shown columns and their width in preferences
private void update Column Preferences() {
TODO Add undo final Undoable Add Or Remove Group undo = new Undoable Add Or Remove Group(groups Root node Undoable Add Or Remove Group REMOVE NODE KEEP CHILDREN) panel get Undo Manager() add Edit(undo)
Group Tree Node group Node = group get Group Node()
Read all saved file paths and read their abbreviations
public void create File Objects() {
On Linux Java FX fonts look blurry per default This can be improved by using a non default rendering setting See https
if ( Globals prefs get Boolean( Jab Ref Preferences FX FONT RENDERING TWEAK)) {
Runs the specified {@link Runnable} on the Java FX application thread and waits for completion
public static void run And Wait In Java FX Thread( Runnable action) {
Jab Ref Main Class
public class Jab Ref Main extends Application {
Bootstraps the component context from a UNO installation
public static final X Component Context bootstrap( String[] arg Array URL Class Loader loader) throws Bootstrap Exception {
if (! Globals prefs is Keyword Sync Enabled()) { return }final Bib Entry entry = event get Bib Entry() // Named Compount code similar to Special Field Update Listener Named Compound nc = new Named Compound( Localization lang(" Synchronized special fields based on keywords")) List< Field Change> changes = Special Fields Utils sync Special Fields From Keywords(entry Globals prefs get Keyword Delimiter()) for ( Field Change change changes) { nc add Edit(new Undoable Field Change(change)) } // Don't insert the compound into the undo Manager // it would be added before the component which undoes the insertion of the entry and creates heavy problems // (which prohibits the undo the deleting multiple entries)
}
Get target folder
Optional< Path> file Dir = database Context get First Existing File Dir(file Preferences)
Ctrl on Windows no modifier on Xubuntu
LOGGER debug(" Mode COPY")
default command
String cmd = "xdg open " + file Path to Absolute Path() get Parent() to String()
Reloads the Jab Ref Preferences into the UI
private void update After Preference Changes() {
We define two file type objects as equal if their name extension open With and icon Name are equal
@ Override
Create buttons
Button Type replace Entries = new Button Type( Localization lang(" Merge entries") Button Bar Button Data OK DONE)
Time stamp
This class can be used to wrap an @see Observable List inside it When wrapped any Listener listening for updates to the wrapped Observable List (for example because of a binding to it) is ensured to be notified on the Java FX Application Thread It should be used to implement bindings where updates come in from a background thread but should be reflected in the UI where it is necessary that changes to the UI are performed on the Java FX Application thread
public class Ui Thread Observable List<E> implements Observable List<E> {
Executes a collection of callable tasks and returns a List of the resulting Future objects after the calculation is done @param tasks The tasks to execute @return A List of Future objects that provide the returning values
public <T> List< Future<T>> execute All( Collection< Callable<T>> tasks) {
This will set the {@code current File} property to the {@link Abbreviations File View Model} object that was added to the {@code journal Files} list property lastly If there are no files in the list property this methode will do nothing as the {@code current File} property is already {@code null}
public void select Last Journal File() {
Method to delete the abbreviation set in the current Abbreviation property The current Abbreviation Property will be set to the previous or next abbreviation in the abbreviations property if applicable Else it will be set to {@code null} if there are no abbreviations left
public void delete Abbreviation() {
We need to sort the reference marks according to their order of appearance
names = sorted Reference Marks
Returns a wrapper around the given list that posts changes on the Java FX thread
public static <T> Observable List<T> for UI( Observable List<T> list) {
kill the remote thread
stop Remote Thread()
First try xmp import if empty try pdf import otherwise create empty entry
if (!xmp Entries In File is Empty()) {
Revert the change
base remove String(string get Id())
Go through unchanged types Remove them from the ones that should be stored and from the list of defaults since we don't need to mention these in prefs
for ( External File Type type unchanged) {
Checks if all tabs are valid To Do After conversion of all tabs use mvvmfx validator To Do should be observable for binding of OK button in View
Next add all the visible tabs (if not already present) at the right position
for (int i = 0 i < visible Tabs size() i++) {
update all tab titles
update All Tab Titles()
Helper class to create and style controls according to an {@link Action}
public class Action Factory {
Class for fetching and merging bibliographic information
public class Fetch And Merge Entry {
paranoia ensure that there are never two instances of All Entries Group
if (new Groups get Group() instanceof All Entries Group) {
Create button that triggers search
Button search = new Button( Localization lang(" Search"))
Activate context menu if user presses the "context menu" key
table View add Event Handler( Key Event KEY RELEASED event > {
public static <V> V run In Java FX Thread( Callable<V> callable) {
Add the edit field for Bibtex key
fields add( Internal Field KEY FIELD)
Remove all reference marks that don't look like Jab Ref citations
List< String> tmp = new Array List<>()
Although entries are redefined without use this also updates link Source Base
Map< Bib Entry Bib Database> entries = find Cited Entries(databases cited link Source Base)
for the remaining entries intersection has to be used this approach ensures that one empty keyword list leads to an empty set of common keywords
for ( Bib Entry entry entries) {
A very simple implementation of the {@link Task Executor} interface Every submitted task is invoked in a separate thread
public class Default Task Executor implements Task Executor {
all buttons in base dialogs react on enter
if (event get Code() == Key Code ENTER) {
but not for this entry
ref Keys get(marker) add(current Key)
If we found it remove it from the type list
if (to Remove != null) {
The main window of the application
public class Jab Ref Frame extends Border Pane {
Redo the change
try {
Tools for automatically detecting Open Office or Libre Office installations
public class Detect Open Office Installation {
Heuristic missed so try to get page number from first shown page
current Page set(
Assuming the current page is A4 (or has same aspect ratio)
set Page Width(desired Page Dimension get Width( Math sqrt(2)) + delta)
Check if there are two entries selected
List< Bib Entry> selected Entries = base Panel get Selected Entries()
This class controls the user interface of the journal abbreviations dialog The ui elements and their layout are defined in the fxml file
public class Manage Journal Abbreviations View extends Base Dialog< Void> {
only add tab if DB is not already open
Optional< Base Panel> panel = get Base Panel List() stream()
This class represents the change of type for an entry
public class Undoable Change Type extends Abstract Undoable Jab Ref Edit {
General
Sets the title of the main window
public void set Window Title() {
check mode of currently used DB
if (panel != null) {
No parent = root > just add
this move To(target)
write the entries using sw which is used later to form the email content
Bib Entry Writer bibtex Entry Writer = new Bib Entry Writer(
Opens the given files If one of it is null or 404 nothing happens
public void open Files( List< Path> files To Open boolean raise Panel) {
Ask for consent to send data to Mr D Lib on first time to tab
if (preferences is Mrdlib Accepted()) {
Only the first of the extensions gotten from File Type is saved into the class using get(0)
String extension String = exporter get File Type() get Extensions() get(0)
The path to the edited subtree's root node
private final List< Integer> m path To Node
Up to version 2 4b the mime type is not included
mime Type = ""
Application Insights Java Copyright (c) Microsoft Corporation All rights reserved MIT License Permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files (the "" Software"") to deal in the Software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and/or sell copies of the Software and to permit persons to whom the Software is furnished to do so subject to the following conditions The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software THE SOFTWARE IS PROVIDED *AS IS* WITHOUT WARRANTY OF ANY KIND EXPRESS OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM DAMAGES OR OTHER LIABILITY WHETHER IN AN ACTION OF CONTRACT TORT OR OTHERWISE ARISING FROM OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE
On Windows store application as empty if the " Default" option is selected or if the application name is empty
if (default Application Selected Property get Value() || application is Empty()) {
Creates a list of all files (leaf nodes in the tree structure) which have been selected
private List< Path> get File List From Node( Check Box Tree Item< File Node Wrapper> node) {
css server plus*
ADD ROW( Material Design Icon SERVER PLUS)
This method returns the enum constant value
public String get Constant() {
Copies the doi url to the clipboard
public class Copy Doi Url Action extends Simple Command {
Update type label
Typed Bib Entry typed Entry = new Typed Bib Entry(entry database Context get Mode())
Update key list to match the new sorting
for (int j = 0 j < c Entries length j++) {
Runs the given task and returns a Future representing that task
<V> Future<V> execute( Background Task<V> task)
Alt on Windows
LOGGER debug(" Mode LINK")
Runs the cleanup on the entry and records the change
private void do Cleanup( Cleanup Preset preset Bib Entry entry Named Compound ce) {
This action can be invoked without an open database so we have to check if we have one before trying to invoke methods to execute changes in the preferences
Set up the list of external file types either from default values or from values recorded in Preferences
private void update External File Types() {
Notifies the tab that it got focus and should display the given entry
public void notify About Focus( Bib Entry entry) {
handled by FX in Text Input Control paste
break
File doesn't exist so we can't move it
dialog Service show Error Dialog And Wait( Localization lang(" File not found") Localization lang(" Could not find file '%0' " linked File get Link()))
Opens " Edit Group Dialog" and changes the given group to the edited one
public void edit Group( Group Node View Model old Group) {
We can't watch files directly so monitor their parent directory for updates
Path directory = file to Absolute Path() get Parent()
Extract the list of bibtex keys from a reference mark name
public List< String> parse Ref Mark Name( String name) {
leave the expansion state of the tree item as it is
this dragged Item set Expanded(this dragged Item is Expanded())
Display link to expand text
if (!this get Children() contains(more Link)) {
Start looking at changes
Bib Database Diff differences = Bib Database Diff compare(reference Database database On Disk)
change root group even though it'll be All Entries anyway
root set Group(changed Groups get Group())
When mime type is included the array length should be 5
mime Type = val[2]
Loop through the available databases
for ( Bib Database loop Database databases) {
Replace both entries by merged entry
entries add(diag get Merged Entry())
if (value==null) and then call null Field has been omitted as updatefield also handles value==null
List< Field Change> changes = Special Fields Utils update Field(special Field value be null Field If Value Is The Same Globals prefs is Keyword Sync Enabled() Globals prefs get Keyword Delimiter())
storing a backup of the whole subtree is not required when children are kept
m subtree Backup = edit Type != Undoable Add Or Remove Group REMOVE NODE KEEP CHILDREN edited Node get Node()
Inserts each citation into a HTML body and copies it to the clipboard
protected static Clipboard Content process Html( List< String> citations) {
Only one linked file > open directly
Linked File View Model linked File View Model = new Linked File View Model(linked Files get(0) entry get Entry() database Globals TASK EXECUTOR dialog Service Globals prefs get XMP Preferences() Globals prefs get File Preferences() external File Types)
If not start GUI
new Jab Ref GUI(main Stage argument Processor get Parser Results() argument Processor is Blank())
empty
}
After adding the databases go through each and see if any post open actions need to be done For instance checking if we found new entry types that can be imported or checking if the database contents should be modified due to new features in this version of Jab Ref Note that we have to check whether i does not go over get Base Panel Count() This is because import To Open might have been used which adds to loaded Databases but not to get Base Panel Count()
New ZIP file chooser
public Zip File Chooser( File System zip File) throws IO Exception {
expand node and all children on drag over
drag Expansion Handler expand Group(row get Tree Item())
TODO merge with import
factory create Menu Item( Standard Actions MERGE DATABASE new Old Database Command Wrapper( Actions MERGE DATABASE this state Manager))
css code equal *
FIND DUPLICATES( Material Design Icon CODE EQUAL)
Find entries in clipboard
List< Bib Entry> entries To Add = Globals clipboard Manager extract Data()
Access the Child Section's X Text Content interface and insert it into the document
X Text Content x Child Section = Uno Runtime query Interface(X Text Content class x Child Named)
Set the visibility of the progress bar in the right end of the status line at the bottom of the frame
public void set Progress Bar Visible(final boolean visible) {
Converts a path relative to a base path into a class name
private static String path To Class( String base Path Path path) {
The following is necesary to initiate the drag and drop in javafx although we don't need the contents It doesn't work without
Clipboard Content content = new Clipboard Content()
(mask Text("A") != "A")
boolean mask Text = (text Input Control instanceof Password Field)
Use the correct viewer even if pdf and ps are mixed up
String[] split = file get() get File Name() to String() split("\\ ")
This interface defines potential actions that may need to be taken after opening a BIB file into Jab Ref This can for instance be file upgrade actions that should be offered due to new features in Jab Ref and may depend on e g which Jab Ref version the file was last written by This interface is introduced in an attempt to add such functionality in a flexible manner
public interface GUI Post Open Action {
Warning before overwriting is only relevant if overwriting can happen
warn Before Overwriting set Disable(dont Overwrite is Selected())
TODO Remove this copy as soon as the one included in AI is compatible with log4j 3
public final class Application Insights Log Event extends Application Insights Event {
insert the connector
x Set insert(x Imp Loader activate("com sun star comp connections Connector" null null null))
As there is no concept like an empty node/icon we return simply the other icon
return Jab Ref Icons GROUP INTERSECTION get Graphic Node()
Add all bib Databases databases to the frame
boolean first = false
This is a simple implementation of a generic suggestion provider callback The complexity of suggestion generation is O(n) where n is the number of possible suggestions
public abstract class Suggestion Provider<T> implements Callback<I Suggestion Request Collection<T>> {
Returns a newer version excluding any non stable versions except if the installed one is unstable too If no newer version was found then an empty optional is returned
private Optional< Version> get New Version() throws IO Exception {
Prints the connection problem to the status bar and shows a dialog if it was executed manually
private void show Connection Error( Exception exception boolean manual Execution) {
css file powerpoint *
FILE POWERPOINT( Material Design Icon FILE POWERPOINT)
Detect Google search URL
private static final String GOOGLE SEARCH EXP = "^https //( www\\ ) google\\ [\\ a z]+ /url *"
update keywords
keywords remove All(keywords To Remove)
css auto fix*
AUTO GROUP( Material Design Icon AUTO FIX)
Bootstraps the initial component context from a native UNO installation See also <code>cppuhelper/default Bootstrap Initial Component Context()</code>
public static final X Component Context default Bootstrap Initial Component Context( String ini file Map< String String> bootstrap parameters) throws Exception {
css twitter *
TWITTER( Material Design Icon TWITTER)
Drag and drop support
row set On Drag Detected(event > {
File on disk has changed thus look for notable changes and notify listeners in case there are such changes
Change Scanner scanner = new Change Scanner(database reference File)
Append a given value to a given field for all entries in a Collection This method DOES NOT update any Undo Manager but returns a relevant Compound Edit that should be registered by the caller
private static Undoable Edit mass Append Field( Collection< Bib Entry> entries Field field String text To Append) {
We have to use reflection to get the associated label
try {
if so mark base changed Prevent the Undo button from removing change marking
if (changed) {
passed file (we take the first one) should be focused
String focused File = bib Databases stream()
Decides if the content stored in the given {@link Dragboard} can be droped on the given target row Currently the following sources are allowed another group (will be added as subgroup on drop) entries if the group implements {@link Group Entry Changer} (will be assigned to group on drop)
public boolean acceptable Drop( Dragboard dragboard) {
The string was removed or renamed locally We guess that it was removed
Bibtex String bs = new Bibtex String(label disk)
Returns a consent dialog used to ask permission to send data to Mr D Lib
private Scroll Pane get Privacy Dialog( Bib Entry entry) {
Left text pane
if (left String is Present()) {
Initializes the components the layout the data structure and the actions in this dialog
private void initialize() {
Add type change menu
Context Menu type Menu = new Change Entry Type Menu() get Change Entry Type Popup Menu(entry database Context undo Manager)
This property is only needed to get proper IDE support in FXML files (e g validation that parameter passed to "icon" is indeed of type {@link Icon Theme Jab Ref Icons})
private Object Property< Icon Theme Jab Ref Icons> glyph
cloud upload*
CONNECT DB( Material Design Icon CLOUD UPLOAD)
Removal of a node and all of its children
public static final int REMOVE NODE AND CHILDREN = 2
This worker checks if there is a new version of Jab Ref available If there is it will display a dialog to the user offering him multiple options to proceed (see changelog go to the download page ignore this version and remind later) If the versions check is executed manually and this is the latest version it will also display a dialog to inform the user
public class Version Worker {
If the crossref entry is not already in the database
if (!result Database get Entry By Key(crossref) is Present()) {
Insert it at the current position
rebuild Bib Text Section(all Bases style)
especially for the track execute when the action run the same function but from different source
public Jab Ref Action( Action action Command command Key Binding Repository key Binding Repository Sources source) {
Action for the " Save" and " Save as" operations called from Base Panel This class is also used for save operations when closing a database or quitting the applications The save operation is loaded off of the GUI thread using {@link Background Task} Callers can query whether the operation was canceled or whether it was successful
public class Save Database Action {
The default menu that contains functions for changing the case of text and doing several conversions
public static Supplier< List< Menu Item>> get Default Menu(final Text Input Control text Input) {
Set headings
for (int i = 0 i < 6 i++) {
This method should be called after storing the preferences to collect the properties which require a restart of Jab Ref to load
List< String> get Restart Warnings()
Creates a new auto completion binding between the given text Input Control and the given suggestion provider
private Auto Completion Text Input Binding(final Text Input Control text Input Control
We accept all kinds of dates (not just in the format specified)
return Date parse(string) map( Date to Temporal Accessor) or Else(null)
this whole method is part of a background task when autodecting instances so we need to show dialog in FX thread
Optional< Document Title View Model> selected Document = dialog Service show Choice Dialog And Wait( Localization lang(" Select document") Localization lang(" Found documents ") Localization lang(" Use selected document") view Model)
Taken from http //stackoverflow com/a/9417836/873661
private static Buffered Image resize( Buffered Image img int new Width int new Height) {
We always want that the first item is selected after a change This also automatically selects the first file on the initial load
file Choice items Property() add Listener(
Function to get the command to be executed for pushing keys to be cited
@ Suppress Warnings("unused")
For some reason the graphic is not set correctly by the {@link Action Utils} class so we have to fix this by hand
private static void set Graphic( Menu Item node Action action) {
entry type or bibtex key will never be resolved
if ( Internal Field TYPE HEADER equals(field) || Internal Field OBSOLETE TYPE HEADER equals(field)
Removal of a single node Children if any are kept
public static final int REMOVE NODE KEEP CHILDREN = 1
Copyright (c) 2014 2015 Controls FX All rights reserved Redistribution and use in source and binary forms with or without modification are permitted provided that the following conditions are met * Redistributions of source code must retain the above copyright notice this list of conditions and the following disclaimer * Redistributions in binary form must reproduce the above copyright notice this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution * Neither the name of Controls FX any associated website nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED IN NO EVENT SHALL CONTROLSFX BE LIABLE FOR ANY DIRECT INDIRECT INCIDENTAL SPECIAL EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES LOSS OF USE DATA OR PROFITS OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY WHETHER IN CONTRACT STRICT LIABILITY OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE
package org jabref gui autocompleter
use property as initial source
update A accept(property B get Value())
Map containing all registered external file types
private final Set< External File Type> external File Types = new Tree Set<>( Comparator comparing( External File Type get Name))
Workaround taken from https
private void setup Clear Button Field( Custom Text Field custom Text Field) {
Always overwrite keys by default
return true
We are not alone there is already a server out there send command line arguments to other instance
if (remote Client send Command Line Arguments(args)) {
Process arguments
Argument Processor argument Processor = new Argument Processor(arguments Argument Processor Mode INITIAL START)
Nothing set so we use the default values
while (preferences get( Jab Ref Preferences CUSTOM TAB NAME + " def" + i) != null) {
Run the actual open in a thread to prevent the program locking until the file is loaded
Background Task wrap(() > open It(file dialog import Entries() dialog import Strings() dialog import Groups() dialog import Selector Words()))
It could be that somehow the path is null for example if it got deleted in the meantime
if (directory == null) {
extract url parameter
String[] pairs = query split("&")
Collect all callables to execute in one collection
for ( Bib Entry entry entries) {
TODO Add undo Store undo information Abstract Undoable Edit undo Add Previous Entries = null Undoable Modify Group undo = new Undoable Modify Group( Group Selector this groups Root node new Group) if (undo Add Previous Entries == null) { panel get Undo Manager() add Edit(undo) } else { Named Compound nc = new Named Compound(" Modify Group") nc add Edit(undo) nc add Edit(undo Add Previous Entries) nc end() / panel get Undo Manager() add Edit(nc) } if (!add Change is Empty()) { undo Add Previous Entries = Undoable Change Entries Of Group get Undoable Edit(null add Change) }
Adds the filename to the top of the menu If it already is in the menu it is merely moved to the top
public void new File( Path file) {
This view model can be used both for "add exporter" and "modify exporter" functionalities It takes an optional exporter which is empty for "add exporter " and takes the selected exporter for "modify exporter " It returns an optional exporter which empty if an invalid or no exporter is created and otherwise contains the exporter to be added or that is modified
We need to catch this one here because the Open Office Panel class is loaded before connection and therefore cannot directly reference or catch a Disposed Exception (which is in a OO JAR file)
throw new Connection Lost Exception(ex get Message())
css label outline *
OPTIONAL( Material Design Icon LABEL OUTLINE)
This resize policy is almost the same as {@link Table View CONSTRAINED RESIZE POLICY} We make sure that the width of all columns sums up to the total width of the table However in contrast to {@link Table View CONSTRAINED RESIZE POLICY} we size the columns initially by their preferred width
public class Smart Constrained Resize Policy implements Callback< Table View Resize Features Boolean> {
We have to cast the Bib Entries from the Bib Entry Suggestion Provider to Parsed Entry Link
Collection< Bib Entry> bib Entries = ( Collection< Bib Entry>) super complete(request)
Puts A List of {@link Bib Entry} in the map All previous content is cleared
public void put Bib Entries( List< Bib Entry> entries) {
This wraps the old Swing commands so that they fit into the new infrastructure In the long term this class should be removed
@ Deprecated
run in one minute
} 60000)
See if there are duplicate citations marks referring to different entries If so we need to use uniquefiers
Map< String List< String>> ref Keys = new Hash Map<>()
TODO http //api openoffice org/docs/ Developers Guide/ Office Dev/ Office Dev xhtml 1 1 3 2 1 2 Frame Hierarchies
TODO Print error message Localization lang(" Error while writing") + " '" + file to String() + "' " + ex
}
Parse the modified file
result = Open Database load Database(diskdb to Absolute Path() to String() import Format Preferences Globals get File Update Monitor())
Represents a binding between a text input control and a auto completion popup This class is a slightly modified version of {@link impl org controlsfx autocompletion Auto Completion Text Field Binding} that works with general text input controls instead of just text fields
public class Auto Completion Text Input Binding<T> extends Auto Completion Binding<T> {
Creates an instance of {@link Linked File} based on the given file We try to guess the file type and relativize the path against the given file directories TODO Move this method to {@link Linked File} as soon as {@link Custom External File Type} lives in model
public static Linked File from File( Path file List< Path> file Directories External File Types external File Types File) {
Create a default suggestion provider based on the to String() method of the generic objects using the provided string Converter
public static <T> Suggestion Provider<T> create( Callback<T String> string Converter Collection<T> possible Suggestions) {
Remove entry
entries remove(entry)
Repaints the table with the most recent font configuration
public void update Font() {
Updates the timestamp of changed entries if the feature is enabled
class Update Timestamp Listener {
Add the new component
visible Components add(component)
Setting the character format failed so we throw an exception that will result in an error message for the user
throw new Undefined Character Format Exception(char Style)
Implementation of {@link Task Executor} that runs every task on the current thread i e in a sequential order This class is not designed to be used in production but should make code involving asynchronous operations deterministic and testable
public class Current Thread Task Executor implements Task Executor {
No file matched the name try to open it directly using the given app
open External File Platform Independent(type link)
Represents the viewport for a page Note the instances of {@link Document Viewer Page} are reused i e not every page is rendered in a new instance but instead {@link Document Viewer Page update Item( Object)} is called
private class Document Viewer Page implements Cell< Document Page View Model Stack Pane> {
Set a given field to a given value for all entries in a Collection This method DOES NOT update any Undo Manager but returns a relevant Compound Edit that should be registered by the caller
private static Undoable Edit mass Set Field( Collection< Bib Entry> entries Field field String text To Set
Go back to the relevant position
x View Cursor goto Range(position false)
Displays an Bib Entry using the given layout format
public class Preview Viewer extends Scroll Pane implements Invalidation Listener {
Saved now exit
return true
Try to get as much information from the temporal accessor
Local Date date = date Time query( Temporal Queries local Date())
There is apparently no neat way to get the page number from a PD Page thus this old style for loop
for (int i = 0 i < pages get Count() i++) {
Read the prefs information for file types
String[][] vals = String Util
start office process
Process p = Runtime get Runtime() exec(cmd Array)
Make a list of all PD Fs linked from this entry
List< Path> files = entry get Files() stream()
This method is called when the dialog is opened or if it is made visible after being hidden This calls the appropriate method in the View Model
void set Values()
Perform migrations
Preferences Migrations run Migrations()
Constructs a {@link Table Cell} based on the value of the cell and a bunch of specified converter methods
public class Value Table Cell Factory<S T> implements Callback< Table Column<S T> Table Cell<S T>> {
store new patterns globally
prefs put Key Pattern(keypatterns)
A backup of the groups before the modification
private final Group Tree Node m group Root
Mapped List implementation based on https
public final class Mapped List<A B> extends Transformation List<A B> {
Start of ugly hack We need to find out which tabs will be shown and which not and remove and re add the appropriate tabs to the editor We don't want to simply remove all and re add the complete list of visible tabs because the tabs give an ugly animation the looks like all tabs are shifting in from the right This hack is required since tabbed get Tabs() set All(visible Tabs) changes the order of the tabs in the editor
make sure the layout is set according to the checkbox
cleanup Enabled selected Property() add Listener(new Enablement Status Listener<>(field Formatter Cleanups is Enabled()))
shift on win or no modifier
LOGGER debug(" Mode LINK")
expand or collapse the tree item and reset the time
this drag Started = System current Time Millis()
The user wants to save
try {
Open the file
String file Path = file get() to String()
Returns the path to the system's applications folder
Path get Application Directory()
Opens a shared database
public class Connect To Shared Database Command extends Simple Command {
no parameters
if (query == null) {
This will wrap the built in and ieee abbreviations in pseudo abbreviation files and add them to the list of journal abbreviation files
void add Built In Lists() {
url
if (decode matches(URL EXP)) {
First remove tabs that we do not want to show
List< Entry Editor Tab> to Be Removed = tabs stream() filter(tab > !tab should Show(entry)) collect( Collectors to List())
Prevent right click to select group
event consume()
css close circle *
INTEGRITY FAIL( Color RED Material Design Icon CLOSE CIRCLE)
Unknown external file type This instance represents a file type unknown to Jab Ref This can happen for example when a database is loaded which contains links to files of a type that has not been defined on this Jab Ref instance
public class Unknown External File Type implements External File Type {
Wait 500 ms then try to connect again but do not wait longer than 5 min (= 600 * 500 ms) total
if (i == 600) {
Returns a text formatter that restricts input to integers
public static Text Formatter< String> get Integer Text Formatter() {
Format a name field for the table according to user preferences
public static String format Name(final String name To Format) {
css view list *
TOGGLE GROUPS( Material Design Icon VIEW LIST)
Ok we have seen this exact marker before
if (!ref Keys get(marker) contains(current Key)) {
Execute the callables and wait for the results
List< Future< Boolean>> futures = Jab Ref Executor Service INSTANCE execute All(tasks)
Stores all user dialogs related to {@link Backup Manager}
public class Backup UI Manager {
Nothing to do here
}
The minimum number of selected entries to ask the user for confirmation
private static final int WARNING LIMIT = 5
Exception used to indicate that the plugin attempted to set a character format that is not defined in the current Open Office document
class No Document Exception extends Exception {
create call with arguments We need a socket pipe does not work https
String[] cmd Array = new String[arg Array length + 2]
image View set Image(new Writable Image(get Desired Width() get Desired Height()))
Background Task< Image> generate Image = Background Task
Return a boolean if the selected entry have url or doi
private boolean is Exist UR Lor DOI( List< Bib Entry> select Entry List) {
This class can be used to wrap a @see String Property inside it When wrapped any Listener listening for updates to the wrapped String Property (for example because of a binding to it) is ensured to be notified on the Java FX Application Thread It should be used to implement bindings where updates come in from a background thread but should be reflected in the UI where it is necessary that changes to the UI are performed on the Java FX Application thread
public class Ui Thread String Property extends String Property {
prefs put Boolean( Jab Ref Preferences WINDOW MAXIMISED get Extended State() == Frame MAXIMIZED BOTH)
Dialog for managing term list files
public class Manage Protected Terms Dialog extends Base Dialog< Void> {
Check if a path to the command has been specified
if ((command Path == null) || command Path trim() is Empty()) {
Will only happen if field exists
merged Entry set Field(field left Entry get Field(field) get())
We need to make a copy as instances of Log Event are reused by log4j
Mutable Log Event copy = new Mutable Log Event()
perform permutation
Object[] permuted Part = new Object[to from]
Stream all Match() (in contrast to Stream any Match() returns 'true' for empty streams so this has to be checked explicitly
return Bindings create Boolean Binding(() > !source is Empty() && source stream() all Match(predicate) source)
If there is no value do nothing
if ((!val To Move is Present()) || val To Move get() is Empty()) {
Set the default value
Globals prefs put( Jab Ref Preferences DEFAULT BIBTEX KEY PATTERN default Pat get Text())
Update the citation list depending on the selected reference
public void active Reference Changed( Reference View Model reference) {
Enable actions that depend on Connect
select Document set Disable(false)
Deleted since it does not work anymore Needs refactoring Menu Item previous Preview Layout = new Menu Item( Localization lang(" Previous preview layout")) previous Preview Layout set Accelerator(key Binding Repository get Key Combination( Key Binding PREVIOUS PREVIEW LAYOUT)) previous Preview Layout set On Action(event > base Panel previous Preview Style()) Menu Item next Preview Layout = new Menu Item( Localization lang(" Next preview layout")) next Preview Layout set Accelerator(key Binding Repository get Key Combination( Key Binding NEXT PREVIEW LAYOUT)) next Preview Layout set On Action(event > base Panel next Preview Style())
for all types
private final Text Field name Field = new Text Field()
We only handle "ENTRY MODIFY" here so the context is always a Path
@ Suppress Warnings("unchecked")
Opens the given URL using the system browser
public static void open Browser( String url) throws IO Exception {
Constructor taking two entries
public Merge Entries( Bib Entry entry Left Bib Entry entry Right Bib Database Mode type) {
We create a decoration pane ourselves for performance reasons (otherwise it has to be injected later leading to a complete redraw/relayout of the complete scene)
Decoration Pane root = new Decoration Pane()
css eye *
READ STATUS READ( Color rgb(111 204 117 1) Material Design Icon EYE)
first check if a valid entry is selected
if (selected Key Binding is Null() get()) {
Return a string for displaying a node name (and its number of children if it is a directory)
public String get Display Text() {
Dir must be a folder not a file
if (! Files is Directory(directory)) {
Set up key bindings specific for the entry editor
private void setup Key Bindings() {
Bootstraps a servicemanager with the jurt base components registered See also UNOIDL <code>com sun star lang Service Manager</code>
public static X Multi Service Factory create Simple Service Manager() throws Exception {
The footnote's anchor gives the correct position in the text
range = footer get Anchor()
See if it helps to append " in"
lp = new File(command Path + " in")
Remove annotations for the current entry and reinitialize annotation/cache
cache remove(entry)
For some reason the graphic is not set correctly so let's fix this
button graphic Property() unbind()
Set up groups tree
group Tree get Selection Model() set Selection Mode( Selection Mode MULTIPLE)
Store the directory for next time
preferences set Working Dir(path)
those threads will be allowed to finish
this executor Service shutdown()
Fetches possibly saved data and configures the control elements respectively
private void apply Preferences() {
Exception used to indicate that the plugin attempted to set a character format that is not defined in the current Open Office document
class Creation Exception extends Exception {
Autosave
Sets the indeterminate status of the progress bar <p>
public void set Progress Bar Indeterminate(final boolean value) {
The action was either canceled or unsuccessful
dialog Service notify( Localization lang(" Unable to save library"))
Remove fields which are not in the merged entry unless they are internal fields
for ( Field field original Fields) {
Text before the citation
if (start > 0) {
entry type
Entry Type old Type = original Entry get Type()
Display warnings if any
int tab Number = 0
Set the string associated with this file type's icon
public void set Icon Name( String name) {
Added comparator for Read Status
if (special Field == Special Field READ STATUS) {
This constructor should only be called to create a pseudo abbreviation file for built in lists This means it is a placeholder and it's path will be null meaning it has no place on the filesystem It's is Pseudo File property will therefore be set to true
public Abbreviations File View Model( List< Abbreviation View Model> abbreviations String name) {
TODO reflective access should be removed
Method m = Text Fields class get Declared Method("setup Clear Button Field" Text Field class Object Property class)
A new or modified entry type Construct it from the string array
External File Type type = Custom External File Type build From Args(val)
To account for numbering and for uniqiefiers we must refresh the cite markers
update Sorted Reference Marks()
Open a http/pdf/ps viewer for the given link string
public static void open External Viewer( Bib Database Context database Context String initial Link Field initial Field)
General
Read all keybindings from the keybinding repository and create table keybinding models for them
private void populate Table() {
Text leading up to s1 Insert s2
string Builder append(txt piv ind)
Migrations Warning for migrating the Review into the Comment field
new Merge Review Into Comment Action()
// TODO Show detailed description of the changes String Builder sb = new String Builder( "<html>" + Localization lang(" Changes have been made to the following metadata elements") + " <p> &nbsp &nbsp ") sb append(changes stream() map(unit > unit key) collect( Collectors joining(" &nbsp &nbsp "))) sb append("</html>") info Pane set Text(sb to String())
return new Label( Localization lang(" Metadata change"))
Global String constants for GUI actions
@ Deprecated
Put everything together
V Box container = new V Box()
Check if we should italicize the "et al " string in citations
boolean italicize = style get Boolean Cit Property(OO Bib Style ITALIC ET AL)
Inform the user to select entries first
dialog Service show Information Dialog And Wait(
Performs the change This method is responsible for adding a proper undo edit to the Named Compound so the change can be undone
public abstract void make Change( Bib Database Context database Named Compound undo Edit)
Set up bindings
Bindings Helper bind Content Bidirectional(
Try to contact already running Jab Ref
Remote Client remote Client = new Remote Client(remote Preferences get Port())
css file excel *
FILE EXCEL( Material Design Icon FILE EXCEL)
Opens the url with the users standard Browser If that fails a popup will be shown to instruct the user to open the link manually and the link gets copied to the clipboard
public static void open Browser Show Popup( String url) {
Sets the {@link Runnable} that is invoked after the task is finished irrespectively if it was successful or failed with an error
public Background Task<V> on Finished( Runnable on Finished) {
Field editor that provides various pre defined options as a drop down combobox
public class Tag Bar<T> extends H Box {
This method stores all file paths of the files in the journal Files property to the global Jab Ref preferences Pseudo abbreviation files will not be stored
private void save External Files List() {
icon set Tool Tip Text( Localization lang(" Open") + " URL")
TABLE ICONS put( Standard Field URL icon)
An empty search field should cause the search to be cleared
if (search Field get Text() is Empty()) {
Priority icon used for the menu
Special Field View Model priority View Model = new Special Field View Model( Special Field PRIORITY undo Manager)
checkbox marked circle outline *
PLAIN TEXT IMPORT DONE( Material Design Icon CHECKBOX MARKED CIRCLE OUTLINE)
Returns the currently viewed Base Panel
public Base Panel get Current Base Panel() {
Generate keys
Bibtex Key Pattern Preferences prefs = jab Ref Preferences get Bibtex Key Pattern Preferences()
This class is similar to {@link Graphic Validation Decoration} but with a different style and font based icon
public class Icon Validation Decorator extends Graphic Validation Decoration {
This method returns a J Component detailing the nature of the change
public abstract Node description()
only remove explicit groups from the entries keyword groups should not be deleted
if (group get Group Node() get Group() instanceof Explicit Group) {
Are there children (or children of children ) that are matched If yes we also need to show this node
return node children get Source() stream() any Match(this show Node)
If there are entries to add
if (!to Add is Empty()) {
node should be generated for each call as nodes can be added to the scene graph only once
return icon get Graphic Node()
The user doesn't want to override cite keys
if (!overwrite Keys) {
TODO Add undo panel get Undo Manager() add Edit(new Undoable Field Change(entry editor get Name() text next Abbreviation))
}
Shows a dialog with the warnings from an import or open of a file
public static void show Parser Result Warning Dialog(final Parser Result parser Result final Jab Ref Frame jab Ref Frame) {
The popup has private access in {@link Auto Completion Binding} so we use reflection to access it
@ Suppress Warnings("unchecked")
Try to strip the query string if any to get the correct suffix
URL url = new URL(link)
Add chosen export type to last used pref to become default
Globals prefs put( Jab Ref Preferences LAST USED EXPORT exporter get Name())
Create a new Text Section from the document factory and access it's X Named interface
X Named x Child Named
A tag item in a {@link Tag Bar}
public class Tag<T> extends H Box {
TODO Warn if (! Warn Assignment Side Effects warn Assignment Side Effects(node get Node() get Group() panel frame())) { return // user aborted operation
TODO Expand parent to make new group visible parent expand()
This class will copy each selected entry's Bib Te X key as a hyperlink to its url to the clipboard In case an entry doesn't have a Bib Te X key it will not be copied In case an entry doesn't have an url this will only copy the Bib Te X key
public class Copy Bib Te X Key And Link Action implements Base Action {
check whether there is another icon defined for this file type
for ( External File Type file Type External File Types get Default External File Types()) {
this needs to fixed because it gives "asdf" when going prefs get("lyxpipe")
File lp = new File(command Path)
Concatenates the formatted message of the given {@link Log Event}s by using the a new line separator
private String get Log Messages As String( List< Log Event View Model> messages) {
Creates a {@link Background Task} that first runs this task and based on the result runs a second task
public <T> Background Task<T> then( Function<V Background Task<T>> next Task Factory) {
Opens " New Group Dialog" and add the resulting group to the specified group
public void add New Subgroup( Group Node View Model parent) {
On all O Ses there is a generic application available to handle file opening so use this one
return ""
generate the new cite keys for each entry
final Named Compound compound = new Named Compound( Localization lang(" Autogenerate Bib Te X keys"))
default value
String text = default Pat get Text()
Customization of appearance parameters
public Appearance Prefs Tab( Dialog Service dialog Service Jab Ref Preferences prefs) {
remove node then insert all children
Group Tree Node removed Node = cursor
Remove all current possible suggestions
public void clear Suggestions() {
Get entries and check if it makes sense to perform this operation
entries = base Panel get Selected Entries()
This method first saves all external files to its internal list then writes all abbreviations to their files and finally updates the abbreviations auto complete It basically calls {@link save External Files List()} {@link save Journal Abbreviation Files() } and finally {@link Journal Abbreviation Loader update( Journal Abbreviation Preferences)}
public void save Everything And Update Auto Completer() {
do not open the original file
result get Database Context() clear Database File()
Finds the entry in the list best fitting the specified entry Even if no entries get a score above zero an entry is still returned
private static Bib Entry best Fit( Bib Entry target Entry List< Bib Entry> entries) {
no more bps to check we found a matching one
break
default pattern
protected final Text Field default Pat = new Text Field()
We try to find the page that is displayed in the center of the viewport
Optional< Document Viewer Page> in Middle Of Viewport = Optional empty()
Function to get the command name in case it is different from the application name
protected String get Command Name() {
Check if we are running an acceptable version of Java
final Build Info build Info = Globals BUILD INFO
{@inherit Doc}
@ Override
Alt on Windows
LOGGER debug(" Mode LINK")
General information
V Box context Panel = new V Box(10)
compare normalized markers since the actual markers can be different
String[] markers = norm Cit Markers[i]
all keywords from first entry have to be added
Bib Entry first Entry = entries get(0)
must be set here because in initialize the button is still null
btn Connect disable Property() bind(view Model form Validation() valid Property() not())
everything is ok
return null
See if we can find a type with matching name in the default type list
External File Type found = null
We need to wait with setting the divider since it gets reset a few times during the initial set up
main Stage showing Property() add Listener(new Change Listener< Boolean>() {
We calculate the new hit value We could be more intelligent and try to figure out the new number of hits based on the entry change for example a previously matched entry gets removed > hits = hits 1
Background Task
It was modified Remove its entry from the defaults list since the type hasn't been removed
def Types remove(found)
Cannot rename remote links
return
remember modified children for redo
m modified Subtree clear()
If the given component is visible it will be hidden and the other way around
public void toggle( Side Pane Type type) {
Interface presents user described paste behaviour applying to paste method
@ Functional Interface
icon set Too( Localization lang(" Open") + " PDF")
TABLE ICONS put( Standard Field PDF icon)
First get a list of the default file types as a starting point
List< External File Type> types = new Array List<>(get Default External File Types())
The name to change to is already in the database so we can't comply
LOGGER info(" Cannot rename string '" + mem + "' to '" + disk + "' because the name "
Look up the external file type registered with this name if any
public Optional< External File Type> get External File Type By Name( String name) {
TODO Add undo/redo ce add Edit(new Undoable Insert Entry(panel get Database() entry))
The action concerned with generate a new (sub )database from latex AUX file
public class New Sub Library Action extends Simple Command {
Starts the search of unlinked files according chosen directory and the file type selection The search will process in a separate thread and a progress indicator will be displayed
private void start Search() {
Gets the filename for the current linked file and compares it to the new suggested filename
public boolean is Generated Name Same As Original() {
Modified externally
field Changes add(new Field Change View Model(field mem Entry tmp Entry mem or Else(null) tmp get() disk get()))
Responsible for managing of all threads (except GUI threads) in Jab Ref
public class Jab Ref Executor Service {
all the logic is done in open It Even raising an existing panel
get Open Database Action() open File(file true)
Focuses the given field
public void request Focus( Field field Name) {
Set paste Action Handler variable to passed handler
public void set Paste Action Handler( Paste Action Handler handler) {
Gets invoked if the user selects a different group We need to notify the {@link State Manager} about this change so that the main table gets updated
private void on Selected Group Changed( Observable List< Group Node View Model> new Value) {
Merge entries
for ( Bib Entry entry pr get Database() get Entries()) {
This panel contains the two comboboxes and the Add button
private Grid Pane get Selector Panel() {
Gets invoked if the user changes the active database We need to get the new group tree and update the view
private void on Active Database Changed( Optional< Bib Database Context> new Database) {
Use " a <application>" if the app is specified and just "open <filename>" otherwise
String[] cmd = (application != null) && !application is Empty() new String[] {"/usr/bin/open" " a"
set default values (overwritten if edited Group != null)
keyword Group Search Field set Text(prefs get( Jab Ref Preferences GROUPS DEFAULT FIELD))
Check if the cloned entry has a crossref field
cloned Entry get Field( Standard Field CROSSREF) if Present(crossref > {
Print icon used for menu
Special Field View Model printed View Model = new Special Field View Model( Special Field PRINTED undo Manager)
Return a String array representing this file type This is used for storage into Preferences and the same array can be used to construct the file type later using the String[] constructor
private String[] get String Array Representation( External File Type type) {
must be here
Abbreviation abbreviation = journal Abbreviation Repository get Abbreviation(text) get()
This method will write all abbreviations of this abbreviation file to the file on the file system It essentially will check if the current file is a built in list and if not it will call {@link Abbreviation Writer write Or Create()}
public void write Or Create() throws IO Exception {
Constructs an {@link Image} for the image representing the given function in the resource file listing images @param name The name of the icon such as "open" "save" "save As" etc @return The {@link Image} for the function
private static Image get Image FX( String name) {
Need to toggle a twice to make sure everything is selected
root set Selected(true)
fetch entries from GUI
Global Bibtex Key Pattern keypatterns = get Key Pattern As Global Bibtex Key Pattern()
icon set Tool Tip Text( Localization lang(" Open %0 file" file Type get Name()))
TABLE ICONS put(file Type get Field() icon)
The default context menu with a specific menu for normalizing person names regarding to Bib Tex rules
public static Supplier< List< Menu Item>> get Name Menu(final Text Input Control text Input) {
Update the map of uniquefiers for the benefit of both the following generation of new citation markers and for the method that builds the bibliography
uniquefiers put(key String value Of((char) uniq))
Check if any of the files are already open
for ( Iterator< Path> iterator = files To Open iterator() iterator has Next() ) {
Automatically imports the files given as arguments
public void automated Import( List< String> filenames) {
Return null if the directory is not valid
if ((directory == null) || !directory exists() || !directory is Directory()) {
set Bounds( Graphics Environment get Local Graphics Environment() get Maximum Window Bounds()) Window Location pw = new Window Location(this Jab Ref Preferences POS X Jab Ref Preferences POS Y Jab Ref Preferences SIZE X Jab Ref Preferences SIZE Y) pw display Window At Stored Location()
css file find *
AUTO FILE LINK( Material Design Icon FILE FIND)
icon set Tool Tip Text( Localization lang(" Open file"))
TABLE ICONS put( Standard Field FILE icon)
Here we store the names of all current files If there is no current file we remove any previously stored filename
if (filenames is Empty()) {
Add to group
add To Groups(entries state Manager get Selected Group(database))
The subtree that was added or removed
private final Group Tree Node m subtree Backup
Run a recursive search in a background task
public void search Button Clicked() {
Read a typical java property url into a Map Currently doesn't support escaping of the '=' character it simply looks for the first '=' to determine where the key ends Both the key and the value is trimmed for whitespace at the ends
// FIXME prefix can be removed !
Asks the user for confirmation that he really wants to the delete the file from disk (or just remove the link)
public boolean delete() {
Different actions depending on where the user releases the drop in the target row Bottom + top > import entries Center > link files to entry
switch ( Control Helper get Dropping Mouse Location(row event)) {
empty tab without database
if (panel == null) {
Exporter View Model wraps a Template Exporter from logic and is used in the exporter customization dialog view and View Model
The Preferences panel for key generation
class Bibtex Key Pattern Pref Tab extends Bibtex Key Pattern Panel implements Preferences Tab {
insert the factory of the loader
x Set insert(x Imp Loader activate("com sun star comp loader Java Loader" null null null))
We try to to prevent publishing changes in the search field directly to the search task that takes some time for larger group structures
final Timer search Task = Fx Timer create( Duration of Millis(400) () > {
Build individual layout cards for each group
V Box explicit Panel = create Options Explicit Group()
Installs the style file and provides live reloading <p> The live reloading has to be turned on by setting the <code> Djabref theme css</code> property There two possible modes (1) When only <code> Djabref theme css</code> is specified then the standard <code> Base css</code> that is found will be watched and on changes in that file the style sheet will be reloaded and changes are immediately visible (2) When a path to a css file is passed to <code> Djabref theme css</code> then the given style is loaded in addition to the base css file Changes in the specified css file lead to an immediate redraw of the interface <p> When working from an IDE this usually means that the <code> Base css</code> is located in the build folder To use the css file that is located in the sources directly the full path can be given as value for the "VM option" <code> Djabref theme css="/path/to/src/ Base css"</code>
public class Theme Loader {
Set entry number in case that is included in the preview layout
Exporter Factory entry Number = 1
For some reason the graphic is not set correctly so let's fix this To DO Find a way to reuse Jab Ref Icon View
button graphic Property() unbind()
Pass other keys to children
}
class is indirectly constructed by log4j
@ Suppress Warnings("unused")
Different actions depending on where the user releases the drop in the target row Bottom + top > insert source row before / after this row Center > add as child
switch (mouse Location) {
Opens a file browser of the folder of the given file If possible the file is selected
public static void open Folder And Select File( Path file Link) throws IO Exception {
FIXME prefix can be removed !
private static Map< String String> read Icon Theme File(URL url String prefix) {
This class represents the removal of an entry The constructor needs references to the database the entry and the map of open entry editors The latter to be able to close the entry's editor if it is opened after an undo and the removal is then undone
public class Undoable Remove Entry extends Abstract Undoable Jab Ref Edit {
We know that tmp Entry is not equal to disk Entry Check if it has been modified locally as well since last tempfile was saved
boolean is Modified Locally = ( Duplicate Check compare Entries Strictly(mem Entry tmp Entry) <= 1)
The preferences might be not initialized in tests > return immediately TODO Replace this ugly workaround by proper injection propagation
if ( Globals prefs == null) {
@return Merged Bib Entry
public Bib Entry get Merge Entry() {
Focuses the search field if it is not focused
public void focus() {
Decide whether to show this tab for the given entry
public abstract boolean should Show( Bib Entry entry)
Register undo/redo listener
base Panel get Undo Manager() register Listener(new Undo Redo Event Manager())
icon set Tool Tip Text( Localization lang(" Open") + " Ar Xiv URL")
TABLE ICONS put( Standard Field EPRINT icon)
Reporting etc this method is called on the event dispatch thread after push Entries() returns
void operation Completed()
Creates an object that can undo/redo an edit event
public Undoable Add Or Remove Group( Group Tree Node View Model groups Root
We have to use reflection since Table Util is not visible to us
try {
insert the acceptor
x Set insert(x Imp Loader activate("com sun star comp connections Acceptor" null null null))
TODO Font & padding customization set Font(GUI Globals current Font)
}
We have sorted the citation markers according to their order of appearance so we simply count up for each marker referring to a new entry
List< Integer> num = new Array List<>(keys length)
Specific importer
Parser Result pr = importer get() import Database(filename Globals prefs get Default Encoding())
Get the office component context
X Component Context x Context = org jabref gui openoffice Bootstrap bootstrap(loader)
The type of the editing (ADD NODE REMOVE NODE KEEP CHILDREN REMOVE NODE AND CHILDREN)
private final int m edit Type
Font configuration
H Box font Box = new H Box()
Shift on Windows or no modifier
LOGGER debug(" Mode MOVE")
GUI component that allows editing of the fields of a Bib Entry (i e the one that shows up when you double click on an entry in the table) <p> It hosts the tabs (required general optional) and the buttons to the left <p> Entry Editor also registers itself to the event bus receiving events whenever a field of the entry changes enabling the text fields to update themselves if the change is made from somewhere else
public class Entry Editor extends Border Pane {
TODO Float marked entries model update Marking State( Globals prefs get Boolean( Jab Ref Preferences FLOAT MARKED ENTRIES))
Ignore
return new Read Only String Wrapper("")
Find default choice if any
Exporter default Choice = exporters stream()
This marker appears for more than one unique entry
int uniq = 'a'
Constructs a {@link Tree Table Cell} based on the view model of the row and a bunch of specified converter methods
public class View Model Table Row Factory<S> implements Callback< Table View<S> Table Row<S>> {
Override used newline character with the one stored in the preferences The preferences return the system newline character sequence as default
OS NEWLINE = Globals prefs get( Jab Ref Preferences NEWLINE)
For each cited key
for ( String key cited) {
connection string
String s Connect = "uno socket host=localhost port=2083" + " urp Star Office Component Context"
Generates a plain text string out of the preview and copies it additionally to the html to the clipboard (WYSIWYG Editors use the HTML plain text editors the text)
protected static String process Preview( List< String> citations) {
IEEE Tran
populate Sub Menu(items "IEEE Tran" IEEE Tran Entry Type Definitions ALL entry undo Manager)
Sort the visible components by their preferred position
visible Components sort(new Preferred Index Sort())
This method should be called after storing the preferences This calls the appropriate method in the View Model
List< String> get Restart Warnings()
Should this be done after we know it was successfully opened
Parser Result parser Result = Open Database load Database(file to File()
Find the default directory for this field type
List< String> dir = database Context get File Directories(field Globals prefs get File Preferences())
Set up annotation list
annotation List get Selection Model() set Selection Mode( Selection Mode SINGLE)
Bootstraps an initial component context with service manager and basic jurt components inserted
public static X Component Context create Initial Component Context( Map< String Object> context entries) throws Exception {
redo
} else {
Generate keys for given entries
private void generate Keys( List< Bib Entry> entries) {
This Action keeps a reference to a URL When activated it shows the help Dialog unless it is already visible and shows the URL in it
public class Help Action extends Simple Command {
Only serialize linked files not the ones that are automatically found
List< Linked File> files To Serialize = files stream()
Puts the value of the concrete class in a map All previous content stored in the map is removed
public <T> void put Value( Class<T> type T value) {
create default local component context
X Component Context x Local Context = create Initial Component Context(( Map< String Object>) null)
Update appearance of group
any Selected Entries Matched invalidate()
Checks if there are duplicates to the given entry in the list of entries to be imported
private Optional< Bib Entry> find Internal Duplicate( Bib Entry entry) {
If there are entries to remove
if (!to Remove is Empty()) {
General fields from preferences
for ( Map Entry< String Set< Field>> tab entry Editor Preferences get Entry Editor Tab List() entry Set()) {
Class for creating the information about customizable entry editor tabs
public final class Entry Editor Tab List {
Do not make this class final as it otherwise can't be mocked for tests
public class External File Types {
Refresh all reference marks with the citation markers we computed
boolean had Bib Section = get Bookmark Range(OO Bib Base BIB SECTION NAME) != null
Save the database
boolean success = save Database(target Path false
Class that defines interaction with an external application in the form of "pushing" selected entries to it
public interface Push To Application {
A Hyperlink Click Listener for javafx Web View to open links on click in the browser Code adapted from <a href="https //stackoverflow com/a/33445383/">https //stackoverflow com/a/33445383/</a>
public class Open Hyperlinks In External Browser implements Change Listener< Worker State> Event Listener {
Constructs a {@link Tree Table Cell} based on the view model of the row and a bunch of specified converter methods
public class View Model Tree Table Cell Factory<S> implements Callback< Tree Table Column<S S> Tree Table Cell<S S>> {
Looks up the URL for the image representing the given function in the resource file listing images
public static URL get Icon Url( String name) {
Quick hack to disable navigating
browser add Event Filter(javafx scene input Mouse Event ANY javafx scene input Mouse Event consume)
Use the received map directly
correct Entries = entries
Register for changes
for ( Observable observable new Entry get Observables()) {
Empty
public Suggestion Providers() {
Disables selection
public class No Selection Model<T> extends Multiple Selection Model<T> {
Moves the given component down
public void move Down( Side Pane Component comp) {
for the case that the password is already set
prefs clear Password()
Updated the original entry with the new fields
Set< Field> joint Fields = new Tree Set<>( Comparator comparing( Field get Name))
GUI for tab displaying article recommendations based on the currently selected Bib Entry
public class Related Articles Tab extends Entry Editor Tab {
TODO NULL TODO Null TODO NULL
Group Tree Node new Parent = root get Node() get Descendant(path To New Parent) get()
A date picker with configurable datetime format where both date and time can be changed via the text field and the date can additionally be changed via the Java FX default date picker Also supports incomplete dates First recall how the date picker normally works The user selects a date in the popup which sets {@link value Property()} to the selected date The converter ({@link converter Property()}) is used to transform the date to a string representation and display it in the text field The idea is now to intercept the process and add an additional step The user selects a date in the popup which sets {@link value Property()} to the selected date The date is converted to a {@link Temporal Accessor} (i e enriched by a time component) using {@link add Current Time( Local Date)} The string converter ({@link string Converter Property()}) is used to transform the temporal accessor to a string representation and display it in the text field Inspiration taken from https
public class Temporal Accessor Picker extends Date Picker {
A simple command that does not track progress of the action
public abstract class Simple Command extends Command Base {
Create a new entry and add it to the undo stack Remove the other two entries and add them to the undo stack (which is not working )
Named Compound ce = new Named Compound( Localization lang(" Merge entries"))
If we are not allowed to overwrite values check if there is a non empty value already for this entry for the new field
Optional< String> val In New Field = entry get Field(new Field)
Holds the version in memory Check if it has been modified
this in Mem = in Mem
This class provides a view model for abbreviation objects which can also define placeholder objects of abbreviations This is indicated by using the {@code pseudo Abbreviation} property
public class Abbreviation View Model {
TODO Implement jump to entry TODO Add toolitp for tag Localization lang(" Jump to entry") This feature was removed while converting the linked entries editor to Java FX Right now there is no nice way to re implement it as we have no good interface to control the focus of the main table (except directly using the Jab Ref Frame class as below) parsed Entry Link get Linked Entry() if Present( e > frame get Current Base Panel() highlight Entry(e) )
}
base Panel get Preview Panel() update Layout(preferences get Preview Preferences())
}
The mouse location within the cell when the dropping gesture occurs
public enum Dropping Mouse Location {
Store changes to table preferences This method is called when the user clicks Ok
@ Override
TODO Rework so that we don't rely on Jab Ref Frame and not the complete preferences
this frame = frame
Util class for searching files on the file system which are not linked to a provided {@link Bib Database}
public class Unlinked Files Crawler extends Background Task< Check Box Tree Item< File Node Wrapper>> {
Entry type unknown > treat all fields as required
fields add All(entry get Fields())
Switch to currently selected entry if mode is changed to live
Returns a list of Base Panel
public List< Base Panel> get Base Panel List() {
We need to wrap the list since otherwise sorting in the table does not work
entries Sorted = new Sorted List<>(entries Filtered)
Creates a V Box of the related article information to be used in the Stack Pane displayed in the Related Articles tab
private Scroll Pane get Related Article Info( List< Bib Entry> list Mr D Lib Fetcher fetcher) {
Redo the change
base remove String(string get Id())
Refresh all cite markers in the document
public List< String> refresh Cite Markers( List< Bib Database> databases OO Bib Style style)
TODO Swing Utilities invoke Later(() > {undo put Value( Action SHORT DESCRIPTION event get Undo Description()) undo set Enabled(event is Can Undo()) redo put Value( Action SHORT DESCRIPTION event get Redo Description()) redo set Enabled(event is Can Redo()) })
}
move all children to new Node then add new Node
Group Tree Node new Node = m subtree Backup copy Subtree()
Checks whether the file exists or if a new file should be opened The file will be added to the set of journal abbreviation files If the file also exists its abbreviations will be read and written to the abbreviations property
private void open File( Path file Path) {
TODO reflective access should be removed
Class< > clazz = Class for Name("javafx scene control Table Util")
if user does not change anything with his action we do not do anything either even no output message
}
Enriches a suggestion provider by a given set of content selector values
public class Content Selector Suggestion Provider implements Auto Complete Suggestion Provider< String> {
Revert the change
try {
Always fill out all the available space
set Pref Height( Double POSITIVE INFINITY)
Good bye!
tear Down Jab Ref(filenames)
Enrich auto completion by content selector values
try {
Name the reference
X Named x Named = Uno Runtime query Interface(X Named class bookmark)
The log event will be forwarded to the {@link Log Messages} archive
@ Override
To Do After conversion of all tabs to mvvm rework interface and make valid Settings bindable Button btn Save = ( Button) this get Dialog Pane() lookup Button(save Button) btn Save disable Property() bind(view Model valid Settings() valid Property() not())
}
Frame titles
public static final String FRAME TITLE = " Jab Ref"
Set to true in case the command could not be executed e g if the file is not found Set to true in case the tunnel to the program (if one is used) does not operate Set to true if the corresponding path is not defined in the preferences
protected boolean could Not Call
Add context menu (only for non null items)
row context Menu Property() bind(
Copies the selected entries and formats them with the selected citation style (or preview) then it is copied to the clipboard This worker cannot be reused
public class Citation Style To Clipboard Worker {
This class defines a type of external files that can be linked to from Jab Ref The class contains enough information to provide an icon a standard extension and a link to which application handles files of this type
public class Custom External File Type implements External File Type {
Error stream has been closed See if there were any errors
if (!sb to String() trim() is Empty()) {
In case it did not work
catch (IO Exception excep) {
{@link File Filter} implementation that allows only files which are not linked in any of the {@link Bib Entry}s of the specified {@link Bib Database} This {@link File Filter} sits on top of another {@link File Filter} implementation which it first consults Only if this major filefilter has accepted a file this implementation will verify on that file
public class Unlinked PDF File Filter implements File Filter {
Sort entries into current members and non members of the group Current members will be removed Current non members will be added
List< Bib Entry> to Remove = new Array List<>(entries size())
For "ONLY FULL" the auto completer returns the full name e g " Smith Bob" For "ONLY ABBREVIATED" the auto completer returns the first name abbreviated e g " Smith B " For "BOTH" the auto completer returns both versions
public enum Auto Complete First Name Mode {
Resolve the bibtex key from a citation reference marker name and look up the index of the key in a list of keys
Send event to trigger changes
post Undo Redo Event()
This class provides a model for managing journal abbreviation lists It provides all necessary methods to create modify or delete journal abbreviations and files To visualize the model one can bind the properties to ui elements
public class Manage Journal Abbreviations View Model extends Abstract View Model {
Makes sure that the given component is visible
public void show( Side Pane Type type) {
TODO show parserwarnings if any (not here) for ( Import Format Reader Unknown Format Import p imports) { Parser Result Warning Dialog show Parser Result Warning Dialog(p parser Result frame) }
if (bibtex Result == null) {
The action concerned with opening an existing database
public class Open Database Action extends Simple Command {
icon set Tool Tip Text(priority View Model get Localization())
TABLE ICONS put( Special Field PRIORITY icon)
Check if the type has changed
if (!identical Types && !type Radio Buttons is Empty() && type Radio Buttons get(0) is Selected()) {
In case no string Converter was provided use the default strategy
if (this string Converter == null) {
Installs the base css file as a stylesheet in the given scene Changes in the css file lead to a redraw of the scene using the new css file
public void install Css( Scene scene Jab Ref Preferences preferences) {
TODO Add undo and display message Move Group Change undo = new Move Group Change((( Group Tree Node View Model)source get Parent()) get Node() source get Node() get Position In Parent() target get Node() target get Child Count())
Except every file
return pathname > true
The current version of the installed Jab Ref
private final Version installed Version
No occurrence or at the end Check if there are path separators in the suffix if so it is definitely not a proper suffix so we should give up
if (stripped Link substring(stripped Link Index + 1) index Of('/') >= 1) {
This method causes all open Base Panels to set up their tables anew When called from Prefs Dialog3 this updates to the new settings
public void setup All Tables() {
Pretend that we just switched to the current file in order to refresh the display
notify New Selected File(current File)
Pass other keys to parent
}
Must be executed after the initialization of the view otherwise it doesn't work
Platform run Later(() > {
Remember the type in case we need to uniquefy
types[i] = type
Steps to reproduce
String how To Reproduce = " Steps to reproduce \n\n1 \n2 \n3 "
do not open the original file
pr get Database Context() clear Database File()
We have to put Entry Editor Previous before because otherwise the decrease font size is found first
ENTRY EDITOR PREVIOUS PANEL 2(" Entry editor previous panel 2" Localization lang(" Entry editor previous panel 2") "ctrl+MINUS" Key Binding Category VIEW)
Update active search query when switching between databases
state Manager active Search Query Property() set(new Base Panel get Current Search Query())
Create help button for currently selected fetcher
Stack Pane help Button Container = new Stack Pane()
In case of removing a node but keeping all of its children the number of children has to be stored
private final int m subtree Root Child Count
Move contents from one field to another for a Collection of entries
private static Undoable Edit mass Rename Field( Collection< Bib Entry> entries Field field Field new Field
Adding of a single node (group)
public static final int ADD NODE = 0
This is called when the user drops some Preview Layouts either in the available List View or in the empty space of chosen List View
TODO use WEB SEARCH instead as soon as it is available TODO use WEB SEARCH instead as soon as it is available
LOOKUP IDENTIFIER( Material Design Icon MAGNIFY)
Executes the task on the current thread The code is essentially taken from {@link javafx concurrent Task Task Callable call()} but adapted to run sequentially
@ Override
This method returns the default key binding the key(s) which are assigned
public String get Default Key Binding() {
TODO Add undo Undoable Add Or Remove Group undo = new Undoable Add Or Remove Group(parent new Group Tree Node View Model(new Group Node) Undoable Add Or Remove Group ADD NODE) panel get Undo Manager() add Edit(undo)
Test if the field is legally set
new Latex Field Formatter(field Formatter Preferences) format(new Value field Name)
Need to run this async otherwise the dialog does not work
Controls Fx Visualizer visualizer = new Controls Fx Visualizer()
Revert the change
if (name Change) {
and adding merged entries
if (!result get To Add() is Empty()) {
remove newlines && hyphens before linebreaks
marking Content = marking Content replace All(" " + NEWLINE "")
Creates a {@link Background Task} that first runs this task and based on the result runs a second task
public <T> Background Task<T> then Run( Function<V T> next Operation) {
This action checks whether any new custom entry types were loaded from this BIB file If so an offer to remember these entry types is given
public class Check For New Entry Types Action implements GUI Post Open Action {
private void open The File( Path file boolean raise Panel) {
Other fields
entry Editor Tabs add(new Other Fields Tab(database Context panel get Suggestion Providers() undo Manager
Register listener The wrapper created by the FX Collections will set a weak listener on the wrapped list This weak listener gets garbage collected Hence we need to maintain a reference to this list
entries List = database Context get Database() get Entries()
Try to download fulltext PDF for selected entry(ies) by following URL or DOI link
public class Find Full Text Action extends Simple Command {
Editor for external file types
public class Customize External File Types Dialog extends Base Dialog< Void> {
configure elements
Toggle Group group Type = new Toggle Group()
This class is essentially a wrapper around {@link Task} We cannot use {@link Task} directly since it runs certain update notifications on the Java FX thread and so makes testing harder We take the opportunity and implement a fluid interface
public abstract class Background Task<V> {
Updates the view with the contents of the given entry
protected abstract void bind To Entry( Bib Entry entry)
try to connect to office
Object context = x Url Resolver resolve(s Connect)
Switch tab if asked to do so
if (data Base Number >= 0) {
Store visual state
new Persistence Visual State Table(this Globals prefs)
This class has an abstract UI role as it listens for an {@link Autosave Event} and saves the bib file associated with the given {@link Base Panel}
public class Autosave UI Manager {
Set owner/timestamp
Update Field set Automatic Fields(entries update Field Preferences)
the submenu will behave dependent on what style is currently selected (citation/preview)
Preview Preferences preview Preferences = Globals prefs get Preview Preferences()
Find the linking footnote marker
X Footnote footer = Uno Runtime query Interface(X Footnote class range get Text())
Tests if we are running an acceptable Java and terminates Jab Ref when we are sure the version is not supported This test uses the requirements for the Java version as specified in <code>gradle build</code> It is possible to define a minimum version including the built number and to indicate whether Java 9 can be used (which it currently can't) It tries to compare this version number to the version of the currently running JVM The check is optimistic and will rather return true even if we could not exactly determine the version <p> Note Users with a very old version like 1 6 will not profit from this since class versions are incompatible and Jab Ref won't even start Currently Jab Ref won't start with Java 9 either but the warning that it cannot be used with this version is helpful anyway to prevent users to update from an old 1 8 directly to version 9 Additionally we soon might have a Jab Ref that does start with Java 9 but is not perfectly compatible Therefore we should leave the Java 9 check alive
private static void ensure Correct Java Version() {
Subscribe to type changes for rebuilding the currently visible tab
type Subscription = Easy Bind subscribe(this entry type Property() type > {
May happen during initialization > just ignore
continue
Look for the last ' ' in the link and return the following characters This gives the extension for most reasonably named links
public static Optional< String> get Suffix(final String link) {
No selected group show all entries
return Optional empty()
Headings
private final List< String> column Headings = Arrays as List( Localization lang(" Field")
get X Text Content interface
X Text Content x Text Content = Uno Runtime query Interface(X Text Content class bookmark)
Method to change the current Abbrevaition property to a new abbreviation
public void edit Abbreviation( String name String abbreviation) {
Update the merged entry
private void update Merged Entry() {
release panel from save status
panel set Saving(false)
Set text of each of the boxes
if (exporter != null) {
Do nothing
} else if (answer == Duplicate Resolver Dialog Duplicate Resolver Result KEEP MERGE) {
This class represents the removal of an entry The constructor needs references to the database the entry and the map of open entry editors The latter to be able to close the entry's editor if it is opened before the insert is undone
public class Undoable Insert Entry extends Abstract Undoable Jab Ref Edit {
This method is called to indicate that the settings panel returned from the get Settings Panel() method has been shown to the user and that the user has indicated that the settings should be stored This method must store the state of the widgets in the settings panel to Globals prefs
public void store Settings() {
Check the given possible suggestion is a match (is a valid suggestion)
protected abstract boolean is Match(T suggestion I Suggestion Request request)
Read name format options MK
final boolean names Natbib = Globals prefs get Boolean( Jab Ref Preferences NAMES NATBIB) //MK
This method inserts a cite marker in the text for the given Bib Entry and may refresh the bibliography
public void insert Entry( List< Bib Entry> entries Bib Database database
FIXME Move to view Model until field Formatter Cleanups Panel is property implemented
Meta Data meta Data = panel get Bib Database Context() get Meta Data()
Since the directory does not exist we cannot move it to there So this option is not checked regardless of the presets stored in the preferences
clean Up Move PDF set Disable(true)
TODO reflective access should be removed
Field private Popup = Auto Completion Binding class get Declared Field("auto Completion Popup")
ensure that there is always only one All Entries Group
if (new Groups get Group() instanceof All Entries Group) {
Class for manipulating the Bibliography of the currently start document in Open Office
class OO Bib Base {
Check for running Jab Ref
if (!handle Multiple App Instances(arguments) || argument Processor should Shut Down()) {
The Mac Adapter calls this method when " About" is selected from the application menu
public void about() {
TODO Be a bit smarter and try to infer correct icon for example using {@link org jabref gui externalfiletype External File Types get External File Type By Name( String)}
public Jab Ref Icon get Type Icon() {
Restore focus to field (run this async so that editor is already initialized correctly)
selected Field Name if Present(this request Focus)
Get the page number of the current page in the document
public abstract int get Page Number()
First see if the stripped link gives a reasonable suffix
String suffix
Hide progress indicator if finished (over 70% loaded)
browser get Engine() get Load Worker() progress Property() add Listener((observable old Value new Value) > {
fields
for ( Field field joint Fields) {
Ask if keys should be generated
boolean cite Pressed = dialog Service show Confirmation Dialog And Wait( Localization lang(" Cite")
quote String so explorer handles URL query strings correctly
String quote Path = "\"" + file Path + "\""
This class provides a model for abbreviation files It actually doesn't save the files as objects but rather saves their paths This also allows to specify pseudo files as placeholder objects
public class Abbreviations File View Model {
Set language to [ None]
x Cursor Props set Property Value(" Char Locale" new Locale("zxx" "" ""))
To align with buttons below which also have 0 5em padding
info set Style(" fx padding 0 5em 0 0 5em 0 ")
TODO switch Icon color search Icon set Icon( Icon Theme Jab Ref Icon SEARCH get Icon())
}
The entry currently shown
private Optional< Bib Entry> entry = Optional empty()
setting a multi value special field the setted value is displayed too
String[] all Params = {view Model get Localization() params[0] params[1]}
First hide old page and show background instead (recalculate size of background to make sure its correct)
background set Width(get Desired Width())
For some reason the graphic is not set correctly so let's fix this
set Graphic(menu action)
Exception used to indicate that the plugin attempted to set a character format that is not defined in the current Open Office document
class Undefined Character Format Exception extends Exception {
Submits a one shot task that becomes enabled after the given delay
<V> Future< > schedule( Background Task<V> task long delay Time Unit unit)
css folder *
OPEN( Material Design Icon FOLDER OUTLINE)
This Action may only be used in a menu or button Never in the entry editor File List Editor and Entry Editor have other ways to update the file links
public class Auto Link Files Action extends Simple Command {
backwards compatibility stub
public static X Component Context create Initial Component Context( Hashtable< String Object> context entries) throws Exception {
Swing
requires java desktop
Preferences and XML
requires java prefs
Annotations (@ Post Construct)
requires java annotation
Libre Office
requires org jabref thirdparty libreoffice
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors
public class Database Change Event {
no data
}
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors
public interface Database Change Listener {
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors
public class Database Change Registration {
do nothing
}
FIXME Reuse Search Worker here
Search Query search Query = new Search Query(" Journal Title 500" false false)
FIXME Reuse Search Worker here
Search Query search Query = new Search Query(" Journal Title 500" false false)
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors
public class Oracle Connection implements Connection {
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors
public class Oracle Driver {
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors
public class Oracle Statement {
This package contains stubs for oracle jdbc to prevent build errors if the non distributable oraclejdbdc6 jar is unavailable in the classpath
package oracle jdbc
empty
}
Annotation to indicate that usage of Apache Commons Lang3 is explicitly allowed The intention is to fully switch to Google Guava and only use Apache Commons Lang3 if there is no other possibility
public @interface Apache Commons Lang3 Allowed {
The rationale
String value()
print statistics
System out println(new Aux Parser Result View Model(result) get Information(true))
Defines the different modes that the Base Panel can operate in
Puts content onto the clipboard
public void set Content( Clipboard Content content) {
Get the String residing on the clipboard @return any text found on the Clipboard if none found return an empty String
public String get Contents() {
Will open a file (like import File) but will also request Jab Ref to focus on this database
private static Optional< Parser Result> import To Open Base( String argument) {
Run an entry fetcher from the command line
private Optional< Parser Result> fetch( String fetch Command) {
Download web resource to temporary file
try {
* means "guess the format"
System out println( Localization lang(" Importing in unknown format") + " " + file)
Check if we should reset all preferences to default values
if (cli is Preferences Reset()) {
Check if we should import preferences from a file
if (cli is Preferences Import()) {
List to put imported/loaded database(s) in
List< Parser Result> loaded = import And Open Files()
enables blanks within the search term $ stands for a blank
String search Term = data[0] replace("\\$" " ")
export matches
if (!matches is Empty()) {
read in the export format take default format if no format entered
switch (data length) {
default exporter HTML table (with Abstract & Bib Te X)
format Name = "tablerefsabsbib"
export new database
Optional< Exporter> exporter = Globals export Factory get Exporter By Name(format Name)
Leftover arguments that have a "bib" extension are interpreted as BIB files to open Other files and files that could not be opened as bib we try to import instead
boolean bib Extension = a Left Over to Lower Case( Locale ENGLISH) ends With("bib")
We will try to import this file Normally we will import it into a new tab but if this import has been initiated by another instance through the remote listener we will instead import it into the current library This will enable easy integration with web browsers that can open a reference file in Jab Ref
if (startup Mode == Mode INITIAL START) {
write an output if something could be resolved
if ((new Base != null) && new Base has Entries()) {
Show just a warning message if encoding did not work for all characters
if (file Writer has Encoding Problems()) {
This signals that the latest import should be stored in Bib Te X format to the given file
if (!loaded is Empty()) {
This signals that the latest import should be stored in the given format to the given file
Parser Result pr = loaded get(loaded size() 1)
Set the global variable for this database's file directory before exporting so formatters can resolve linked files correctly ( This is an ugly hack!)
File the File = pr get File() get()
String clear Search = "clear Search" main Table get Input Map() put( Globals get Key Prefs() get Key( Key Binding CLEAR SEARCH) clear Search) main Table get Action Map() put(clear Search new Abstract Action() {@ Override public void action Performed( Action Event e) { // need to close these here b/c this action overshadows the responsible actions when the main table is selected switch (mode) { case SHOWING NOTHING frame get Global Search Bar() end Search() break case SHOWING PREVIEW get Preview Panel() close() break case SHOWING EDITOR case WILL SHOW EDITOR entry Editor Closing(get Entry Editor()) break default LOGGER warn("unknown Base Panel Mode '" + mode + "' doing nothing") break } } }) main Table get Action Map() put( Actions CUT new Abstract Action() {@ Override public void action Performed( Action Event e) { try { run Command( Actions CUT) } catch ( Throwable ex) { LOGGER warn(" Could not cut" ex) } } }) main Table get Action Map() put( Actions COPY new Abstract Action() {@ Override public void action Performed( Action Event e) { try { run Command( Actions COPY) } catch ( Throwable ex) { LOGGER warn(" Could not copy" ex) } } }) main Table get Action Map() put( Actions PASTE new Abstract Action() {@ Override public void action Performed( Action Event e) { try { run Command( Actions PASTE) } catch ( Throwable ex) { LOGGER warn(" Could not paste" ex) } } })
}
The search can lead to an unexpected 100% CPU usage which is perceived as a bug if the search incidentally starts at a directory with lots of stuff below It is now disabled by default *
private class Search Auto Complete Listener {
Returns a collection of suggestion providers which are populated from the current library
public Suggestion Providers get Suggestion Providers() {
* Generates and copies citations based on the selected entries to the clipboard @param output Format the desired {@link Citation Style Output Format}
private void copy Citation To Clipboard( Citation Style Output Format output Format) {
Removes the selected entries from the database @param cut If false the user will get asked if he really wants to delete the entries and it will be localized as "deleted" If true the action will be localized as "cut"
public void delete(boolean cut) {
This method is called from Jab Ref Frame if a database specific action is requested by the user Runs the command if it is defined or prints an error message to the standard error stream
public void run Command(final Actions command) {
This method is called from Jab Ref Frame when the user wants to create a new entry @param bib Entry The new entry
public void insert Entry(final Bib Entry bib Entry) {
Set up auto completion for this database
private void setup Auto Completion() {
Sets the entry editor as the bottom component in the split pane If an entry editor already was shown makes sure that the divider doesn't move Updates the mode to SHOWING EDITOR Then shows the given entry @param entry The entry to edit
public void show And Edit( Bib Entry entry) {
This method selects the given entry and scrolls it into view in the table If an entry Editor is shown it is given focus afterwards
public void clear And Select(final Bib Entry bib Entry) {
This method is called from an Entry Editor when it should be closed We relay to the selection listener which takes care of the rest
public void entry Editor Closing() {
Closes the entry editor if it is showing the given entry
private void ensure Not Showing Bottom Panel( Bib Entry entry) {
Depending on whether a preview or an entry editor is showing save the current divider location in the correct preference setting
private void save Divider Location( Number position) {
Get an array containing the currently selected entries The array is stable and not changed if the selection changes @return A list containing the selected entries Is never null
public List< Bib Entry> get Selected Entries() {
Set the query the user currently searches while this basepanel is active
public void set Current Search Query( Optional< Search Query> current Search Query) {
Ensures that the search auto completer is up to date when entries are changed AKA Let the auto completer if any harvest words from the entry Actual methods for autocomplete indexingmust run in javafx thread
private class Search Auto Complete Listener {
Ensures that the results of the current search are updated when a new entry is inserted into the database Actual methods for performing search must run in javafx thread
private class Search Listener {
Keeps track of the string dialog if it is open
private final Map< Actions Base Action> actions = new Hash Map<>()
To contain instantiated entry editors This is to save time As most enums this must not be null
private Base Panel Mode mode = Base Panel Mode SHOWING NOTHING
Auto Completer used in the search bar
private Person Name Suggestion Provider search Auto Completer
Used to track whether the base has changed since last save
private Bib Entry showing
the query the user searches when this Base Panel is active
private Optional< Search Query> current Search Query = Optional empty()
ensure that at each addition of a new entry the entry is added to the groups interface
this bib Database Context get Database() register Listener(new Group Tree Listener())
ensure that all entry changes mark the panel as changed
this bib Database Context get Database() register Listener(this)
check if file is modified
String change Flag = is Modified() && !is Autosave Enabled "*" ""
if the database is not empty and no file is assigned the database came from an import and has to be treated somehow > mark as changed This also happens internally at basepanel to ensure consistency line 224
title append('*')
The action for copying selected entries
actions put( Actions COPY this copy)
The action for pasting entries or cell contents more robust detection of available content flavors (doesn't only look at first one offered) support for parsing string flavor clipboard contents which are bibtex entries This allows you to (a) paste entire bibtex entries from a text editor web browser etc (b) copy and paste entries between multiple instances of Jab Ref (since only the text representation seems to get as far as the X clipboard at least on my system)
actions put( Actions PASTE this paste)
The action for copying the selected entry's key
actions put( Actions COPY KEY this copy Key)
The action for copying the selected entry's title
actions put( Actions COPY TITLE this copy Title)
The action for copying a cite for the selected entry
actions put( Actions COPY CITE KEY this copy Cite Key)
The action for copying the Bib Te X keys as hyperlinks to the urls of the selected entries
actions put( Actions COPY KEY AND LINK new Copy Bib Te X Key And Link Action(main Table Globals clipboard Manager))
Collect all non null titles
List< String> titles = selected Bib Entries stream()
All entries had titles
output( Localization lang(" Copied") + " '" + Jab Ref Dialog Service shorten Dialog Message(copied Titles) + "' ")
Collect all non null keys
for ( Bib Entry be bes) {
All entries had keys
output( Localization lang(" Copied") + " '" + Jab Ref Dialog Service shorten Dialog Message(copied Cite Command) + "' ")
Collect all non null keys
for ( Bib Entry be bes) {
All entries had keys
output( Localization lang(" Copied") + " '" + Jab Ref Dialog Service shorten Dialog Message(copied Keys) + "' ")
OK in a future version this string should be configurable to allow arbitrary exports
String Reader sr = new String Reader("\\bibtexkey \\begin{title}\\format[ Remove Brackets]{\\title}\\end{title}\n")
Collect all non null keys
for ( Bib Entry be bes) {
All entries had keys
output( Localization lang(" Copied") + " '" + Jab Ref Dialog Service shorten Dialog Message(copied Keys And Titles) + "' ")
Set owner and timestamp
Update Field set Automatic Fields(bib Entry true true Globals prefs get Update Field Preferences())
Create an Undoable Insert Entry object
get Undo Manager() add Edit(new Undoable Insert Entry(bib Database Context get Database() bib Entry))
The database just changed
mark Base Changed()
Focus field and entry in main table (async to give entry editor time to load)
entry Editor set Focus To Field(field)
Add the listener that binds selection to state manager (TODO should be replaced by proper Java FX binding as soon as table is implemented in Java FX)
main Table add Selection Listener(list Event > Globals state Manager set Selected Entries(main Table get Selected Entries()))
Update entry editor and preview according to selected entries
main Table add Selection Listener(event > main Table get Selected Entries()
TODO Register these actions globally
/*
restore last splitting state (before main Table is created as creation affects the stored size of the entry Editors)
adjust Splitter()
Set up name autocompleter for search
instantiate Search Auto Completer()
Saves the divider position as soon as it changes We need to keep a reference to the subscription otherwise the binding gets garbage collected
divider Position Subscription = Easy Bind monadic( Bindings value At(split Pane get Dividers() 0))
create change Monitor and change Pane so we get notifications about outside changes to the file
reset Change Monitor And Change Pane()
if the database is not empty and no file is assigned the database came from an import and has to be treated somehow > mark as changed
this base Changed = true
Ensure that the suggestion providers are in sync with entries
Coarse Change Filter change Filter = new Coarse Change Filter(bib Database Context)
Create empty suggestion providers if auto completion is deactivated
suggestion Providers = new Suggestion Providers()
Put an asterisk behind the filename to indicate the database has changed
frame set Window Title()
Run the search operation
File Finder file Finder = File Finders construct From Configuration( Globals prefs get Auto Link Preferences())
Automatically add new entry to the selected group (or set of groups)
if ( Globals prefs get Boolean( Jab Ref Preferences AUTO ASSIGN GROUP)) {
IMO only used to update the status (found X entries)
Default Task Executor run In Java FX Thread(() > frame get Global Search Bar() perform Search())
No URL or DOI found in the "url" and "doi" fields Look for web links in the "file" field as a fallback
Useful for checking out new algorithm improvements and thresholds Not used inside the Jab Ref code itself
public class Crossref Fetcher Evaluator {
This method takes care of creating dependencies By default it just creates a new instance of the class Dependencies without default constructor are constructed by hand
private static Object create Dependency( Class< > clazz) {
Use our own method to construct dependencies
Injector set Instance Supplier( Default Injector create Dependency)
This interface provides methods to create dialogs and show them to the user
public interface Dialog Service {
This will create and display new {@link Choice Dialog} of type T with a default choice and a collection of possible choices @impl Note The implementation should accept {@code null} for {@code default Choice} but callers should use {@link show Choice Dialog And Wait( String String String Collection)}
<T> Optional<T> show Choice Dialog And Wait( String title String content String ok Button Label T default Choice Collection<T> choices)
This will create and display new {@link Text Input Dialog} with a text fields to enter data
Optional< String> show Input Dialog And Wait( String title String content)
This will create and display new {@link Text Input Dialog} with a text field with a default value to enter data
Optional< String> show Input Dialog With Default And Wait( String title String content String default Value)
This will create and display a new information dialog It will include a blue information icon on the left and a single OK Button To create an information dialog with custom buttons see also {@link show Custom Button Dialog And Wait( Alert Alert Type String String Button Type )}
void show Information Dialog And Wait( String title String content)
This will create and display a new information dialog It will include a yellow warning icon on the left and a single OK Button To create a warning dialog with custom buttons see also {@link show Custom Button Dialog And Wait( Alert Alert Type String String Button Type )}
void show Warning Dialog And Wait( String title String content)
This will create and display a new error dialog It will include a red error icon on the left and a single OK Button To create a error dialog with custom buttons see also {@link show Custom Button Dialog And Wait( Alert Alert Type String String Button Type )}
void show Error Dialog And Wait( String title String content)
Create and display error dialog displaying the given exception @param message the error message @param exception the exception causing the error
void show Error Dialog And Wait( String message Throwable exception)
Create and display error dialog displaying the given exception @param exception the exception causing the error
void show Error Dialog And Wait( String title String content Throwable exception)
Create and display error dialog displaying the given message
void show Error Dialog And Wait( String message)
This will create and display a new confirmation dialog It will include a blue question icon on the left and a OK and Cancel button To create a confirmation dialog with custom buttons see also {@link show Custom Button Dialog And Wait( Alert Alert Type String String Button Type )}
boolean show Confirmation Dialog And Wait( String title String content)
Create and display a new confirmation dialog It will include a blue question icon on the left and a OK (with given label) and Cancel button To create a confirmation dialog with custom buttons see also {@link show Custom Button Dialog And Wait( Alert Alert Type String String Button Type )}
boolean show Confirmation Dialog And Wait( String title String content String ok Button Label)
Create and display a new confirmation dialog It will include a blue question icon on the left and a OK (with given label) and Cancel (also with given label) button To create a confirmation dialog with custom buttons see also {@link show Custom Button Dialog And Wait( Alert Alert Type String String Button Type )} @return true if the use clicked "OK" otherwise false
boolean show Confirmation Dialog And Wait( String title String content String ok Button Label String cancel Button Label)
Create and display a new confirmation dialog It will include a blue question icon on the left and a YES (with given label) and Cancel (also with given label) button To create a confirmation dialog with custom buttons see also {@link show Custom Button Dialog And Wait( Alert Alert Type String String Button Type )} Moreover the dialog contains a opt out checkbox with the given text to support " Do not ask again" behaviour
boolean show Confirmation Dialog With Opt Out And Wait( String title String content
Create and display a new confirmation dialog It will include a blue question icon on the left and a YES (with given label) and Cancel (also with given label) button To create a confirmation dialog with custom buttons see also {@link show Custom Button Dialog And Wait( Alert Alert Type String String Button Type )} Moreover the dialog contains a opt out checkbox with the given text to support " Do not ask again" behaviour
boolean show Confirmation Dialog With Opt Out And Wait( String title String content
Shows a custom dialog and returns the result @param dialog dialog to show @param <R> type of result
<R> Optional<R> show Custom Dialog And Wait( Dialog<R> dialog)
Constructs and shows a canceable {@link Progress Dialog} Clicking cancel will cancel the underlying service and close the dialog @param title title of the dialog @param content message to show above the progress bar @param task The {@link Task} which executes the work and for which to show the dialog
<V> void show Progress Dialog And Wait( String title String content Task<V> task)
void notify( String message)
Shows a new file save dialog The method doesn't return until the displayed file save dialog is dismissed The return value specifies the file chosen by the user or an empty {@link Optional} if no selection has been made After a file was selected the given file dialog configuration is updated with the selected extension type (if any)
Optional< Path> show File Save Dialog( File Dialog Configuration file Dialog Configuration)
Shows a new file open dialog The method doesn't return until the displayed open dialog is dismissed The return value specifies the file chosen by the user or an empty {@link Optional} if no selection has been made After a file was selected the given file dialog configuration is updated with the selected extension type (if any) @return the selected file or an empty {@link Optional} if no file has been selected
Optional< Path> show File Open Dialog( File Dialog Configuration file Dialog Configuration)
Shows a new file open dialog The method doesn't return until the displayed open dialog is dismissed The return value specifies the files chosen by the user or an empty {@link List} if no selection has been made @return the selected files or an empty {@link List} if no file has been selected
List< Path> show File Open Dialog And Get Multiple Files( File Dialog Configuration file Dialog Configuration)
Shows a new directory selection dialog The method doesn't return until the displayed open dialog is dismissed The return value specifies the file chosen by the user or an empty {@link Optional} if no selection has been made @return the selected directory or an empty {@link Optional} if no directory has been selected
Optional< Path> show Directory Selection Dialog( Directory Dialog Configuration directory Dialog Configuration)
Displays a Print Dialog Allow the user to update job state such as printer and settings These changes will be available in the appropriate properties after the print dialog has returned The print dialog is also used to confirm the user wants to proceed with printing
boolean show Print Dialog( Printer Job job)
Shows a new dialog that list all files contained in the given archive and which lets the user select one of these files The method doesn't return until the displayed open dialog is dismissed The return value specifies the file chosen by the user or an empty {@link Optional} if no selection has been made @return the selected file or an empty {@link Optional} if no file has been selected
Optional< Path> show File Open From Archive Dialog( Path archive Path) throws IO Exception
Contains all the different {@link Data Format}s that may occur in Jab Ref
public class Drag And Drop Data Formats {
Dialog that prompts the user to choose a type for an entry Returns null if canceled
public class Entry Type View extends Base Dialog< Entry Type> {
The button Type will always be cancel even if we pressed one of the entry type buttons
return type
we set the managed property so that they will only be rendered when they are visble so that the Nodes only take the space when visible avoids removing and adding from the scence graph
bib Tex Title Pane managed Property() bind(bib Tex Title Pane visible Property())
Do nothing
break
This class provides a super class for all dialogs implemented in Java FX To create a custom Java FX dialog one should create an instance of this class and set a dialog pane through the inherited {@link Dialog set Dialog Pane( Dialog Pane)} method The dialog can be shown via {@link Dialog show()} or {@link Dialog show And Wait()} The layout of the pane should be defined in an external fxml file and loaded it via the {@link FXML Loader}
public class FX Dialog extends Alert {
This field is initialized upon startup Only GUI code is allowed to access it logic code should use dependency injection
public static Journal Abbreviation Loader journal Abbreviation Loader
This field is initialized upon startup Only GUI code is allowed to access it logic code should use dependency injection
public static Protected Terms Loader protected Terms Loader
Manager for the state of the GUI
Remote listener
public static final Remote Listener Server Lifecycle REMOTE LISTENER = new Remote Listener Server Lifecycle()
In the main program this field is initialized in Jab Ref java Each test case initializes this field if required
public static Jab Ref Preferences prefs
Key binding preferences
private static Key Binding Repository key Binding Repository
Key binding preferences
public static synchronized Key Binding Repository get Key Prefs() {
Background tasks
public static void start Background Tasks() throws Jab Ref Exception {
FIXME Workaround for bug https
SDK Shutdown Activity INSTANCE stop All()
Static variables for graphics files and keyboard shortcuts
public class GUI Globals {
Perform initializations that are only used in graphical mode This is to prevent the " Xlib connection to " 0 0" refused by server" error when access to the X server on Un*x is unavailable
public static void init() {
add some additional space to improve appearance
public static final int WIDTH ICON COL = 16 + 12
Width of Ranking Icon Column
public static final int WIDTH ICON COL RANKING = 5 * 16
Set up entry editor colors first time
GUI Globals update Entry Editor Colors()
update preferences
Globals prefs put Int( Jab Ref Preferences FONT SIZE size)
Number of characters per line
private static final int WIDTH = 100
boolean options
options add Option("h" "help" false Localization lang(" Display help on command line options"))
This class provides methods to create default Java FX dialogs which will also work on top of Swing windows The created dialogs are instances of the {@link FX Dialog} class The available dialogs in this class are useful for displaying small information graphic dialogs rather than complex windows For more complex dialogs it is advised to rather create a new sub class of {@link FX Dialog}
public class Jab Ref Dialog Service implements Dialog Service {
Need to force the alert to layout in order to grab the graphic as we are replacing the dialog pane with a custom pane
alert get Dialog Pane() apply Css()
Create a new dialog pane that has a checkbox instead of the hide/show details button Use the supplied callback for the action of the checkbox
alert set Dialog Pane(new Dialog Pane() {
Fool the dialog into thinking there is some expandable content a group won't take up any space if it has no children
alert get Dialog Pane() set Expandable Content(new Group())
Jab Ref Launcher
public class Jab Ref Launcher {
The side pane is displayed at the left side of Jab Ref and shows instances of {@link Side Pane Component}
public class Side Pane extends Border Pane {
Override this method if the component needs to make any changes before it can close
public void before Closing() {
Override this method if the component needs to do any actions after it is shown
public void after Opening() {
Nothing to do by default
}
Auto generated method stub
return null
Auto generated method stub
return false
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
Auto generated method stub
return false
Auto generated method stub
Auto generated method stub
Auto generated method stub
Auto generated method stub
return false
Auto generated method stub
return null
Auto generated method stub
Auto generated method stub
return false
Auto generated method stub
Auto generated method stub
return null
Auto generated method stub
Auto generated method stub
return 0
Auto generated method stub
return null
Auto generated method stub
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
Auto generated method stub
Auto generated method stub
return 0
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
Auto generated method stub
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return false
Auto generated method stub
Auto generated method stub
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
return null
Auto generated method stub
Auto generated method stub
return null
Auto generated method stub
Auto generated method stub
Auto generated method stub
return 0
