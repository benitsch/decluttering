comment,code,non-information
@implNote taken from {@link com.sun.javafx.scene.control.behavior.TextAreaBehavior#contextMenuRequested(javafx.scene.input.ContextMenuEvent)},"public static void showContextMenu(TextArea textArea, ContextMenu contextMenu, ContextMenuEvent e) {",yes
icon.setToolTipText(printedViewModel.getLocalization());,"TABLE_ICONS.put(SpecialField.PRINTED, icon);",yes
Synchronize changes of the underlying date value with the temporalAccessorValue,"BindingsHelper.bindBidirectional(valueProperty(), temporalAccessorValue,",no
Ask if the user really wants to close the given database,private boolean confirmClose(BasePanel panel) {,yes
css: information *,"INTEGRITY_INFO(MaterialDesignIcon.INFORMATION),",no
"Check if there is a default type with the same name. If so, this is a modification of that type, so remove the default one:",ExternalFileType toRemove = null;,no
each entry type,"for (Map.Entry<EntryType, TextField> entry : textFields.entrySet()) {",yes
"TODO: Username, domain and identity should be included as in .NET version. TODO: Should check, seems that it is not included in Log4j2.",,no
"Already parsed via command line parameter, e.g., ""jabref.jar somefile.bib""",if (isLoaded(dbFile) || !dbFile.exists()) {,no
finally add things to the currently opened tab,for (ParserResult pr : toOpenTab) {,yes
"To simplify the exporter API we simply do a normal export to a temporary file, and read the contents afterwards:","tmp = Files.createTempFile(""jabrefCb"", "".tmp"");",no
This class monitors a set of files for changes. Upon detecting a change it notifies the registered {@link FileUpdateListener}s. Implementation based on https://stackoverflow.com/questions/16251273/can-i-watch-for-single-file-change-with-watchservice-not-the-whole-directory,"public class DefaultFileUpdateMonitor implements Runnable, FileUpdateMonitor {",no
for AutoGroup,"private final RadioButton autoGroupKeywordsOption = new RadioButton(Localization.lang(""Generate groups from keywords in a BibTeX field""));",no
"Creates a new list in which each element is converted using the provided mapping. All changes to the underlying list are propagated to the converted list. In contrast to {@link org.fxmisc.easybind.EasyBind#map(ObservableList, Function)}, the items are converted when the are inserted (and at the initialization) instead of when they are accessed. Thus the initial CPU overhead and memory consumption is higher but the access to list items is quicker.","public static <A, B> MappedList<B, A> mapBacked(ObservableList<A> source, Function<A, B> mapper) {",no
Sets the {@link Consumer} that is invoked after the task has failed with an exception. The consumer always runs on the JavaFX thread.,public BackgroundTask<V> onFailure(Consumer<Exception> onException) {,no
"/ TODO: Add undo final UndoableModifySubtree undo = new UndoableModifySubtree(getGroupTreeRoot(), node, ""Remove subgroups""); panel.getUndoManager().addEdit(undo);",group.getGroupNode().removeAllChildren();,no
db file exists,if (basePanel.getBibDatabaseContext().getDatabaseFile().isPresent()) {,yes
"Another (unlikely?) possibility is that both disk and mem version has been modified in the same way. Check for this, too.","boolean modificationsAgree = (DuplicateCheck.compareEntriesStrictly(memEntry, diskEntry) > 1);",no
Should only occur when preferences are set directly via preferences.put and not via setFirstnameMode,return AutoCompleteFirstNameMode.BOTH;,no
"Dir must be a folder, not a file",} else {,yes
This method is called when the user presses OK in the Preferences dialog. This calls the appropriate method in the ViewModel.,void storeSettings();,no
TODO: doesn't work for citations in footnotes/tables,List<String> names = getSortedReferenceMarks(nameAccess);,no
Save,save();,yes
Constructor with optional column captions for the two entries,"public MergeEntries(BibEntry entryLeft, BibEntry entryRight, String headingLeft, String headingRight, BibDatabaseMode type) {",no
"If content selector values are present, then we want to show the auto complete suggestions immediately on focus",autoCompleter.setShowOnFocus(true);,no
"This is called, when the user drops some PreviewLayouts on another cell in chosenListView to sort them",,no
Helper methods for javafx binding. Some methods are taken from https://bugs.openjdk.java.net/browse/JDK-8134679,public class BindingsHelper {,no
Formats a String to multiple Texts by replacing some parts and adding font characteristics.,"public static List<Text> formatToTexts(String original, TextReplacement... replacements) {",no
Copies the given list of {@link LogEvent}s to the clipboard.,public void copyLog(List<LogEventViewModel> messages) {,no
All entries had keys.,"JabRefGUI.getMainFrame().getDialogService().notify(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(keyAndLink) + ""'."");",no
Add radio buttons if the two entries do not have identical fields,if (identicalFields.contains(field)) {,no
Delivers possible completions as a list of {@link BibEntry} based on their cite key.,public class BibEntrySuggestionProvider extends SuggestionProvider<BibEntry> implements AutoCompleteSuggestionProvider<BibEntry> {,no
css: eye *,"READ_STATUS(MaterialDesignIcon.EYE),",no
Method to add a new abbreviation to the abbreviations list property. It also sets the currentAbbreviation property to the new abbreviation.,"public void addAbbreviation(String name, String abbreviation) {",no
"Class for handling general actions; cut, copy and paste. The focused component is kept track of by Globals.focusListener, and we call the action stored under the relevant name in its action map.",private class EditAction extends SimpleCommand {,no
"Returns a new ObservableValue that holds the value held by this ObservableValue, or {@code other} when this ObservableValue is empty.",public ObjectBinding<T> orElse(T other) {,no
A command that is only executable if a database is open. Deprecated use instead,@Deprecated,no
Define focused tab,if (pr.getFile().filter(path -> path.getAbsolutePath().equals(focusedFile)).isPresent()) {,no
A single tab displayed in the EntryEditor holding several FieldEditors.,abstract class FieldsEditorTab extends EntryEditorTab {,no
"poll with timeout in case the library is not analyzed completely, but contains no more duplicates","dups = this.duplicates.poll(100, TimeUnit.MILLISECONDS);",no
Clears the current log,public void clearLog() {,yes
Sets a a new key bind to this objects key binding object if the given key event is a valid combination of keys.,public boolean setNewBinding(KeyEvent evt) {,no
Revert the change.,base.setPreamble(oldValue);,yes
Fade new page in for smoother transition,"FadeTransition fadeIn = new FadeTransition(Duration.millis(100), imageView);",no
css: rss *,"BLOG(MaterialDesignIcon.RSS),",no
Get the search describer for a given search query.,public static SearchDescriber getSearchDescriberFor(SearchQuery searchQuery) {,yes
Does the actual operation on a Bibtex entry based on the settings specified in this same dialog. Returns the number of occurrences replaced.,"private int replaceItem(BibEntry entry, NamedCompound compound) {",no
should be opened in browser,field = StandardField.URL;,no
Returns the HashMap containing all key bindings.,"public SortedMap<KeyBinding, String> getKeyBindings() {",yes
Add menu for fetching bibliographic information,ContextMenu fetcherMenu = new ContextMenu();,no
ctrl on win,"LOGGER.debug(""Mode Copy"");",no
"Adds the specified node as a child of the current root. The group contained in <b>newGroups </b> must not be of type AllEntriesGroup, since every tree has exactly one AllEntriesGroup (its root). The <b>newGroups </b> are inserted directly, i.e. they are not deepCopy()'d.","private static void addGroups(GroupTreeNode newGroups, CompoundEdit ce) {",no
Adds the given entries to this node's group.,public List<FieldChange> addEntriesToGroup(List<BibEntry> entries) {,yes
"No, we canceled (or there is no panel to get the database from, highly unlikely)",return false;,no
default,return GroupHierarchyType.INDEPENDENT;,yes
Bug report body,"String issueBody = systemInfo + ""\n\n"" + howToReproduce + ""\n\n"" + ""Paste your log details here."";",yes
Do nothing by default,},yes
Text after the citation.,if (end < line.length()) {,no
The only instance of this class:,private static ExternalFileTypes singleton;,yes
"Placeholder class for a custom generic type safe dragboard to be used in drag and drop, does not depend on serialization Don't use this class directly. Use the instance provided in {@link GUIGlobals#localDragboard}",public class CustomLocalDragboard {,no
Search and import unknown references from associated BIB files.,public void importButtonClicked() {,no
A wizard dialog for generating a new sub database from existing TeX AUX file,public class FromAuxDialog extends BaseDialog<Void> {,no
Shows a dialog with the warnings from an import or open of a file,"public static void showParserResultWarningDialog(final ParserResult parserResult, final JabRefFrame jabRefFrame,",no
get permutation array,int[] permutation = new int[to - from];,no
Set pseudo-classes to indicate if row is root or sub-item ( > 1 deep),"PseudoClass rootPseudoClass = PseudoClass.getPseudoClass(""root"");",no
"Don't report this error, since this getting the suffix is a non-critical operation, and this error will be triggered and reported elsewhere.",},no
Selected entries,entries = frame.getCurrentBasePanel().getSelectedEntries();,yes
For all fields in joint add a row and possibly radio buttons,int row = 2;,no
Puts A List of {@link PreviewLayout} in the map All previous content is cleared,public void putPreviewLayouts(List<PreviewLayout> previewLayouts) {,no
Remove the entry from the import inspection dialog.,entries.remove(entry);,yes
"Second, check if the duplicate is of another entry in the import:",other = findInternalDuplicate(entry);,no
TODO: Remove old entry. Or... add it to a list of entries to be deleted. We only delete it after Ok is clicked. entriesToDelete.add(other.get());,} else if (result == DuplicateResolverDialog.DuplicateResolverResult.KEEP_RIGHT) {,no
Taken from https://stackoverflow.com/questions/23326562/apache-pdfbox-convert-pdf-to-images,"public Image render(int width, int height) {",no
Check if this looks like a remote link:,if (REMOTE_LINK_PATTERN.matcher(link).matches()) {,yes
Get list of exporters and sort before adding to file dialog,List<Exporter> exporters = Globals.exportFactory.getExporters().stream(),yes
Save all properties dependent on the ID. This makes it possible to restore them.,new SharedDatabasePreferences(context.getDatabase().generateSharedDatabaseID()),no
Initialize protected terms loader,Globals.protectedTermsLoader = new ProtectedTermsLoader(Globals.prefs.getProtectedTermsPreferences());,yes
"Returns MenuItemContainer node associated with this menu item which can contain: 1. label node of type Label for displaying menu item text, 2. right node of type Label for displaying accelerator text,or an arrow if it's a Menu, 3. graphic node for displaying menu item icon, and 4. left node for displaying either radio button or check box.This is basically rewritten impl_styleableGetNode() which should not be used since it's marked as deprecated.",private static Label getAssociatedNode(MenuItem menuItem) {,no
setContentType(CONTENT_TYPE); StyleSheet sheet = ((HTMLEditorKit) getEditorKit()).getStyleSheet(); sheet.addRule(BODY_STYLE); sheet.addRule(ADDITION_STYLE); sheet.addRule(REMOVAL_STYLE); sheet.addRule(CHANGE_STYLE); setEditable(false);,},yes
Sets the name and the abbreviation of the {@code currentAbbreviation} property to the values of the {@code abbreviationsName} and {@code abbreviationsAbbreviation} properties.,"private void setCurrentAbbreviationNameAndAbbreviationIfValid(String name, String abbreviation) {",no
"Finally, go through all citation markers, and update those referring to entries in our current list:",int maxAuthorsFirst = style.getIntCitProperty(OOBibStyle.MAX_AUTHORS_FIRST);,no
describe advanced search expression,"textFlow.getChildren().add(TooltipTextUtil.createText(String.format(""%s "", Localization.lang(""This search contains entries in which"")), TooltipTextUtil.TextType.NORMAL));",no
if we're going to override some cite keys warn the user about it,} else if (entries.parallelStream().anyMatch(BibEntry::hasCiteKey)) {,no
"This method is called after the new database has been added to the GUI, if the isActionNecessary() method returned true. Note: if several such methods need to be called sequentially, it is important that all implementations of this method do not return until the operation is finished.","void performAction(BasePanel panel, ParserResult pr);",no
"Searches recursively all files in the specified directory. <br> <br> All files matched by the given {@link UnlinkedPDFFileFilter} are taken into the resulting tree. <br> <br> The result will be a tree structure of nodes of the type {@link CheckBoxTreeItem}. <br> <br> The user objects that are attached to the nodes is the {@link FileNodeWrapper}, which wraps the {@link File}-Object. <br> <br> For ensuring the capability to cancel the work of this recursive method, the first position in the integer array 'state' must be set to 1, to keep the recursion running. When the states value changes, the method will resolve its recursion and return what it has saved so far.","private CheckBoxTreeItem<FileNodeWrapper> searchDirectory(File directory, UnlinkedPDFFileFilter ff) {",no
This method attaches a linked file from a URL (if not already linked) to an entry using the key and value pair from the findFullTexts map and then downloads the file into the given targetDirectory,"private void addLinkedFileFromURL(URL url, BibEntry entry, Path targetDirectory) {",no
init paste handler for URLEditor to format pasted url link in textArea,textArea.setPasteActionHandler(() -> textArea.setText(new CleanupURLFormatter().format(new TrimWhitespaceFormatter().format(textArea.getText()))));,no
Create a new SuggestionProviderString,"public SuggestionProviderString(Callback<T, String> stringConverter) {",yes
Set the new sections name to 'Child_Section',xChildNamed.setName(OOBibBase.BIB_SECTION_NAME);,yes
"Ok, done. Then try to gather in all we have found. Since we might have found one or more bibtex results, it's best to gather them in a BibDatabase.",ParserResult bibtexResult = mergeImportResults(imports);,no
TODO: can we find out whether the save was actually done or not?,},no
This method shall be used to add a new journal abbreviation file to the set of journal abbreviation files. It basically just calls the {@link #openFile(Path)}} method,public void addNewFile() {,no
"UndoableAddOrRemoveGroup undo = new UndoableAddOrRemoveGroup(groupsRoot, new GroupTreeNodeViewModel(newGroups), UndoableAddOrRemoveGroup.ADD_NODE); ce.addEdit(undo);",},yes
"no new version could be found, only respect the ignored version on automated version checks",if (!newerVersion.isPresent() || (newerVersion.get().equals(toBeIgnored) && !manualExecution)) {,no
Compare the deleted entry in memory with the one in the tmpfile. The entry could have been removed in memory.,"double matchWithTmp = DuplicateCheck.compareEntriesStrictly(memEntry, tmpEntry);",no
retrieve bookmark by name,if (!xNamedBookmarks.hasByName(name)) {,yes
Run validation checks,if (!validSettings()) {,yes
Be happy with the first found BibEntry and move on to next key,break;,yes
css: open-in-app *,CONNECT_OPEN_OFFICE(MaterialDesignIcon.OPEN_IN_APP),yes
Fills the current values to the text fields,public void setValues(AbstractBibtexKeyPattern keyPattern) {,no
Create a default suggestion provider based on the toString() method of the generic objects,public static <T> SuggestionProvider<T> create(Collection<T> possibleSuggestions) {,no
The lines above work also if the dir does not exist at all! NULL is accepted by the filechooser as no inital path,,no
css: paperclip*,ATTACH_FILE(MaterialDesignIcon.PAPERCLIP),yes
Converts the citations into the RTF format.,protected static ClipboardContent processRtf(List<String> citations) {,no
PushToApplication,final PushToApplicationAction pushToApplicationAction = pushToApplicationsManager.getPushToApplicationAction();,yes
Returns the default context menu items (except undo/redo),public static List<MenuItem> getDefaultContextMenuItems(TextInputControl textInputControl) {,no
use preferences value if no DB is open,mode = Globals.prefs.getDefaultBibDatabaseMode();,no
We have to use supplier for the localized text so that language changes are correctly reflected.,"SearchDisplayMode(Supplier<String> displayName, Supplier<String> toolTipText) {",no
TODO: switch Icon color searchIcon.setIcon(IconTheme.JabRefIcon.ADVANCED_SEARCH.getIcon());,} else {,no
We have overwritten the marker for the start of the reference list. We need to add it again.,cursor.collapseToEnd();,no
Create and run cleaner,"CleanupWorker cleaner = new CleanupWorker(panel.getBibDatabaseContext(), preferences.getCleanupPreferences(",yes
"If we found it, remove it from the type list:",if (toRemove != null) {,yes
Work around for different input methods. https://github.com/FXMisc/RichTextFX/issues/146,private class InputMethodRequestsObject implements InputMethodRequests {,no
"This class represents a change in any field value. The relevant information is the BibEntry, the field name, the old and the new value. Old/new values can be null.",public class UndoablePreambleChange extends AbstractUndoableJabRefEdit {,no
Parse the temporary file.,ImportFormatPreferences importFormatPreferences = Globals.prefs.getImportFormatPreferences();,no
Show progress indicator,ProgressIndicator progress = new ProgressIndicator();,yes
Fail on unsupported Java versions,ensureCorrectJavaVersion();,no
Get the string associated with this file type's icon.,public String getIconName() {,no
things to be appended to an opened tab should be done after opening all tabs add them to the list,toOpenTab.add(pr);,no
setTitle(FRAME_TITLE);,return;,no
we do not trim the value at the assignment to enable users to have spaces at the beginning and at the end of the pattern,if (!text.trim().isEmpty()) {,no
jni convenience: easier to iterate over array than calling Hashtable,String pairs[] = null;,no
"create menu items, one for each case changer",List<Formatter> caseChangers = new ArrayList<>();,no
We import all files and collect their results:,List<ImportFormatReader.UnknownFormatImport> imports = new ArrayList<>();,no
Constructs a {@link ListCell} based on the view model of the row and a bunch of specified converter methods.,"public class ViewModelListCellFactory<T> implements Callback<ListView<T>, ListCell<T>> {",no
"TODO: Store undo if (!undo.isEmpty()) { groupSelector.concludeAssignment(UndoableChangeEntriesOfGroup.getUndoableEdit(target, undo), target.getNode(), assignedEntries);",},no
"TODO: This means a duplicate string name exists, so it's not a very exceptional situation. We should maybe give a warning...?",},no
Dialog shown when closing of application needs to wait for a save operation to finish.,public class WaitForSaveFinishedDialog {,no
TODO: Find a better way to update preview,basePanel.closeBottomPane();,no
"We are alone, so we start the server","Globals.REMOTE_LISTENER.openAndStart(new JabRefMessageHandler(), remotePreferences.getPort());",no
"Keep track of changes made to the columns, like reordering or resizing.",public class PersistenceVisualStateTable {,no
the encoding of shared database is always UTF-8,encodingDisableProperty.setValue(isShared);,no
replace the placeholder if used,"command = command.replace(""%DIR"", absolutePath);",no
"If the file is an ordinary file (i.e. not a resource part of a .jar bundle), we watch it for changes and turn on live reloading","if (!cssUri.toString().contains(""jar"")) {",no
Shift on Windows or no modifier,"LOGGER.debug(""Mode LINK"");",no
Show tooltips,if (command instanceof SimpleCommand) {,no
This class provides a editable text field that is used as table cell. It handles the editing of the name column.,"public class JournalAbbreviationsNameTableEditingCell extends TableCell<AbbreviationViewModel, String> {",no
"return the first one we found, anyway.",return Optional.of(suffix);,no
"regex is correct, otherwise OK would have been disabled therefore I don't catch anything here",if (keywordGroupRegExp.isSelected()) {,no
Returns the int representing the selected hierarchical group context.,private GroupHierarchyType getContext() {,yes
"TODO: warn if assignment has undesired side effects (modifies a field != keywords) if (!WarnAssignmentSideEffects.warnAssignmentSideEffects(mNode.getNode().getGroup(), mPanel.frame())) { return; // user aborted operation",,no
"(Bidirectional) binding does not work, so use listeners instead","flow.estimatedScrollYProperty().addListener((observable, oldValue, newValue) -> scrollY.setValue(newValue));",no
Main function for building the merge entry JPanel,private void initialize() {,no
A prefsTab is a component displayed in the PreferenceDialog. It needs to extend from Component.,interface PreferencesTab {,no
"The actual operation. This method will not be called on the event dispatch thread, so it should not do GUI operations without utilizing invokeLater().","void pushEntries(BibDatabaseContext database, List<BibEntry> entries, String keyString);",no
create a dummy group,try {,no
"An Action for launching mass field. Functionality: * Defaults to selected entries, or all entries if none are selected. * Input field name * Either set field, or clear field.",public class MassSetFieldsAction extends SimpleCommand {,no
Need to toggle a twice to make sure nothing is selected,root.setSelected(false);,no
"ctrl on win, no modifier on Xubuntu","LOGGER.debug(""Mode Copy"");",no
"If we are supposed to set character format for citations, must run a test before we delete old citation markers. Otherwise, if the specified character format doesn't exist, we end up deleting the markers before the process crashes due to a the missing format, with catastrophic consequences for the user. need to do this only once",mustTestCharFormat = false; // need to do this only once,no
Get center of focused cell,Bounds anchorBounds = row.getBoundsInParent();,no
"Opens a new console starting on the given file location If no command is specified in {@link Globals}, the default system console will be executed.",public static void openConsole(File file) throws IOException {,no
I think setting root to null is not possible,root.setGroup(DefaultGroupsFactory.getAllEntriesGroup());,no
"General info dialog.The MacAdapter calls this method when ""Quit"" is selected from the application menu, Cmd-Q is pressed, or ""Quit"" is selected from the Dock. The function returns a boolean indicating if quitting is ok or not. <p> Non-OSX JabRef calls this when choosing ""Quit"" from the menu <p> SIDE EFFECT: tears down JabRef",public boolean quit() {,no
"fits the standard ""found x entries""-message thus hinders the searchbar to jump around while searching if the frame width is too small",currentResults.setPrefWidth(150);,no
View model for a field editor that shows various options backed by a map.,public abstract class MapBasedEditorViewModel<T> extends OptionEditorViewModel<T> {,no
Hide horizontal scrollbar and always wrap text,setWrapText(true);,no
Delivers possible completions as a list of {@link Author}s.,public class PersonNameSuggestionProvider extends SuggestionProvider<Author> implements AutoCompleteSuggestionProvider<Author> {,no
XML-Syntax-Highlighting for RichTextFX-Codearea created by (c) Carlos Martins (github: @cemartins) License: BSD-2-Clause see https://github.com/FXMisc/RichTextFX/blob/master/LICENSE and: https://github.com/FXMisc/RichTextFX/blob/master/richtextfx-demos/README.md#xml-editor,public StyleSpans<Collection<String>> computeHighlighting(String text) {,no
Inserts the JabRefPreferences-values into the the Properties of the ViewModel,public void setValues() {,no
Alt on Windows,"LOGGER.debug(""Mode MOVE"");",no
for each column get either actual width or - if it does not exist - default value,"Map<String,Double> columnWidths = new HashMap<>();",no
Opens the import inspection dialog to let the user decide which of the given entries to import.,"private void addImportedEntries(final BasePanel panel, final List<BibEntry> entries) {",no
Update journal abbreviation loader,journalAbbreviationLoader.update(abbreviationsPreferences);,yes
Generate dialog title,String dialogTitle;,yes
Wrapper around one of our actions from {@link Action} to convert them to controlsfx {@link org.controlsfx.control.action.Action}.,class JabRefAction extends org.controlsfx.control.action.Action {,no
Open File Browser,,no
Flipped around,resolveStringsAllProperty.setValue(preferences.getBoolean(JabRefPreferences.RESOLVE_STRINGS_ALL_FIELDS));,no
css: file-multiple *,"FILE_MULTIPLE(MaterialDesignIcon.FILE_MULTIPLE),",yes
find office executable relative to this class's class loader,"String sOffice = System.getProperty(""os.name"").startsWith(""Windows"") ? ""soffice.exe"" : ""soffice"";",no
Add the entries to the open tab.,BasePanel panel = getCurrentBasePanel();,no
css: star-circle *,"RELEVANCE(MaterialDesignIcon.STAR_CIRCLE),",yes
Set empty background and create proper rendering in background (for smoother loading),"background = new Rectangle(getDesiredWidth(), getDesiredHeight());",no
Function to initialize parameters. Currently it is expected that commandPathPreferenceKey is set to the path of the application.,protected abstract void initParameters();,no
The root of the global groups tree,private final GroupTreeNodeViewModel m_groupsRootHandle;,no
Gets invoked if an entry in the current database changes.,private void onDatabaseChanged(ListChangeListener.Change<? extends BibEntry> change) {,yes
wait until office is started,for (int i = 0;; ++i) {,no
Check if we are supposed to set a character format for citations:,boolean mustTestCharFormat = style.isFormatCitations();,no
css:arrow-up-bold *,"MOVE_TAB_ARROW(MaterialDesignIcon.ARROW_UP_BOLD),",yes
"TODO: reflective access, should be removed","Field privateStringField = TableView.class.getDeclaredField(""contentWidth"");",no
Creates a column for DOIs or URLs. The {@code firstField} is preferred to be shown over {@code secondField}.,"private TableColumn<BibEntryTableViewModel, Field> createUrlOrDoiColumn(JabRefIcon icon, Field firstField, Field secondField) {",no
Get the comparator to order the suggestions,protected abstract Comparator<T> getComparator();,no
Check if there are empty keys,boolean emptyKeys = false;,yes
Repeat for individual file dir - reuse 'text' and 'dir' vars,text = viewModel.userSpecificFileDirectoryProperty().getValue();,no
alt on win,"LOGGER.debug(""Node LINK"");",no
Represents the view model for a page in the document viewer.,public abstract class DocumentPageViewModel {,yes
Menu to show up on right-click in a text field for converting text formats,class ConversionMenu extends Menu {,no
"This is ugly but we have no proper update mechanism in place to propagate the changes, so redraw everything",refresh();,no
"TODO: Print error message Localization.lang(""PDF does not exist"");",} else {,no
Prints parsing statistics,public String getInformation(boolean includeMissingEntries) {,no
Calls the {@link AbbreviationsFileViewModel#writeOrCreate()} method for each file in the journalFiles property which will overwrite the existing files with the content of the abbreviations property of the AbbriviationsFile. Non existing files will be created.,public void saveJournalAbbreviationFiles() {,no
Sets the {@link Consumer} that is invoked after the task is successfully finished. The consumer always runs on the JavaFX thread.,public BackgroundTask<V> onSuccess(Consumer<V> onSuccess) {,no
"Copyright (c) 2014, 2016 ControlsFX All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of ControlsFX, any associated website, nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CONTROLSFX BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",package org.jabref.gui.autocompleter;,no
Extract destination URL,try {,no
Updates the view to reflect changes to visible components.,private void updateView() {,yes
"This class represents a change in any field value. The relevant information is the BibEntry, the field name, the old and the new value. Old/new values can be null.",public class UndoableFieldChange extends AbstractUndoableJabRefEdit {,no
Abstract class for pushing entries into different editors.,public abstract class AbstractPushToApplication implements PushToApplication {,no
put the warning into as exception text -> it will be displayed to the user,,no
"This wraps the old Swing commands so that they fit into the new infrastructure. In the long term, this class should be removed.",@Deprecated,no
The default context menu with a specific menu item to cleanup URL.,public static Supplier<List<MenuItem>> getCleanupURLMenu(TextArea textArea) {,no
"icon is chosen based on field name in cell, so map fields to its names",column.setCellValueFactory(cellData -> EasyBind.monadic(cellData.getValue().getField(firstField)).map(x -> firstField).orElse(EasyBind.monadic(cellData.getValue().getField(secondField)).map(x -> secondField)));,no
Execute command,try {,no
Ignored,return Collections.emptyList();,no
Returns true if there is an external file type registered for this extension.,public boolean isExternalFileTypeByExt(String extension) {,no
"unknown, cannot un/abbreviate anything",return false;,yes
vim:set shiftwidth=4 softtabstop=4 expandtab:,,no
Redo the change.,try {,no
"We need to get the tab header, the following is a ugly workaround",Node tabHeaderArea = ((TabPaneSkin) this.tabbedPane.getSkin()),no
reset all fields,for (TextField field : textFields.values()) {,yes
Similar to {@link org.fxmisc.easybind.monadic.MonadicObservableValue},public class OptionalObjectProperty<T> extends SimpleObjectProperty<Optional<T>> {,no
,"public static void showContextMenu(TextField textField, ContextMenu contextMenu, ContextMenuEvent e) {",no
css: clipboard-arrow-left *,EXPORT_TO_CLIPBOARD(MaterialDesignIcon.CLIPBOARD_ARROW_LEFT),yes
TODO: Replace by http://docs.oracle.com/javase/7/docs/api/java/awt/Desktop.html http://stackoverflow.com/questions/18004150/desktop-api-is-not-supported-on-the-current-platform,public class JabRefDesktop {,no
Executes a callable task that provides a return value after the calculation is done. @param command The task to execute. @return A Future object that provides the returning value.,public <T> Future<T> execute(Callable<T> command) {,yes
Need to run this on the JavaFX thread,"JabRefGUI.getMainFrame().addParserResult(pr, focusPanel)",no
set original filename (again),tabbedPane.getTabs().get(i).setText(getBasePanelAt(i).getTabTitle());,no
"If required, check that all entries have BibTeX keys defined:",if (application.requiresBibtexKeys()) {,no
"Check if the value returned by getColumnValue() is the same as a simple check of the entry's field(s) would give The reasons for being different are (combinations may also happen): - The entry has a crossref where the field content is obtained from - The field has a string in it (which getColumnValue() resolves) - There are some alias fields. For example, if the entry has a date field but no year field, {@link BibEntry#getResolvedFieldOrAlias(String, BibDatabase)} will return the year value from the date field when queried for year",public boolean isResolved(BibEntry entry) {,no
TODO imlement default,},no
Use default key bindings,for (KeyBinding keyBinding : KeyBinding.values()) {,yes
Store shown columns and their width in preferences.,private void updateColumnPreferences() {,no
"TODO: Add undo final UndoableAddOrRemoveGroup undo = new UndoableAddOrRemoveGroup(groupsRoot, node, UndoableAddOrRemoveGroup.REMOVE_NODE_KEEP_CHILDREN); panel.getUndoManager().addEdit(undo);",GroupTreeNode groupNode = group.getGroupNode();,no
Read all saved file paths and read their abbreviations,public void createFileObjects() {,no
"On Linux, Java FX fonts look blurry per default. This can be improved by using a non-default rendering setting. See https://github.com/woky/javafx-hates-linux",if (Globals.prefs.getBoolean(JabRefPreferences.FX_FONT_RENDERING_TWEAK)) {,no
Runs the specified {@link Runnable} on the JavaFX application thread and waits for completion.,public static void runAndWaitInJavaFXThread(Runnable action) {,yes
JabRef MainClass,public class JabRefMain extends Application {,yes
Bootstraps the component context from a UNO installation.,"public static final XComponentContext bootstrap(String[] argArray, URLClassLoader loader) throws BootstrapException {",no
"if (!Globals.prefs.isKeywordSyncEnabled()) { return; }final BibEntry entry = event.getBibEntry(); // NamedCompount code similar to SpecialFieldUpdateListener NamedCompound nc = new NamedCompound(Localization.lang(""Synchronized special fields based on keywords"")); List<FieldChange> changes = SpecialFieldsUtils.syncSpecialFieldsFromKeywords(entry, Globals.prefs.getKeywordDelimiter()); for (FieldChange change: changes) { nc.addEdit(new UndoableFieldChange(change)); } // Don't insert the compound into the undoManager, // it would be added before the component which undoes the insertion of the entry and creates heavy problems // (which prohibits the undo the deleting multiple entries)",},no
Get target folder,Optional<Path> fileDir = databaseContext.getFirstExistingFileDir(filePreferences);,no
"Ctrl on Windows, no modifier on Xubuntu","LOGGER.debug(""Mode COPY"");",no
default command,"String cmd = ""xdg-open "" + filePath.toAbsolutePath().getParent().toString();",no
Reloads the JabRefPreferences into the UI,private void updateAfterPreferenceChanges() {,no
"We define two file type objects as equal if their name, extension, openWith and iconName are equal.",@Override,no
Create buttons,"ButtonType replaceEntries = new ButtonType(Localization.lang(""Merge entries""), ButtonBar.ButtonData.OK_DONE);",yes
Time stamp,,no
"This class can be used to wrap an @see ObservableList inside it. When wrapped, any Listener listening for updates to the wrapped ObservableList (for example because of a binding to it) is ensured to be notified on the JavaFX Application Thread. It should be used to implement bindings where updates come in from a background thread but should be reflected in the UI where it is necessary that changes to the UI are performed on the JavaFX Application thread.",public class UiThreadObservableList<E> implements ObservableList<E> {,no
Executes a collection of callable tasks and returns a List of the resulting Future objects after the calculation is done. @param tasks The tasks to execute @return A List of Future objects that provide the returning values.,public <T> List<Future<T>> executeAll(Collection<Callable<T>> tasks) {,yes
This will set the {@code currentFile} property to the {@link AbbreviationsFileViewModel} object that was added to the {@code journalFiles} list property lastly. If there are no files in the list property this methode will do nothing as the {@code currentFile} property is already {@code null}.,public void selectLastJournalFile() {,no
Method to delete the abbreviation set in the currentAbbreviation property. The currentAbbreviationProperty will be set to the previous or next abbreviation in the abbreviations property if applicable. Else it will be set to {@code null} if there are no abbreviations left.,public void deleteAbbreviation() {,no
We need to sort the reference marks according to their order of appearance:,names = sortedReferenceMarks;,no
Returns a wrapper around the given list that posts changes on the JavaFX thread.,public static <T> ObservableList<T> forUI(ObservableList<T> list) {,no
kill the remote thread,stopRemoteThread();,yes
"First try xmp import, if empty try pdf import, otherwise create empty entry",if (!xmpEntriesInFile.isEmpty()) {,no
Revert the change.,base.removeString(string.getId());,no
"Go through unchanged types. Remove them from the ones that should be stored, and from the list of defaults, since we don't need to mention these in prefs:",for (ExternalFileType type : unchanged) {,no
Checks if all tabs are valid ToDo: After conversion of all tabs use mvvmfx-validator ToDo: should be observable for binding of OK-button in View,,no
Next add all the visible tabs (if not already present) at the right position,for (int i = 0; i < visibleTabs.size(); i++) {,no
update all tab titles,updateAllTabTitles();,yes
Helper class to create and style controls according to an {@link Action}.,public class ActionFactory {,no
Class for fetching and merging bibliographic information,public class FetchAndMergeEntry {,yes
paranoia: ensure that there are never two instances of AllEntriesGroup,if (newGroups.getGroup() instanceof AllEntriesGroup) {,no
Create button that triggers search,"Button search = new Button(Localization.lang(""Search""));",yes
"Activate context menu if user presses the ""context menu"" key","tableView.addEventHandler(KeyEvent.KEY_RELEASED, event -> {",no
,public static <V> V runInJavaFXThread(Callable<V> callable) {,yes
Add the edit field for Bibtex-key.,fields.add(InternalField.KEY_FIELD);,no
Remove all reference marks that don't look like JabRef citations:,List<String> tmp = new ArrayList<>();,no
"Although entries are redefined without use, this also updates linkSourceBase","Map<BibEntry, BibDatabase> entries = findCitedEntries(databases, cited, linkSourceBase);",no
"for the remaining entries, intersection has to be used this approach ensures that one empty keyword list leads to an empty set of common keywords",for (BibEntry entry : entries) {,no
A very simple implementation of the {@link TaskExecutor} interface. Every submitted task is invoked in a separate thread.,public class DefaultTaskExecutor implements TaskExecutor {,no
all buttons in base dialogs react on enter,if (event.getCode() == KeyCode.ENTER) {,no
... but not for this entry.,refKeys.get(marker).add(currentKey);,no
"If we found it, remove it from the type list:",if (toRemove != null) {,yes
The main window of the application.,public class JabRefFrame extends BorderPane {,no
Redo the change.,try {,no
Tools for automatically detecting OpenOffice or LibreOffice installations.,public class DetectOpenOfficeInstallation {,no
"Heuristic missed, so try to get page number from first shown page",currentPage.set(,no
Assuming the current page is A4 (or has same aspect ratio),setPageWidth(desiredPageDimension.getWidth(Math.sqrt(2)) + delta);,no
Check if there are two entries selected,List<BibEntry> selectedEntries = basePanel.getSelectedEntries();,yes
This class controls the user interface of the journal abbreviations dialog. The ui elements and their layout are defined in the fxml file.,public class ManageJournalAbbreviationsView extends BaseDialog<Void> {,no
only add tab if DB is not already open,Optional<BasePanel> panel = getBasePanelList().stream(),no
This class represents the change of type for an entry.,public class UndoableChangeType extends AbstractUndoableJabRefEdit {,no
General,,no
Sets the title of the main window.,public void setWindowTitle() {,no
check mode of currently used DB,if (panel != null) {,no
No parent = root -> just add,this.moveTo(target);,no
"write the entries using sw, which is used later to form the email content",BibEntryWriter bibtexEntryWriter = new BibEntryWriter(,no
"Opens the given files. If one of it is null or 404, nothing happens","public void openFiles(List<Path> filesToOpen, boolean raisePanel) {",no
Ask for consent to send data to Mr. DLib on first time to tab,if (preferences.isMrdlibAccepted()) {,no
Only the first of the extensions gotten from FileType is saved into the class using get(0),String extensionString = exporter.getFileType().getExtensions().get(0);,no
The path to the edited subtree's root node,private final List<Integer> m_pathToNode;,no
Up to version 2.4b the mime type is not included:,"mimeType = """";",no
"ApplicationInsights-Java Copyright (c) Microsoft Corporation All rights reserved.MIT License Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the """"Software""""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,no
"On Windows, store application as empty if the ""Default"" option is selected, or if the application name is empty:",if (defaultApplicationSelectedProperty.getValue() || application.isEmpty()) {,no
"Creates a list of all files (leaf nodes in the tree structure), which have been selected.",private List<Path> getFileListFromNode(CheckBoxTreeItem<FileNodeWrapper> node) {,no
css: server-plus*,ADD_ROW(MaterialDesignIcon.SERVER_PLUS),yes
This method returns the enum constant value,public String getConstant() {,yes
Copies the doi url to the clipboard,public class CopyDoiUrlAction extends SimpleCommand {,no
Update type label,"TypedBibEntry typedEntry = new TypedBibEntry(entry, databaseContext.getMode());",no
Update key list to match the new sorting:,for (int j = 0; j < cEntries.length; j++) {,no
Runs the given task and returns a Future representing that task.,<V> Future<V> execute(BackgroundTask<V> task);,yes
Alt on Windows,"LOGGER.debug(""Mode LINK"");",no
Runs the cleanup on the entry and records the change.,"private void doCleanup(CleanupPreset preset, BibEntry entry, NamedCompound ce) {",no
"This action can be invoked without an open database, so we have to check if we have one before trying to invoke methods to execute changes in the preferences.",,no
"Set up the list of external file types, either from default values, or from values recorded in Preferences.",private void updateExternalFileTypes() {,no
Notifies the tab that it got focus and should display the given entry.,public void notifyAboutFocus(BibEntry entry) {,no
handled by FX in TextInputControl#paste,break;,no
"File doesn't exist, so we can't move it.","dialogService.showErrorDialogAndWait(Localization.lang(""File not found""), Localization.lang(""Could not find file '%0'."", linkedFile.getLink()));",yes
"Opens ""Edit Group Dialog"" and changes the given group to the edited one.",public void editGroup(GroupNodeViewModel oldGroup) {,no
"We can't watch files directly, so monitor their parent directory for updates",Path directory = file.toAbsolutePath().getParent();,no
Extract the list of bibtex keys from a reference mark name.,public List<String> parseRefMarkName(String name) {,no
leave the expansion state of the tree item as it is,this.draggedItem.setExpanded(this.draggedItem.isExpanded());,no
Display link to expand text,if (!this.getChildren().contains(moreLink)) {,no
Start looking at changes.,"BibDatabaseDiff differences = BibDatabaseDiff.compare(referenceDatabase, databaseOnDisk);",no
"change root group, even though it'll be AllEntries anyway",root.setGroup(changedGroups.getGroup());,no
"When mime type is included, the array length should be 5:",mimeType = val[2];,no
Loop through the available databases,for (BibDatabase loopDatabase : databases) {,yes
Replace both entries by merged entry,entries.add(diag.getMergedEntry());,no
if (value==null) and then call nullField has been omitted as updatefield also handles value==null,"List<FieldChange> changes = SpecialFieldsUtils.updateField(specialField, value, be, nullFieldIfValueIsTheSame, Globals.prefs.isKeywordSyncEnabled(), Globals.prefs.getKeywordDelimiter());",no
storing a backup of the whole subtree is not required when children are kept,m_subtreeBackup = editType != UndoableAddOrRemoveGroup.REMOVE_NODE_KEEP_CHILDREN ? editedNode.getNode(),no
Inserts each citation into a HTML body and copies it to the clipboard,protected static ClipboardContent processHtml(List<String> citations) {,no
Only one linked file -> open directly,"LinkedFileViewModel linkedFileViewModel = new LinkedFileViewModel(linkedFiles.get(0), entry.getEntry(), database, Globals.TASK_EXECUTOR, dialogService, Globals.prefs.getXMPPreferences(), Globals.prefs.getFilePreferences(), externalFileTypes);",no
"If not, start GUI","new JabRefGUI(mainStage, argumentProcessor.getParserResults(), argumentProcessor.isBlank());",yes
empty,},yes
"After adding the databases, go through each and see if any post open actions need to be done. For instance, checking if we found new entry types that can be imported, or checking if the database contents should be modified due to new features in this version of JabRef. Note that we have to check whether i does not go over getBasePanelCount(). This is because importToOpen might have been used, which adds to loadedDatabases, but not to getBasePanelCount()",,no
New ZIP file chooser.,public ZipFileChooser(FileSystem zipFile) throws IOException {,yes
expand node and all children on drag over,dragExpansionHandler.expandGroup(row.getTreeItem());,yes
TODO: merge with import,"factory.createMenuItem(StandardActions.MERGE_DATABASE, new OldDatabaseCommandWrapper(Actions.MERGE_DATABASE, this, stateManager)),",no
css: code-equal *,"FIND_DUPLICATES(MaterialDesignIcon.CODE_EQUAL),",yes
Find entries in clipboard,List<BibEntry> entriesToAdd = Globals.clipboardManager.extractData();,yes
Access the Child_Section's XTextContent interface and insert it into the document,"XTextContent xChildSection = UnoRuntime.queryInterface(XTextContent.class, xChildNamed);",no
Set the visibility of the progress bar in the right end of the status line at the bottom of the frame.,public void setProgressBarVisible(final boolean visible) {,no
Converts a path relative to a base-path into a class name.,"private static String pathToClass(String basePath, Path path) {",no
"The following is necesary to initiate the drag and drop in javafx, although we don't need the contents It doesn't work without",ClipboardContent content = new ClipboardContent();,no
"(maskText(""A"") != ""A"");",boolean maskText = (textInputControl instanceof PasswordField);,no
Use the correct viewer even if pdf and ps are mixed up:,"String[] split = file.get().getFileName().toString().split(""\\."");",no
"This interface defines potential actions that may need to be taken after opening a BIB file into JabRef. This can for instance be file upgrade actions that should be offered due to new features in JabRef, and may depend on e.g. which JabRef version the file was last written by. This interface is introduced in an attempt to add such functionality in a flexible manner.",public interface GUIPostOpenAction {,no
Warning before overwriting is only relevant if overwriting can happen:,warnBeforeOverwriting.setDisable(dontOverwrite.isSelected());,no
TODO: Remove this copy as soon as the one included in AI is compatible with log4j 3,public final class ApplicationInsightsLogEvent extends ApplicationInsightsEvent {,no
insert the connector,"xSet.insert(xImpLoader.activate(""com.sun.star.comp.connections.Connector"", null, null, null));",yes
"As there is no concept like an empty node/icon, we return simply the other icon",return JabRefIcons.GROUP_INTERSECTION.getGraphicNode();,no
Add all bibDatabases databases to the frame:,boolean first = false;,no
This is a simple implementation of a generic suggestion provider callback. The complexity of suggestion generation is O(n) where n is the number of possible suggestions.,"public abstract class SuggestionProvider<T> implements Callback<ISuggestionRequest, Collection<T>> {",no
"Returns a newer version excluding any non-stable versions, except if the installed one is unstable too. If no newer version was found, then an empty optional is returned.",private Optional<Version> getNewVersion() throws IOException {,no
Prints the connection problem to the status bar and shows a dialog if it was executed manually,"private void showConnectionError(Exception exception, boolean manualExecution) {",no
css: file-powerpoint *,"FILE_POWERPOINT(MaterialDesignIcon.FILE_POWERPOINT),",yes
Detect Google search URL,"private static final String GOOGLE_SEARCH_EXP = ""^https?://(?:www\\.)?google\\.[\\.a-z]+?/url.*"";",yes
update keywords,keywords.removeAll(keywordsToRemove);,yes
css: auto-fix*,"AUTO_GROUP(MaterialDesignIcon.AUTO_FIX),",yes
Bootstraps the initial component context from a native UNO installation. See also <code>cppuhelper/defaultBootstrap_InitialComponentContext()</code>.,"public static final XComponentContext defaultBootstrap_InitialComponentContext(String ini_file, Map<String, String> bootstrap_parameters) throws Exception {",no
css: twitter *,"TWITTER(MaterialDesignIcon.TWITTER),",yes
Drag and drop support,row.setOnDragDetected(event -> {,no
"File on disk has changed, thus look for notable changes and notify listeners in case there are such changes","ChangeScanner scanner = new ChangeScanner(database, referenceFile);",no
"Append a given value to a given field for all entries in a Collection. This method DOES NOT update any UndoManager, but returns a relevant CompoundEdit that should be registered by the caller.","private static UndoableEdit massAppendField(Collection<BibEntry> entries, Field field, String textToAppend) {",no
We have to use reflection to get the associated label,try {,no
"... if so, mark base changed. Prevent the Undo button from removing change marking:",if (changed) {,no
passed file (we take the first one) should be focused,String focusedFile = bibDatabases.stream(),no
"Decides if the content stored in the given {@link Dragboard} can be droped on the given target row. Currently, the following sources are allowed: - another group (will be added as subgroup on drop) - entries if the group implements {@link GroupEntryChanger} (will be assigned to group on drop)",public boolean acceptableDrop(Dragboard dragboard) {,no
The string was removed or renamed locally. We guess that it was removed.,"BibtexString bs = new BibtexString(label, disk);",no
Returns a consent dialog used to ask permission to send data to Mr. DLib.,private ScrollPane getPrivacyDialog(BibEntry entry) {,no
Left text pane,if (leftString.isPresent()) {,no
"Initializes the components, the layout, the data structure and the actions in this dialog.",private void initialize() {,no
Add type change menu,"ContextMenu typeMenu = new ChangeEntryTypeMenu().getChangeEntryTypePopupMenu(entry, databaseContext, undoManager);",no
"This property is only needed to get proper IDE support in FXML files (e.g. validation that parameter passed to ""icon"" is indeed of type {@link IconTheme.JabRefIcons}).",private ObjectProperty<IconTheme.JabRefIcons> glyph;,no
cloud-upload*,"CONNECT_DB(MaterialDesignIcon.CLOUD_UPLOAD),",yes
Removal of a node and all of its children.,public static final int REMOVE_NODE_AND_CHILDREN = 2;,yes
"This worker checks if there is a new version of JabRef available. If there is it will display a dialog to the user offering him multiple options to proceed (see changelog, go to the download page, ignore this version, and remind later). If the versions check is executed manually and this is the latest version it will also display a dialog to inform the user.",public class VersionWorker {,no
If the crossref entry is not already in the database,if (!resultDatabase.getEntryByKey(crossref).isPresent()) {,yes
Insert it at the current position:,"rebuildBibTextSection(allBases, style);",no
especially for the track execute when the action run the same function but from different source.,"public JabRefAction(Action action, Command command, KeyBindingRepository keyBindingRepository, Sources source) {",no
"Action for the ""Save"" and ""Save as"" operations called from BasePanel. This class is also used for save operations when closing a database or quitting the applications. The save operation is loaded off of the GUI thread using {@link BackgroundTask}. Callers can query whether the operation was canceled, or whether it was successful.",public class SaveDatabaseAction {,no
The default menu that contains functions for changing the case of text and doing several conversions.,public static Supplier<List<MenuItem>> getDefaultMenu(final TextInputControl textInput) {,no
Set headings,for (int i = 0; i < 6; i++) {,yes
"This method should be called after storing the preferences, to collect the properties, which require a restart of JabRef to load",List<String> getRestartWarnings();,no
Creates a new auto-completion binding between the given textInputControl and the given suggestion provider.,"private AutoCompletionTextInputBinding(final TextInputControl textInputControl,",yes
We accept all kinds of dates (not just in the format specified),return Date.parse(string).map(Date::toTemporalAccessor).orElse(null);,no
"this whole method is part of a background task when autodecting instances, so we need to show dialog in FX thread","Optional<DocumentTitleViewModel> selectedDocument = dialogService.showChoiceDialogAndWait(Localization.lang(""Select document""), Localization.lang(""Found documents:""), Localization.lang(""Use selected document""), viewModel);",no
Taken from http://stackoverflow.com/a/9417836/873661,"private static BufferedImage resize(BufferedImage img, int newWidth, int newHeight) {",no
We always want that the first item is selected after a change This also automatically selects the first file on the initial load,fileChoice.itemsProperty().addListener(,no
Function to get the command to be executed for pushing keys to be cited,"@SuppressWarnings(""unused"")",no
"For some reason the graphic is not set correctly by the {@link ActionUtils} class, so we have to fix this by hand","private static void setGraphic(MenuItem node, Action action) {",no
entry type or bibtex key will never be resolved,if (InternalField.TYPE_HEADER.equals(field) || InternalField.OBSOLETE_TYPE_HEADER.equals(field),no
"Removal of a single node. Children, if any, are kept.",public static final int REMOVE_NODE_KEEP_CHILDREN = 1;,yes
"Copyright (c) 2014, 2015, ControlsFX All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of ControlsFX, any associated website, nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CONTROLSFX BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",package org.jabref.gui.autocompleter;,no
use property as initial source,updateA.accept(propertyB.getValue());,no
Map containing all registered external file types:,private final Set<ExternalFileType> externalFileTypes = new TreeSet<>(Comparator.comparing(ExternalFileType::getName));,yes
Workaround taken from https://bitbucket.org/controlsfx/controlsfx/issues/330/making-textfieldssetupclearbuttonfield,private void setupClearButtonField(CustomTextField customTextField) {,no
Always overwrite keys by default,return true;,no
"We are not alone, there is already a server out there, send command line arguments to other instance",if (remoteClient.sendCommandLineArguments(args)) {,no
Process arguments,"ArgumentProcessor argumentProcessor = new ArgumentProcessor(arguments, ArgumentProcessor.Mode.INITIAL_START);",yes
"Nothing set, so we use the default values:","while (preferences.get(JabRefPreferences.CUSTOM_TAB_NAME + ""_def"" + i) != null) {",no
Run the actual open in a thread to prevent the program locking until the file is loaded.,"BackgroundTask.wrap(() -> openIt(file, dialog.importEntries(), dialog.importStrings(), dialog.importGroups(), dialog.importSelectorWords()))",no
"It could be that somehow the path is null, for example if it got deleted in the meantime",if (directory == null) {,no
extract url parameter,"String[] pairs = query.split(""&"");",no
Collect all callables to execute in one collection.,for (BibEntry entry : entries) {,no
"TODO: Add undo Store undo information. AbstractUndoableEdit undoAddPreviousEntries = null; UndoableModifyGroup undo = new UndoableModifyGroup(GroupSelector.this, groupsRoot, node, newGroup); if (undoAddPreviousEntries == null) { panel.getUndoManager().addEdit(undo); } else { NamedCompound nc = new NamedCompound(""Modify Group""); nc.addEdit(undo); nc.addEdit(undoAddPreviousEntries); nc.end();/ panel.getUndoManager().addEdit(nc); } if (!addChange.isEmpty()) { undoAddPreviousEntries = UndoableChangeEntriesOfGroup.getUndoableEdit(null, addChange); }",,no
"Adds the filename to the top of the menu. If it already is in the menu, it is merely moved to the top.",public void newFile(Path file) {,no
"This view model can be used both for ""add exporter"" and ""modify exporter"" functionalities. It takes an optional exporter which is empty for ""add exporter,"" and takes the selected exporter for ""modify exporter.""It returns an optional exporter which empty if an invalid or no exporter is created, and otherwise contains the exporter to be added or that is modified.",,no
"We need to catch this one here because the OpenOfficePanel class is loaded before connection, and therefore cannot directly reference or catch a DisposedException (which is in a OO JAR file).",throw new ConnectionLostException(ex.getMessage());,no
css: label-outline *,"OPTIONAL(MaterialDesignIcon.LABEL_OUTLINE),",yes
"This resize policy is almost the same as {@link TableView#CONSTRAINED_RESIZE_POLICY} We make sure that the width of all columns sums up to the total width of the table. However, in contrast to {@link TableView#CONSTRAINED_RESIZE_POLICY} we size the columns initially by their preferred width.","public class SmartConstrainedResizePolicy implements Callback<TableView.ResizeFeatures, Boolean> {",no
We have to cast the BibEntries from the BibEntrySuggestionProvider to ParsedEntryLink,Collection<BibEntry> bibEntries = (Collection<BibEntry>) super.complete(request);,no
Puts A List of {@link BibEntry} in the map All previous content is cleared,public void putBibEntries(List<BibEntry> entries) {,no
"This wraps the old Swing commands so that they fit into the new infrastructure. In the long term, this class should be removed.",@Deprecated,no
run in one minute,"}, 60000);",no
"See if there are duplicate citations marks referring to different entries. If so, we need to use uniquefiers:","Map<String, List<String>> refKeys = new HashMap<>();",no
TODO: http://api.openoffice.org/docs/DevelopersGuide/OfficeDev/OfficeDev.xhtml#1_1_3_2_1_2_Frame_Hierarchies,,no
"TODO: Print error message Localization.lang(""Error while writing"") + "" '"" + file.toString() + ""': "" + ex;",},no
Parse the modified file.,"result = OpenDatabase.loadDatabase(diskdb.toAbsolutePath().toString(), importFormatPreferences, Globals.getFileUpdateMonitor());",no
Represents a binding between a text input control and a auto-completion popup This class is a slightly modified version of {@link impl.org.controlsfx.autocompletion.AutoCompletionTextFieldBinding} that works with general text input controls instead of just text fields.,public class AutoCompletionTextInputBinding<T> extends AutoCompletionBinding<T> {,no
Creates an instance of {@link LinkedFile} based on the given file. We try to guess the file type and relativize the path against the given file directories. TODO: Move this method to {@link LinkedFile} as soon as {@link CustomExternalFileType} lives in model.,"public static LinkedFile fromFile(Path file, List<Path> fileDirectories, ExternalFileTypes externalFileTypesFile) {",no
Create a default suggestion provider based on the toString() method of the generic objects using the provided stringConverter,"public static <T> SuggestionProvider<T> create(Callback<T, String> stringConverter, Collection<T> possibleSuggestions) {",no
Remove entry,entries.remove(entry);,yes
Repaints the table with the most recent font configuration,public void updateFont() {,no
Updates the timestamp of changed entries if the feature is enabled,class UpdateTimestampListener {,no
Add the new component,visibleComponents.add(component);,yes
"Setting the character format failed, so we throw an exception that will result in an error message for the user:",throw new UndefinedCharacterFormatException(charStyle);,no
"Implementation of {@link TaskExecutor} that runs every task on the current thread, i.e. in a sequential order. This class is not designed to be used in production but should make code involving asynchronous operations deterministic and testable.",public class CurrentThreadTaskExecutor implements TaskExecutor {,no
"No file matched the name, try to open it directly using the given app","openExternalFilePlatformIndependent(type, link);",no
"Represents the viewport for a page. Note: the instances of {@link DocumentViewerPage} are reused, i.e., not every page is rendered in a new instance but instead {@link DocumentViewerPage#updateItem(Object)} is called.","private class DocumentViewerPage implements Cell<DocumentPageViewModel, StackPane> {",no
"Set a given field to a given value for all entries in a Collection. This method DOES NOT update any UndoManager, but returns a relevant CompoundEdit that should be registered by the caller.","private static UndoableEdit massSetField(Collection<BibEntry> entries, Field field, String textToSet,",no
Go back to the relevant position:,"xViewCursor.gotoRange(position, false);",no
Displays an BibEntry using the given layout format.,public class PreviewViewer extends ScrollPane implements InvalidationListener {,no
"Saved, now exit.",return true;,no
Try to get as much information from the temporal accessor,LocalDate date = dateTime.query(TemporalQueries.localDate());,no
There is apparently no neat way to get the page number from a PDPage...thus this old-style for loop,for (int i = 0; i < pages.getCount(); i++) {,no
Read the prefs information for file types:,String[][] vals = StringUtil,no
start office process,Process p = Runtime.getRuntime().exec(cmdArray);,no
Make a list of all PDFs linked from this entry:,List<Path> files = entry.getFiles().stream(),no
"This method is called when the dialog is opened, or if it is made visible after being hidden. This calls the appropriate method in the ViewModel.",void setValues();,no
Perform migrations,PreferencesMigrations.runMigrations();,yes
Constructs a {@link TableCell} based on the value of the cell and a bunch of specified converter methods.,"public class ValueTableCellFactory<S, T> implements Callback<TableColumn<S, T>, TableCell<S, T>> {",no
store new patterns globally,prefs.putKeyPattern(keypatterns);,no
A backup of the groups before the modification,private final GroupTreeNode m_groupRoot;,no
MappedList implementation based on https://github.com/corda/corda/blob/master/client/jfx/src/main/kotlin/net/corda/client/jfx/utils/MappedList.kt,"public final class MappedList<A, B> extends TransformationList<A, B> {",no
"Start of ugly hack: We need to find out, which tabs will be shown and which not and remove and re-add the appropriate tabs to the editor. We don't want to simply remove all and re-add the complete list of visible tabs, because the tabs give an ugly animation the looks like all tabs are shifting in from the right. This hack is required since tabbed.getTabs().setAll(visibleTabs) changes the order of the tabs in the editor",,no
make sure the layout is set according to the checkbox,cleanupEnabled.selectedProperty().addListener(new EnablementStatusListener<>(fieldFormatterCleanups.isEnabled()));,no
shift on win or no modifier,"LOGGER.debug(""Mode LINK"");",no
expand or collapse the tree item and reset the time,this.dragStarted = System.currentTimeMillis();,yes
The user wants to save.,try {,no
Open the file:,String filePath = file.get().toString();,no
Returns the path to the system's applications folder.,Path getApplicationDirectory();,yes
Opens a shared database.,public class ConnectToSharedDatabaseCommand extends SimpleCommand {,yes
no parameters,if (query == null) {,yes
This will wrap the built in and ieee abbreviations in pseudo abbreviation files and add them to the list of journal abbreviation files.,void addBuiltInLists() {,no
url?,if (decode.matches(URL_EXP)) {,yes
"First, remove tabs that we do not want to show",List<EntryEditorTab> toBeRemoved = tabs.stream().filter(tab -> !tab.shouldShow(entry)).collect(Collectors.toList());,yes
Prevent right-click to select group,event.consume();,no
css: close-circle *,"INTEGRITY_FAIL(Color.RED, MaterialDesignIcon.CLOSE_CIRCLE),",yes
"Unknown external file type. This instance represents a file type unknown to JabRef. This can happen, for example, when a database is loaded which contains links to files of a type that has not been defined on this JabRef instance.",public class UnknownExternalFileType implements ExternalFileType {,no
"Wait 500 ms, then try to connect again, but do not wait longer than 5 min (= 600 * 500 ms) total:",if (i == 600) {,no
Returns a text formatter that restricts input to integers,public static TextFormatter<String> getIntegerTextFormatter() {,no
"Format a name field for the table, according to user preferences.",public static String formatName(final String nameToFormat) {,yes
css: view-list *,"TOGGLE_GROUPS(MaterialDesignIcon.VIEW_LIST),",yes
"Ok, we have seen this exact marker before.",if (!refKeys.get(marker).contains(currentKey)) {,no
Execute the callables and wait for the results.,List<Future<Boolean>> futures = JabRefExecutorService.INSTANCE.executeAll(tasks);,no
Stores all user dialogs related to {@link BackupManager}.,public class BackupUIManager {,no
Nothing to do here,},yes
The minimum number of selected entries to ask the user for confirmation,private static final int WARNING_LIMIT = 5;,no
Exception used to indicate that the plugin attempted to set a character format that is not defined in the current OpenOffice document.,class NoDocumentException extends Exception {,no
"create call with arguments We need a socket, pipe does not work. https://api.libreoffice.org/examples/examples.html",String[] cmdArray = new String[argArray.length + 2];,no
"imageView.setImage(new WritableImage(getDesiredWidth(), getDesiredHeight()));",BackgroundTask<Image> generateImage = BackgroundTask,yes
"Return a boolean, if the selected entry have url or doi",private boolean isExistURLorDOI(List<BibEntry> selectEntryList) {,no
"This class can be used to wrap a @see StringProperty inside it. When wrapped, any Listener listening for updates to the wrapped StringProperty (for example because of a binding to it) is ensured to be notified on the JavaFX Application Thread. It should be used to implement bindings where updates come in from a background thread but should be reflected in the UI where it is necessary that changes to the UI are performed on the JavaFX Application thread.",public class UiThreadStringProperty extends StringProperty {,no
"prefs.putBoolean(JabRefPreferences.WINDOW_MAXIMISED, getExtendedState() == Frame.MAXIMIZED_BOTH);",,yes
Dialog for managing term list files.,public class ManageProtectedTermsDialog extends BaseDialog<Void> {,yes
Check if a path to the command has been specified,if ((commandPath == null) || commandPath.trim().isEmpty()) {,no
Will only happen if field exists,"mergedEntry.setField(field, leftEntry.getField(field).get());",no
We need to make a copy as instances of LogEvent are reused by log4j,MutableLogEvent copy = new MutableLogEvent();,no
perform permutation,Object[] permutedPart = new Object[to - from];,yes
"Stream.allMatch() (in contrast to Stream.anyMatch() returns 'true' for empty streams, so this has to be checked explicitly.","return Bindings.createBooleanBinding(() -> !source.isEmpty() && source.stream().allMatch(predicate), source);",yes
"If there is no value, do nothing:",if ((!valToMove.isPresent()) || valToMove.get().isEmpty()) {,no
Set the default value:,"Globals.prefs.put(JabRefPreferences.DEFAULT_BIBTEX_KEY_PATTERN, defaultPat.getText());",no
Update the citation list depending on the selected reference.,public void activeReferenceChanged(ReferenceViewModel reference) {,no
Enable actions that depend on Connect:,selectDocument.setDisable(false);,no
"Deleted since it does not work anymore. Needs refactoring.MenuItem previousPreviewLayout = new MenuItem(Localization.lang(""Previous preview layout""));previousPreviewLayout.setAccelerator(keyBindingRepository.getKeyCombination(KeyBinding.PREVIOUS_PREVIEW_LAYOUT));previousPreviewLayout.setOnAction(event -> basePanel.previousPreviewStyle());MenuItem nextPreviewLayout = new MenuItem(Localization.lang(""Next preview layout""));nextPreviewLayout.setAccelerator(keyBindingRepository.getKeyCombination(KeyBinding.NEXT_PREVIEW_LAYOUT));nextPreviewLayout.setOnAction(event -> basePanel.nextPreviewStyle());",,yes
for all types,private final TextField nameField = new TextField();,no
"We only handle ""ENTRY_MODIFY"" here, so the context is always a Path","@SuppressWarnings(""unchecked"")",no
Opens the given URL using the system browser,public static void openBrowser(String url) throws IOException {,yes
Constructor taking two entries,"public MergeEntries(BibEntry entryLeft, BibEntry entryRight, BibDatabaseMode type) {",yes
"We create a decoration pane ourselves for performance reasons (otherwise it has to be injected later, leading to a complete redraw/relayout of the complete scene)",DecorationPane root = new DecorationPane();,no
css: eye *,"READ_STATUS_READ(Color.rgb(111, 204, 117, 1), MaterialDesignIcon.EYE),",yes
first check if a valid entry is selected,if (selectedKeyBinding.isNull().get()) {,yes
Return a string for displaying a node name (and its number of children if it is a directory).,public String getDisplayText() {,no
"Dir must be a folder, not a file",if (!Files.isDirectory(directory)) {,yes
Set-up key bindings specific for the entry editor.,private void setupKeyBindings() {,yes
Bootstraps a servicemanager with the jurt base components registered. See also UNOIDL <code>com.sun.star.lang.ServiceManager</code>.,public static XMultiServiceFactory createSimpleServiceManager() throws Exception {,no
The footnote's anchor gives the correct position in the text:,range = footer.getAnchor();,no
"See if it helps to append "".in"":","lp = new File(commandPath + "".in"");",no
Remove annotations for the current entry and reinitialize annotation/cache,cache.remove(entry);,no
"For some reason the graphic is not set correctly, so let's fix this",button.graphicProperty().unbind();,no
Set-up groups tree,groupTree.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);,no
Store the directory for next time:,preferences.setWorkingDir(path);,no
those threads will be allowed to finish,this.executorService.shutdown();,no
Fetches possibly saved data and configures the control elements respectively.,private void applyPreferences() {,no
Exception used to indicate that the plugin attempted to set a character format that is not defined in the current OpenOffice document.,class CreationException extends Exception {,no
Autosave,,no
Sets the indeterminate status of the progress bar. <p>,public void setProgressBarIndeterminate(final boolean value) {,yes
The action was either canceled or unsuccessful.,"dialogService.notify(Localization.lang(""Unable to save library""));",no
"Remove fields which are not in the merged entry, unless they are internal fields",for (Field field : originalFields) {,no
Text before the citation.,if (start > 0) {,no
entry type,EntryType oldType = originalEntry.getType();,yes
"Display warnings, if any",int tabNumber = 0;,yes
Set the string associated with this file type's icon.,public void setIconName(String name) {,yes
Added comparator for Read Status,if (specialField == SpecialField.READ_STATUS) {,yes
This constructor should only be called to create a pseudo abbreviation file for built in lists. This means it is a placeholder and it's path will be null meaning it has no place on the filesystem. It's isPseudoFile property will therefore be set to true.,"public AbbreviationsFileViewModel(List<AbbreviationViewModel> abbreviations, String name) {",no
"TODO: reflective access, should be removed","Method m = TextFields.class.getDeclaredMethod(""setupClearButtonField"", TextField.class, ObjectProperty.class);",no
A new or modified entry type. Construct it from the string array:,ExternalFileType type = CustomExternalFileType.buildFromArgs(val);,no
"To account for numbering and for uniqiefiers, we must refresh the cite markers:",updateSortedReferenceMarks();,no
Open a http/pdf/ps viewer for the given link string.,"public static void openExternalViewer(BibDatabaseContext databaseContext, String initialLink, Field initialField)",no
General,,yes
Read all keybindings from the keybinding repository and create table keybinding models for them,private void populateTable() {,no
Text leading up to s1 Insert s2,"stringBuilder.append(txt, piv, ind);",no
Migrations: Warning for migrating the Review into the Comment field,"new MergeReviewIntoCommentAction(),",no
"// TODO: Show detailed description of the changes StringBuilder sb = new StringBuilder( ""<html>"" + Localization.lang(""Changes have been made to the following metadata elements"") + "":<p><br>&nbsp;&nbsp;""); sb.append(changes.stream().map(unit -> unit.key).collect(Collectors.joining(""<br>&nbsp;&nbsp;""))); sb.append(""</html>""); infoPane.setText(sb.toString());","return new Label(Localization.lang(""Metadata change""));",no
Global String constants for GUI actions,@Deprecated,no
Put everything together,VBox container = new VBox();,no
"Check if we should italicize the ""et al."" string in citations:",boolean italicize = style.getBooleanCitProperty(OOBibStyle.ITALIC_ET_AL);,yes
Inform the user to select entries first.,dialogService.showInformationDialogAndWait(,yes
"Performs the change. This method is responsible for adding a proper undo edit to the NamedCompound, so the change can be undone.","public abstract void makeChange(BibDatabaseContext database, NamedCompound undoEdit);",no
Set-up bindings,BindingsHelper.bindContentBidirectional(,no
Try to contact already running JabRef,RemoteClient remoteClient = new RemoteClient(remotePreferences.getPort());,no
css: file-excel *,"FILE_EXCEL(MaterialDesignIcon.FILE_EXCEL),",yes
Opens the url with the users standard Browser. If that fails a popup will be shown to instruct the user to open the link manually and the link gets copied to the clipboard,public static void openBrowserShowPopup(String url) {,no
"Sets the {@link Runnable} that is invoked after the task is finished, irrespectively if it was successful or failed with an error.",public BackgroundTask<V> onFinished(Runnable onFinished) {,no
Field editor that provides various pre-defined options as a drop-down combobox.,public class TagBar<T> extends HBox {,no
This method stores all file paths of the files in the journalFiles property to the global JabRef preferences. Pseudo abbreviation files will not be stored.,private void saveExternalFilesList() {,no
"icon.setToolTipText(Localization.lang(""Open"") + "" URL"");","TABLE_ICONS.put(StandardField.URL, icon);",yes
An empty search field should cause the search to be cleared.,if (searchField.getText().isEmpty()) {,no
Priority icon used for the menu,"SpecialFieldViewModel priorityViewModel = new SpecialFieldViewModel(SpecialField.PRIORITY, undoManager);",no
checkbox-marked-circle-outline *,PLAIN_TEXT_IMPORT_DONE(MaterialDesignIcon.CHECKBOX_MARKED_CIRCLE_OUTLINE),yes
Returns the currently viewed BasePanel.,public BasePanel getCurrentBasePanel() {,yes
Generate keys,BibtexKeyPatternPreferences prefs = jabRefPreferences.getBibtexKeyPatternPreferences();,no
This class is similar to {@link GraphicValidationDecoration} but with a different style and font-based icon.,public class IconValidationDecorator extends GraphicValidationDecoration {,no
This method returns a JComponent detailing the nature of the change.,public abstract Node description();,no
"only remove explicit groups from the entries, keyword groups should not be deleted",if (group.getGroupNode().getGroup() instanceof ExplicitGroup) {,no
Are there children (or children of children...) that are matched? If yes we also need to show this node,return node.children.getSource().stream().anyMatch(this::showNode);,no
If there are entries to add,if (!toAdd.isEmpty()) {,yes
"node should be generated for each call, as nodes can be added to the scene graph only once",return icon.getGraphicNode();,no
The user doesn't want to override cite keys,if (!overwriteKeys) {,no
"TODO: Add undo panel.getUndoManager().addEdit(new UndoableFieldChange(entry, editor.getName(), text, nextAbbreviation));",},no
Shows a dialog with the warnings from an import or open of a file,"public static void showParserResultWarningDialog(final ParserResult parserResult, final JabRefFrame jabRefFrame) {",no
"The popup has private access in {@link AutoCompletionBinding}, so we use reflection to access it.","@SuppressWarnings(""unchecked"")",no
"Try to strip the query string, if any, to get the correct suffix:",URL url = new URL(link);,no
"Add chosen export type to last used pref, to become default","Globals.prefs.put(JabRefPreferences.LAST_USED_EXPORT, exporter.getName());",no
Create a new TextSection from the document factory and access it's XNamed interface,XNamed xChildNamed;,no
A tag item in a {@link TagBar}.,public class Tag<T> extends HBox {,no
"TODO: Warn if (!WarnAssignmentSideEffects.warnAssignmentSideEffects(node.getNode().getGroup(), panel.frame())) { return; // user aborted operation",,no
TODO: Expand parent to make new group visible parent.expand();,,no
This class will copy each selected entry's BibTeX key as a hyperlink to its url to the clipboard. In case an entry doesn't have a BibTeX key it will not be copied. In case an entry doesn't have an url this will only copy the BibTeX key.,public class CopyBibTeXKeyAndLinkAction implements BaseAction {,no
check whether there is another icon defined for this file type,for (ExternalFileType fileType : ExternalFileTypes.getDefaultExternalFileTypes()) {,no
"this needs to fixed because it gives ""asdf"" when going prefs.get(""lyxpipe"")",File lp = new File(commandPath);,no
Concatenates the formatted message of the given {@link LogEvent}s by using the a new line separator.,private String getLogMessagesAsString(List<LogEventViewModel> messages) {,no
Creates a {@link BackgroundTask} that first runs this task and based on the result runs a second task.,"public <T> BackgroundTask<T> then(Function<V, BackgroundTask<T>> nextTaskFactory) {",no
"Opens ""New Group Dialog"" and add the resulting group to the specified group",public void addNewSubgroup(GroupNodeViewModel parent) {,no
"On all OSes there is a generic application available to handle file opening, so use this one","return """";",no
generate the new cite keys for each entry,"final NamedCompound compound = new NamedCompound(Localization.lang(""Autogenerate BibTeX keys""));",no
default value,String text = defaultPat.getText();,yes
Customization of appearance parameters.,"public AppearancePrefsTab(DialogService dialogService, JabRefPreferences prefs) {",no
"remove node, then insert all children",GroupTreeNode removedNode = cursor,no
Remove all current possible suggestions,public void clearSuggestions() {,yes
Get entries and check if it makes sense to perform this operation,entries = basePanel.getSelectedEntries();,no
"This method first saves all external files to its internal list, then writes all abbreviations to their files and finally updates the abbreviations auto complete. It basically calls {@link #saveExternalFilesList()}, {@link #saveJournalAbbreviationFiles() } and finally {@link JournalAbbreviationLoader#update(JournalAbbreviationPreferences)}.",public void saveEverythingAndUpdateAutoCompleter() {,no
do not open the original file,result.getDatabaseContext().clearDatabaseFile();,no
"Finds the entry in the list best fitting the specified entry. Even if no entries get a score above zero, an entry is still returned.","private static BibEntry bestFit(BibEntry targetEntry, List<BibEntry> entries) {",no
"no more bps to check, we found a matching one",break;,no
default pattern,protected final TextField defaultPat = new TextField();,yes
We try to find the page that is displayed in the center of the viewport,Optional<DocumentViewerPage> inMiddleOfViewport = Optional.empty();,no
Function to get the command name in case it is different from the application name,protected String getCommandName() {,no
Check if we are running an acceptable version of Java,final BuildInfo buildInfo = Globals.BUILD_INFO;,yes
{@inheritDoc},@Override,yes
Alt on Windows,"LOGGER.debug(""Mode LINK"");",no
General information,VBox contextPanel = new VBox(10);,no
"compare normalized markers, since the actual markers can be different",String[] markers = normCitMarkers[i];,no
all keywords from first entry have to be added,BibEntry firstEntry = entries.get(0);,no
"must be set here, because in initialize the button is still null",btnConnect.disableProperty().bind(viewModel.formValidation().validProperty().not());,no
everything is ok,return null;,yes
See if we can find a type with matching name in the default type list:,ExternalFileType found = null;,no
We need to wait with setting the divider since it gets reset a few times during the initial set-up,mainStage.showingProperty().addListener(new ChangeListener<Boolean>() {,no
"We calculate the new hit value We could be more intelligent and try to figure out the new number of hits based on the entry change for example, a previously matched entry gets removed -> hits = hits - 1",BackgroundTask,no
"It was modified. Remove its entry from the defaults list, since the type hasn't been removed:",defTypes.remove(found);,no
Cannot rename remote links,return;,no
remember modified children for redo,m_modifiedSubtree.clear();,no
If the given component is visible it will be hidden and the other way around.,public void toggle(SidePaneType type) {,yes
Interface presents user-described paste behaviour applying to paste method,@FunctionalInterface,no
"icon.setToo(Localization.lang(""Open"") + "" PDF"");","TABLE_ICONS.put(StandardField.PDF, icon);",yes
First get a list of the default file types as a starting point:,List<ExternalFileType> types = new ArrayList<>(getDefaultExternalFileTypes());,no
"The name to change to is already in the database, so we can't comply.","LOGGER.info(""Cannot rename string '"" + mem + ""' to '"" + disk + ""' because the name """,no
"Look up the external file type registered with this name, if any.",public Optional<ExternalFileType> getExternalFileTypeByName(String name) {,no
"TODO: Add undo/redo ce.addEdit(new UndoableInsertEntry(panel.getDatabase(), entry));",,no
The action concerned with generate a new (sub-)database from latex AUX file.,public class NewSubLibraryAction extends SimpleCommand {,no
Starts the search of unlinked files according chosen directory and the file type selection. The search will process in a separate thread and a progress indicator will be displayed.,private void startSearch() {,no
Gets the filename for the current linked file and compares it to the new suggested filename.,public boolean isGeneratedNameSameAsOriginal() {,no
Modified externally.,"fieldChanges.add(new FieldChangeViewModel(field, memEntry, tmpEntry, mem.orElse(null), tmp.get(), disk.get()));",no
Responsible for managing of all threads (except GUI threads) in JabRef,public class JabRefExecutorService {,no
all the logic is done in openIt. Even raising an existing panel,"getOpenDatabaseAction().openFile(file, true);",no
Focuses the given field.,public void requestFocus(Field fieldName) {,yes
Set pasteActionHandler variable to passed handler,public void setPasteActionHandler(PasteActionHandler handler) {,yes
Gets invoked if the user selects a different group. We need to notify the {@link StateManager} about this change so that the main table gets updated.,private void onSelectedGroupChanged(ObservableList<GroupNodeViewModel> newValue) {,no
Merge entries:,for (BibEntry entry : pr.getDatabase().getEntries()) {,no
This panel contains the two comboboxes and the Add button,private GridPane getSelectorPanel() {,no
Gets invoked if the user changes the active database. We need to get the new group tree and update the view,private void onActiveDatabaseChanged(Optional<BibDatabaseContext> newDatabase) {,no
"Use ""-a <application>"" if the app is specified, and just ""open <filename>"" otherwise:","String[] cmd = (application != null) && !application.isEmpty() ? new String[] {""/usr/bin/open"", ""-a"",",no
set default values (overwritten if editedGroup != null),keywordGroupSearchField.setText(prefs.get(JabRefPreferences.GROUPS_DEFAULT_FIELD));,no
Check if the cloned entry has a crossref field,clonedEntry.getField(StandardField.CROSSREF).ifPresent(crossref -> {,yes
Print icon used for menu,"SpecialFieldViewModel printedViewModel = new SpecialFieldViewModel(SpecialField.PRINTED, undoManager);",no
"Return a String array representing this file type. This is used for storage into Preferences, and the same array can be used to construct the file type later, using the String[] constructor.",private String[] getStringArrayRepresentation(ExternalFileType type) {,no
must be here,Abbreviation abbreviation = journalAbbreviationRepository.getAbbreviation(text).get();,yes
This method will write all abbreviations of this abbreviation file to the file on the file system. It essentially will check if the current file is a built in list and if not it will call {@link AbbreviationWriter#writeOrCreate()}.,public void writeOrCreate() throws IOException {,no
"Constructs an {@link Image} for the image representing the given function, in the resource file listing images.@param name The name of the icon, such as ""open"", ""save"", ""saveAs"" etc. @return The {@link Image} for the function.",private static Image getImageFX(String name) {,no
Need to toggle a twice to make sure everything is selected,root.setSelected(true);,no
fetch entries from GUI,GlobalBibtexKeyPattern keypatterns = getKeyPatternAsGlobalBibtexKeyPattern();,no
"icon.setToolTipText(Localization.lang(""Open %0 file"", fileType.getName()));","TABLE_ICONS.put(fileType.getField(), icon);",yes
The default context menu with a specific menu for normalizing person names regarding to BibTex rules.,public static Supplier<List<MenuItem>> getNameMenu(final TextInputControl textInput) {,no
"Update the map of uniquefiers for the benefit of both the following generation of new citation markers, and for the method that builds the bibliography:","uniquefiers.put(key, String.valueOf((char) uniq));",no
Check if any of the files are already open:,for (Iterator<Path> iterator = filesToOpen.iterator(); iterator.hasNext();) {,no
Automatically imports the files given as arguments.,public void automatedImport(List<String> filenames) {,yes
Return null if the directory is not valid.,if ((directory == null) || !directory.exists() || !directory.isDirectory()) {,yes
"setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds()); WindowLocation pw = new WindowLocation(this, JabRefPreferences.POS_X, JabRefPreferences.POS_Y, JabRefPreferences.SIZE_X, JabRefPreferences.SIZE_Y); pw.displayWindowAtStoredLocation();",,yes
css: file-find *,AUTO_FILE_LINK(MaterialDesignIcon.FILE_FIND),no
"icon.setToolTipText(Localization.lang(""Open file""));","TABLE_ICONS.put(StandardField.FILE, icon);",yes
"Here we store the names of all current files. If there is no current file, we remove any previously stored filename.",if (filenames.isEmpty()) {,no
Add to group,"addToGroups(entries, stateManager.getSelectedGroup(database));",yes
The subtree that was added or removed,private final GroupTreeNode m_subtreeBackup;,no
Run a recursive search in a background task.,public void searchButtonClicked() {,no
Read a typical java property url into a Map. Currently doesn't support escaping of the '=' character - it simply looks for the first '=' to determine where the key ends. Both the key and the value is trimmed for whitespace at the ends.,// FIXME: prefix can be removed?!,no
Asks the user for confirmation that he really wants to the delete the file from disk (or just remove the link).,public boolean delete() {,no
Different actions depending on where the user releases the drop in the target row Bottom + top -> import entries Center -> link files to entry,"switch (ControlHelper.getDroppingMouseLocation(row, event)) {",no
empty tab without database,if (panel == null) {,yes
ExporterViewModel wraps a TemplateExporter from logic and is used in the exporter customization dialog view and ViewModel.,,no
The Preferences panel for key generation.,class BibtexKeyPatternPrefTab extends BibtexKeyPatternPanel implements PreferencesTab {,no
insert the factory of the loader,"xSet.insert(xImpLoader.activate(""com.sun.star.comp.loader.JavaLoader"", null, null, null));",yes
We try to to prevent publishing changes in the search field directly to the search task that takes some time for larger group structures.,"final Timer searchTask = FxTimer.create(Duration.ofMillis(400), () -> {",no
Build individual layout cards for each group,VBox explicitPanel = createOptionsExplicitGroup();,no
"Installs the style file and provides live reloading. <p> The live reloading has to be turned on by setting the <code>-Djabref.theme.css</code> property. There two possible modes: (1) When only <code>-Djabref.theme.css</code> is specified, then the standard <code>Base.css</code> that is found will be watched and on changes in that file, the style-sheet will be reloaded and changes are immediately visible. (2) When a path to a css file is passed to <code>-Djabref.theme.css</code>, then the given style is loaded in addition to the base css file. Changes in the specified css file lead to an immediate redraw of the interface. <p> When working from an IDE, this usually means that the <code>Base.css</code> is located in the build folder. To use the css-file that is located in the sources directly, the full path can be given as value for the ""VM option"": <code>-Djabref.theme.css=""/path/to/src/Base.css""</code>",public class ThemeLoader {,no
Set entry number in case that is included in the preview layout.,ExporterFactory.entryNumber = 1;,no
"For some reason the graphic is not set correctly, so let's fix this ToDO: Find a way to reuse JabRefIconView",button.graphicProperty().unbind();,no
Pass other keys to children,},no
class is indirectly constructed by log4j,"@SuppressWarnings(""unused"")",no
Different actions depending on where the user releases the drop in the target row Bottom + top -> insert source row before / after this row Center -> add as child,switch (mouseLocation) {,no
"Opens a file browser of the folder of the given file. If possible, the file is selected",public static void openFolderAndSelectFile(Path fileLink) throws IOException {,no
FIXME: prefix can be removed?!,"private static Map<String, String> readIconThemeFile(URL url, String prefix) {",no
"This class represents the removal of an entry. The constructor needs references to the database, the entry, and the map of open entry editors. The latter to be able to close the entry's editor if it is opened after an undo, and the removal is then undone.",public class UndoableRemoveEntry extends AbstractUndoableJabRefEdit {,no
"We know that tmpEntry is not equal to diskEntry. Check if it has been modified locally as well, since last tempfile was saved.","boolean isModifiedLocally = (DuplicateCheck.compareEntriesStrictly(memEntry, tmpEntry) <= 1);",no
The preferences might be not initialized in tests -> return immediately TODO: Replace this ugly workaround by proper injection propagation,if (Globals.prefs == null) {,no
@return Merged BibEntry,public BibEntry getMergeEntry() {,yes
Focuses the search field if it is not focused.,public void focus() {,yes
Decide whether to show this tab for the given entry.,public abstract boolean shouldShow(BibEntry entry);,yes
Register undo/redo listener,basePanel.getUndoManager().registerListener(new UndoRedoEventManager());,yes
"icon.setToolTipText(Localization.lang(""Open"") + "" ArXiv URL"");","TABLE_ICONS.put(StandardField.EPRINT, icon);",yes
"Reporting etc., this method is called on the event dispatch thread after pushEntries() returns.",void operationCompleted();,no
Creates an object that can undo/redo an edit event.,"public UndoableAddOrRemoveGroup(GroupTreeNodeViewModel groupsRoot,",no
We have to use reflection since TableUtil is not visible to us,try {,no
insert the acceptor,"xSet.insert(xImpLoader.activate(""com.sun.star.comp.connections.Acceptor"", null, null, null));",yes
TODO: Font & padding customization setFont(GUIGlobals.currentFont);,},no
"We have sorted the citation markers according to their order of appearance, so we simply count up for each marker referring to a new entry:",List<Integer> num = new ArrayList<>(keys.length);,no
Specific importer:,"ParserResult pr = importer.get().importDatabase(filename, Globals.prefs.getDefaultEncoding());",yes
Get the office component context:,XComponentContext xContext = org.jabref.gui.openoffice.Bootstrap.bootstrap(loader);,no
"The type of the editing (ADD_NODE, REMOVE_NODE_KEEP_CHILDREN, REMOVE_NODE_AND_CHILDREN)",private final int m_editType;,no
Font configuration,HBox fontBox = new HBox();,yes
Shift on Windows or no modifier,"LOGGER.debug(""Mode MOVE"");",no
"GUI component that allows editing of the fields of a BibEntry (i.e. the one that shows up, when you double click on an entry in the table) <p> It hosts the tabs (required, general, optional) and the buttons to the left. <p> EntryEditor also registers itself to the event bus, receiving events whenever a field of the entry changes, enabling the text fields to update themselves if the change is made from somewhere else.",public class EntryEditor extends BorderPane {,no
TODO: Float marked entries model.updateMarkingState(Globals.prefs.getBoolean(JabRefPreferences.FLOAT_MARKED_ENTRIES));,,no
Ignore,"return new ReadOnlyStringWrapper("""");",yes
"Find default choice, if any",Exporter defaultChoice = exporters.stream(),yes
This marker appears for more than one unique entry:,int uniq = 'a';,no
Constructs a {@link TreeTableCell} based on the view model of the row and a bunch of specified converter methods.,"public class ViewModelTableRowFactory<S> implements Callback<TableView<S>, TableRow<S>> {",no
Override used newline character with the one stored in the preferences The preferences return the system newline character sequence as default,OS.NEWLINE = Globals.prefs.get(JabRefPreferences.NEWLINE);,no
For each cited key,for (String key : cited) {,yes
connection string,"String sConnect = ""uno:socket,host=localhost,port=2083"" + "";urp;StarOffice.ComponentContext"";",yes
"Generates a plain text string out of the preview and copies it additionally to the html to the clipboard (WYSIWYG Editors use the HTML, plain text editors the text)",protected static String processPreview(List<String> citations) {,no
IEEETran,"populateSubMenu(items, ""IEEETran"", IEEETranEntryTypeDefinitions.ALL, entry, undoManager);",yes
Sort the visible components by their preferred position,visibleComponents.sort(new PreferredIndexSort());,yes
"This method should be called after storing the preferences, This calls the appropriate method in the ViewModel.",List<String> getRestartWarnings();,no
Should this be done _after_ we know it was successfully opened?,"ParserResult parserResult = OpenDatabase.loadDatabase(file.toFile(),",no
Find the default directory for this field type:,"List<String> dir = databaseContext.getFileDirectories(field, Globals.prefs.getFilePreferences());",yes
Set-up annotation list,annotationList.getSelectionModel().setSelectionMode(SelectionMode.SINGLE);,yes
Bootstraps an initial component context with service manager and basic jurt components inserted.,"public static XComponentContext createInitialComponentContext(Map<String, Object> context_entries) throws Exception {",no
redo,} else {,no
Generate keys for given entries.,private void generateKeys(List<BibEntry> entries) {,yes
"This Action keeps a reference to a URL. When activated, it shows the help Dialog unless it is already visible, and shows the URL in it.",public class HelpAction extends SimpleCommand {,no
"Only serialize linked files, not the ones that are automatically found",List<LinkedFile> filesToSerialize = files.stream(),no
Puts the value of the concrete class in a map. All previous content stored in the map is removed,"public <T> void putValue(Class<T> type, T value) {",no
create default local component context,"XComponentContext xLocalContext = createInitialComponentContext((Map<String, Object>) null);",yes
Update appearance of group,anySelectedEntriesMatched.invalidate();,no
Checks if there are duplicates to the given entry in the list of entries to be imported.,private Optional<BibEntry> findInternalDuplicate(BibEntry entry) {,no
If there are entries to remove,if (!toRemove.isEmpty()) {,yes
General fields from preferences,"for (Map.Entry<String, Set<Field>> tab : entryEditorPreferences.getEntryEditorTabList().entrySet()) {",no
Class for creating the information about customizable entry editor tabs.,public final class EntryEditorTabList {,no
"Do not make this class final, as it otherwise can't be mocked for tests",public class ExternalFileTypes {,no
Refresh all reference marks with the citation markers we computed:,boolean hadBibSection = getBookmarkRange(OOBibBase.BIB_SECTION_NAME) != null;,no
Save the database,"boolean success = saveDatabase(targetPath, false,",yes
"Class that defines interaction with an external application in the form of ""pushing"" selected entries to it.",public interface PushToApplication {,no
"A Hyperlink Click Listener for javafx.WebView to open links on click in the browser Code adapted from: <a href=""https://stackoverflow.com/a/33445383/"">https://stackoverflow.com/a/33445383/</a>","public class OpenHyperlinksInExternalBrowser implements ChangeListener<Worker.State>, EventListener {",no
Constructs a {@link TreeTableCell} based on the view model of the row and a bunch of specified converter methods.,"public class ViewModelTreeTableCellFactory<S> implements Callback<TreeTableColumn<S, S>, TreeTableCell<S, S>> {",no
"Looks up the URL for the image representing the given function, in the resource file listing images.",public static URL getIconUrl(String name) {,no
Quick hack to disable navigating,"browser.addEventFilter(javafx.scene.input.MouseEvent.ANY, javafx.scene.input.MouseEvent::consume);",no
Use the received map directly,correctEntries = entries;,yes
Register for changes,for (Observable observable : newEntry.getObservables()) {,yes
Empty,public SuggestionProviders() {,yes
Disables selection,public class NoSelectionModel<T> extends MultipleSelectionModel<T> {,no
Moves the given component down.,public void moveDown(SidePaneComponent comp) {,yes
for the case that the password is already set,prefs.clearPassword();,no
Updated the original entry with the new fields,Set<Field> jointFields = new TreeSet<>(Comparator.comparing(Field::getName));,no
GUI for tab displaying article recommendations based on the currently selected BibEntry,public class RelatedArticlesTab extends EntryEditorTab {,no
TODO: NULL TODO: Null TODO: NULL,GroupTreeNode newParent = root.getNode().getDescendant(pathToNewParent).get();,yes
"A date picker with configurable datetime format where both date and time can be changed via the text field and the date can additionally be changed via the JavaFX default date picker. Also supports incomplete dates. First recall how the date picker normally works: - The user selects a date in the popup, which sets {@link #valueProperty()} to the selected date. - The converter ({@link #converterProperty()}) is used to transform the date to a string representation and display it in the text field. The idea is now to intercept the process and add an additional step: - The user selects a date in the popup, which sets {@link #valueProperty()} to the selected date. - The date is converted to a {@link TemporalAccessor} (i.e, enriched by a time component) using {@link #addCurrentTime(LocalDate)} - The string converter ({@link #stringConverterProperty()}) is used to transform the temporal accessor to a string representation and display it in the text field. Inspiration taken from https://github.com/edvin/tornadofx-controls/blob/master/src/main/java/tornadofx/control/DateTimePicker.java",public class TemporalAccessorPicker extends DatePicker {,no
A simple command that does not track progress of the action.,public abstract class SimpleCommand extends CommandBase {,no
Create a new entry and add it to the undo stack Remove the other two entries and add them to the undo stack (which is not working...),"NamedCompound ce = new NamedCompound(Localization.lang(""Merge entries""));",no
"If we are not allowed to overwrite values, check if there is a non-empty value already for this entry for the new field:",Optional<String> valInNewField = entry.getField(newField);,no
Holds the version in memory. Check if it has been modified...?,this.inMem = inMem;,no
This class provides a view model for abbreviation objects which can also define placeholder objects of abbreviations. This is indicated by using the {@code pseudoAbbreviation} property.,public class AbbreviationViewModel {,no
"TODO: Implement jump to entry TODO: Add toolitp for tag: Localization.lang(""Jump to entry"") This feature was removed while converting the linked entries editor to JavaFX Right now there is no nice way to re-implement it as we have no good interface to control the focus of the main table (except directly using the JabRefFrame class as below) parsedEntryLink.getLinkedEntry().ifPresent( e -> frame.getCurrentBasePanel().highlightEntry(e) );",},no
basePanel.getPreviewPanel().updateLayout(preferences.getPreviewPreferences());,},yes
The mouse location within the cell when the dropping gesture occurs.,public enum DroppingMouseLocation {,no
Store changes to table preferences. This method is called when the user clicks Ok.,@Override,no
TODO: Rework so that we don't rely on JabRefFrame and not the complete preferences,this.frame = frame;,no
Util class for searching files on the file system which are not linked to a provided {@link BibDatabase}.,public class UnlinkedFilesCrawler extends BackgroundTask<CheckBoxTreeItem<FileNodeWrapper>> {,no
Entry type unknown -> treat all fields as required,fields.addAll(entry.getFields());,no
Switch to currently selected entry if mode is changed to live,,no
Returns a list of BasePanel.,public List<BasePanel> getBasePanelList() {,yes
We need to wrap the list since otherwise sorting in the table does not work,entriesSorted = new SortedList<>(entriesFiltered);,no
Creates a VBox of the related article information to be used in the StackPane displayed in the Related Articles tab,"private ScrollPane getRelatedArticleInfo(List<BibEntry> list, MrDLibFetcher fetcher) {",no
Redo the change.,base.removeString(string.getId());,yes
Refresh all cite markers in the document.,"public List<String> refreshCiteMarkers(List<BibDatabase> databases, OOBibStyle style)",yes
"TODOSwingUtilities.invokeLater(() -> {undo.putValue(Action.SHORT_DESCRIPTION, event.getUndoDescription());undo.setEnabled(event.isCanUndo());redo.putValue(Action.SHORT_DESCRIPTION, event.getRedoDescription());redo.setEnabled(event.isCanRedo());});",},no
"move all children to newNode, then add newNode",GroupTreeNode newNode = m_subtreeBackup.copySubtree();,no
Checks whether the file exists or if a new file should be opened. The file will be added to the set of journal abbreviation files. If the file also exists its abbreviations will be read and written to the abbreviations property.,private void openFile(Path filePath) {,no
"TODO: reflective access, should be removed","Class<?> clazz = Class.forName(""javafx.scene.control.TableUtil"");",no
"if user does not change anything with his action, we do not do anything either even no output message",},no
Enriches a suggestion provider by a given set of content selector values.,public class ContentSelectorSuggestionProvider implements AutoCompleteSuggestionProvider<String> {,no
Revert the change.,try {,yes
Always fill out all the available space,setPrefHeight(Double.POSITIVE_INFINITY);,no
Good bye!,tearDownJabRef(filenames);,yes
Enrich auto completion by content selector values,try {,no
Name the reference,"XNamed xNamed = UnoRuntime.queryInterface(XNamed.class, bookmark);",yes
The log event will be forwarded to the {@link LogMessages} archive.,@Override,no
"ToDo: After conversion of all tabs to mvvm, rework interface and make validSettings bindable Button btnSave = (Button) this.getDialogPane().lookupButton(saveButton); btnSave.disableProperty().bind(viewModel.validSettings().validProperty().not());",},no
Frame titles.,"public static final String FRAME_TITLE = ""JabRef"";",yes
"Set to true in case the command could not be executed, e.g., if the file is not found Set to true in case the tunnel to the program (if one is used) does not operate Set to true if the corresponding path is not defined in the preferences",protected boolean couldNotCall;,no
Add context menu (only for non-null items),row.contextMenuProperty().bind(,no
"Copies the selected entries and formats them with the selected citation style (or preview), then it is copied to the clipboard. This worker cannot be reused.",public class CitationStyleToClipboardWorker {,no
"This class defines a type of external files that can be linked to from JabRef. The class contains enough information to provide an icon, a standard extension and a link to which application handles files of this type.",public class CustomExternalFileType implements ExternalFileType {,no
Error stream has been closed. See if there were any errors:,if (!sb.toString().trim().isEmpty()) {,no
In case it did not work,catch (IOException excep) {,yes
"{@link FileFilter} implementation, that allows only files which are not linked in any of the {@link BibEntry}s of the specified {@link BibDatabase}. <br> <br> This {@link FileFilter} sits on top of another {@link FileFilter} -implementation, which it first consults. Only if this major filefilter has accepted a file, this implementation will verify on that file.",public class UnlinkedPDFFileFilter implements FileFilter {,no
Sort entries into current members and non-members of the group Current members will be removed Current non-members will be added,List<BibEntry> toRemove = new ArrayList<>(entries.size());,no
"For ""ONLY_FULL"", the auto completer returns the full name, e.g. ""Smith, Bob"" For ""ONLY_ABBREVIATED"", the auto completer returns the first name abbreviated, e.g. ""Smith, B."" For ""BOTH"", the auto completer returns both versions.",public enum AutoCompleteFirstNameMode {,no
"Resolve the bibtex key from a citation reference marker name, and look up the index of the key in a list of keys.",,no
Send event to trigger changes,postUndoRedoEvent();,no
"This class provides a model for managing journal abbreviation lists. It provides all necessary methods to create, modify or delete journal abbreviations and files. To visualize the model one can bind the properties to ui elements.",public class ManageJournalAbbreviationsViewModel extends AbstractViewModel {,no
Makes sure that the given component is visible.,public void show(SidePaneType type) {,yes
"TODO: show parserwarnings, if any (not here) for (ImportFormatReader.UnknownFormatImport p : imports) { ParserResultWarningDialog.showParserResultWarningDialog(p.parserResult, frame); }",if (bibtexResult == null) {,no
The action concerned with opening an existing database.,public class OpenDatabaseAction extends SimpleCommand {,yes
icon.setToolTipText(priorityViewModel.getLocalization());,"TABLE_ICONS.put(SpecialField.PRIORITY, icon);",yes
Check if the type has changed,if (!identicalTypes && !typeRadioButtons.isEmpty() && typeRadioButtons.get(0).isSelected()) {,no
"In case no stringConverter was provided, use the default strategy",if (this.stringConverter == null) {,no
Installs the base css file as a stylesheet in the given scene. Changes in the css file lead to a redraw of the scene using the new css file.,"public void installCss(Scene scene, JabRefPreferences preferences) {",no
"TODO: Add undo and display message MoveGroupChange undo = new MoveGroupChange(((GroupTreeNodeViewModel)source.getParent()).getNode(), source.getNode().getPositionInParent(), target.getNode(), target.getChildCount());",,no
Except every file,return pathname -> true;,yes
The current version of the installed JabRef,private final Version installedVersion;,yes
"No occurrence, or at the end Check if there are path separators in the suffix - if so, it is definitely not a proper suffix, so we should give up:",if (strippedLink.substring(strippedLinkIndex + 1).indexOf('/') >= 1) {,yes
"This method causes all open BasePanels to set up their tables anew. When called from PrefsDialog3, this updates to the new settings.",public void setupAllTables() {,no
Pretend that we just switched to the current file in order to refresh the display,notifyNewSelectedFile(currentFile);,no
Pass other keys to parent,},yes
"Must be executed after the initialization of the view, otherwise it doesn't work",Platform.runLater(() -> {,no
Remember the type in case we need to uniquefy.,types[i] = type;,no
Steps to reproduce,"String howToReproduce = ""Steps to reproduce:\n\n1. ...\n2. ...\n3. ..."";",yes
do not open the original file,pr.getDatabaseContext().clearDatabaseFile();,yes
"We have to put Entry Editor Previous before, because otherwise the decrease font size is found first","ENTRY_EDITOR_PREVIOUS_PANEL_2(""Entry editor, previous panel 2"", Localization.lang(""Entry editor, previous panel 2""), ""ctrl+MINUS"", KeyBindingCategory.VIEW),",no
Update active search query when switching between databases,stateManager.activeSearchQueryProperty().set(newBasePanel.getCurrentSearchQuery());,no
Create help button for currently selected fetcher,StackPane helpButtonContainer = new StackPane();,yes
"In case of removing a node but keeping all of its children, the number of children has to be stored.",private final int m_subtreeRootChildCount;,no
Move contents from one field to another for a Collection of entries.,"private static UndoableEdit massRenameField(Collection<BibEntry> entries, Field field, Field newField,",no
Adding of a single node (group).,public static final int ADD_NODE = 0;,yes
"This is called, when the user drops some PreviewLayouts either in the availableListView or in the empty space of chosenListView",,no
TODO: use WEB_SEARCH instead as soon as it is available TODO: use WEB_SEARCH instead as soon as it is available,"LOOKUP_IDENTIFIER(MaterialDesignIcon.MAGNIFY),",no
"Executes the task on the current thread. The code is essentially taken from {@link javafx.concurrent.Task.TaskCallable#call()}, but adapted to run sequentially.",@Override,no
"This method returns the default key binding, the key(s) which are assigned",public String getDefaultKeyBinding() {,yes
"TODO: Add undo UndoableAddOrRemoveGroup undo = new UndoableAddOrRemoveGroup(parent, new GroupTreeNodeViewModel(newGroupNode), UndoableAddOrRemoveGroup.ADD_NODE); panel.getUndoManager().addEdit(undo);",,no
Test if the field is legally set.,"new LatexFieldFormatter(fieldFormatterPreferences).format(newValue, fieldName);",no
"Need to run this async, otherwise the dialog does not work",ControlsFxVisualizer visualizer = new ControlsFxVisualizer();,no
Revert the change.,if (nameChange) {,yes
and adding merged entries:,if (!result.getToAdd().isEmpty()) {,yes
remove newlines && hyphens before linebreaks,"markingContent = markingContent.replaceAll(""-"" + NEWLINE, """");",yes
Creates a {@link BackgroundTask} that first runs this task and based on the result runs a second task.,"public <T> BackgroundTask<T> thenRun(Function<V, T> nextOperation) {",no
"This action checks whether any new custom entry types were loaded from this BIB file. If so, an offer to remember these entry types is given.",public class CheckForNewEntryTypesAction implements GUIPostOpenAction {,no
,"private void openTheFile(Path file, boolean raisePanel) {",no
Other fields,"entryEditorTabs.add(new OtherFieldsTab(databaseContext, panel.getSuggestionProviders(), undoManager,",yes
"Register listener The wrapper created by the FXCollections will set a weak listener on the wrapped list. This weak listener gets garbage collected. Hence, we need to maintain a reference to this list.",entriesList = databaseContext.getDatabase().getEntries();,no
Try to download fulltext PDF for selected entry(ies) by following URL or DOI link.,public class FindFullTextAction extends SimpleCommand {,no
Editor for external file types.,public class CustomizeExternalFileTypesDialog extends BaseDialog<Void> {,yes
configure elements,ToggleGroup groupType = new ToggleGroup();,yes
"This class is essentially a wrapper around {@link Task}. We cannot use {@link Task} directly since it runs certain update notifications on the JavaFX thread, and so makes testing harder. We take the opportunity and implement a fluid interface.",public abstract class BackgroundTask<V> {,no
Updates the view with the contents of the given entry.,protected abstract void bindToEntry(BibEntry entry);,yes
try to connect to office,Object context = xUrlResolver.resolve(sConnect);,no
Switch tab if asked to do so,if (dataBaseNumber >= 0) {,no
Store visual state,"new PersistenceVisualStateTable(this, Globals.prefs);",yes
This class has an abstract UI role as it listens for an {@link AutosaveEvent} and saves the bib file associated with the given {@link BasePanel}.,public class AutosaveUIManager {,no
Set owner/timestamp,"UpdateField.setAutomaticFields(entries, updateFieldPreferences);",no
the submenu will behave dependent on what style is currently selected (citation/preview),PreviewPreferences previewPreferences = Globals.prefs.getPreviewPreferences();,no
Find the linking footnote marker:,"XFootnote footer = UnoRuntime.queryInterface(XFootnote.class, range.getText());",no
"Tests if we are running an acceptable Java and terminates JabRef when we are sure the version is not supported. This test uses the requirements for the Java version as specified in <code>gradle.build</code>. It is possible to define a minimum version including the built number and to indicate whether Java 9 can be used (which it currently can't). It tries to compare this version number to the version of the currently running JVM. The check is optimistic and will rather return true even if we could not exactly determine the version. <p> Note: Users with a very old version like 1.6 will not profit from this since class versions are incompatible and JabRef won't even start. Currently, JabRef won't start with Java 9 either, but the warning that it cannot be used with this version is helpful anyway to prevent users to update from an old 1.8 directly to version 9. Additionally, we soon might have a JabRef that does start with Java 9 but is not perfectly compatible. Therefore, we should leave the Java 9 check alive.",private static void ensureCorrectJavaVersion() {,no
Subscribe to type changes for rebuilding the currently visible tab,"typeSubscription = EasyBind.subscribe(this.entry.typeProperty(), type -> {",yes
May happen during initialization -> just ignore,continue;,no
"Look for the last '.' in the link, and return the following characters. This gives the extension for most reasonably named links.",public static Optional<String> getSuffix(final String link) {,no
"No selected group, show all entries",return Optional.empty();,no
Headings,"private final List<String> columnHeadings = Arrays.asList(Localization.lang(""Field""),",yes
get XTextContent interface,"XTextContent xTextContent = UnoRuntime.queryInterface(XTextContent.class, bookmark);",yes
Method to change the currentAbbrevaition property to a new abbreviation.,"public void editAbbreviation(String name, String abbreviation) {",yes
Update the merged entry,private void updateMergedEntry() {,yes
release panel from save status,panel.setSaving(false);,yes
Set text of each of the boxes,if (exporter != null) {,yes
Do nothing,} else if (answer == DuplicateResolverDialog.DuplicateResolverResult.KEEP_MERGE) {,yes
"This class represents the removal of an entry. The constructor needs references to the database, the entry, and the map of open entry editors. The latter to be able to close the entry's editor if it is opened before the insert is undone.",public class UndoableInsertEntry extends AbstractUndoableJabRefEdit {,no
This method is called to indicate that the settings panel returned from the getSettingsPanel() method has been shown to the user and that the user has indicated that the settings should be stored. This method must store the state of the widgets in the settings panel to Globals.prefs.,public void storeSettings() {,no
Check the given possible suggestion is a match (is a valid suggestion),"protected abstract boolean isMatch(T suggestion, ISuggestionRequest request);",yes
Read name format options: MK:,final boolean namesNatbib = Globals.prefs.getBoolean(JabRefPreferences.NAMES_NATBIB); //MK:,yes
"This method inserts a cite marker in the text for the given BibEntry, and may refresh the bibliography.","public void insertEntry(List<BibEntry> entries, BibDatabase database,",no
FIXME: Move to viewModel until fieldFormatterCleanupsPanel is property implemented,MetaData metaData = panel.getBibDatabaseContext().getMetaData();,no
"Since the directory does not exist, we cannot move it to there. So, this option is not checked - regardless of the presets stored in the preferences.",cleanUpMovePDF.setDisable(true);,no
"TODO: reflective access, should be removed","Field privatePopup = AutoCompletionBinding.class.getDeclaredField(""autoCompletionPopup"");",no
ensure that there is always only one AllEntriesGroup,if (newGroups.getGroup() instanceof AllEntriesGroup) {,no
Class for manipulating the Bibliography of the currently start document in OpenOffice.,class OOBibBase {,no
Check for running JabRef,if (!handleMultipleAppInstances(arguments) || argumentProcessor.shouldShutDown()) {,no
"The MacAdapter calls this method when ""About"" is selected from the application menu.",public void about() {,no
"TODO: Be a bit smarter and try to infer correct icon, for example using {@link org.jabref.gui.externalfiletype.ExternalFileTypes#getExternalFileTypeByName(String)}",public JabRefIcon getTypeIcon() {,no
Restore focus to field (run this async so that editor is already initialized correctly),selectedFieldName.ifPresent(this::requestFocus);,no
Get the page number of the current page in the document.,public abstract int getPageNumber();,yes
First see if the stripped link gives a reasonable suffix:,String suffix;,no
Hide progress indicator if finished (over 70% loaded),"browser.getEngine().getLoadWorker().progressProperty().addListener((observable, oldValue, newValue) -> {",no
fields,for (Field field : jointFields) {,yes
Ask if keys should be generated,"boolean citePressed = dialogService.showConfirmationDialogAndWait(Localization.lang(""Cite""),",yes
quote String so explorer handles URL query strings correctly,"String quotePath = ""\"""" + filePath + ""\"""";",no
This class provides a model for abbreviation files. It actually doesn't save the files as objects but rather saves their paths. This also allows to specify pseudo files as placeholder objects.,public class AbbreviationsFileViewModel {,no
Set language to [None]:,"xCursorProps.setPropertyValue(""CharLocale"", new Locale(""zxx"", """", """"));",no
To align with buttons below which also have 0.5em padding,"info.setStyle(""-fx-padding: 0.5em 0 0.5em 0;"");",no
TODO: switch Icon color searchIcon.setIcon(IconTheme.JabRefIcon.SEARCH.getIcon());,},no
The entry currently shown,private Optional<BibEntry> entry = Optional.empty();,no
"setting a multi value special field - the setted value is displayed, too","String[] allParams = {viewModel.getLocalization(), params[0], params[1]};",no
First hide old page and show background instead (recalculate size of background to make sure its correct),background.setWidth(getDesiredWidth());,no
"For some reason the graphic is not set correctly, so let's fix this","setGraphic(menu, action);",no
Exception used to indicate that the plugin attempted to set a character format that is not defined in the current OpenOffice document.,class UndefinedCharacterFormatException extends Exception {,no
Submits a one-shot task that becomes enabled after the given delay.,"<V> Future<?> schedule(BackgroundTask<V> task, long delay, TimeUnit unit);",no
css: folder *,OPEN(MaterialDesignIcon.FOLDER_OUTLINE),no
This Action may only be used in a menu or button. Never in the entry editor. FileListEditor and EntryEditor have other ways to update the file links,public class AutoLinkFilesAction extends SimpleCommand {,no
backwards compatibility stub.,"public static XComponentContext createInitialComponentContext(Hashtable<String, Object> context_entries) throws Exception {",no
Swing,requires java.desktop;,yes
Preferences and XML,requires java.prefs;,yes
Annotations (@PostConstruct),requires java.annotation;,yes
Libre Office,requires org.jabref.thirdparty.libreoffice;,yes
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors.,public class DatabaseChangeEvent {,no
no data,},no
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors.,public interface DatabaseChangeListener {,no
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors.,public class DatabaseChangeRegistration {,no
do nothing,},yes
FIXME: Reuse SearchWorker here,"SearchQuery searchQuery = new SearchQuery(""Journal Title 500"", false, false);",no
FIXME: Reuse SearchWorker here,"SearchQuery searchQuery = new SearchQuery(""Journal Title 500"", false, false);",no
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors.,public class OracleConnection implements Connection {,no
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors.,public class OracleDriver {,no
A mocking class used as a placeholder for the real Oracle JDBC drivers to prevent build errors.,public class OracleStatement {,no
This package contains stubs for oracle.jdbc to prevent build errors if the non-distributable oraclejdbdc6.jar is unavailable in the classpath,package oracle.jdbc;,no
empty,},yes
Annotation to indicate that usage of ApacheCommonsLang3 is explicitly allowed. The intention is to fully switch to Google Guava and only use Apache Commons Lang3 if there is no other possibility,public @interface ApacheCommonsLang3Allowed {,no
The rationale,String value();,yes
print statistics,System.out.println(new AuxParserResultViewModel(result).getInformation(true));,no
Defines the different modes that the BasePanel can operate in,,no
Puts content onto the clipboard.,public void setContent(ClipboardContent content) {,yes
"Get the String residing on the clipboard. @return any text found on the Clipboard; if none found, return an empty String.",public String getContents() {,yes
"Will open a file (like importFile), but will also request JabRef to focus on this database",private static Optional<ParserResult> importToOpenBase(String argument) {,no
Run an entry fetcher from the command line.,private Optional<ParserResult> fetch(String fetchCommand) {,no
Download web resource to temporary file,try {,yes
"* means ""guess the format"":","System.out.println(Localization.lang(""Importing in unknown format"") + "": "" + file);",no
Check if we should reset all preferences to default values:,if (cli.isPreferencesReset()) {,no
Check if we should import preferences from a file:,if (cli.isPreferencesImport()) {,yes
List to put imported/loaded database(s) in.,List<ParserResult> loaded = importAndOpenFiles();,yes
enables blanks within the search term: $ stands for a blank,"String searchTerm = data[0].replace(""\\$"", "" "");",no
export matches,if (!matches.isEmpty()) {,no
"read in the export format, take default format if no format entered",switch (data.length) {,no
default exporter: HTML table (with Abstract & BibTeX),"formatName = ""tablerefsabsbib"";",no
export new database,Optional<Exporter> exporter = Globals.exportFactory.getExporterByName(formatName);,no
"Leftover arguments that have a ""bib"" extension are interpreted as BIB files to open. Other files, and files that could not be opened as bib, we try to import instead.","boolean bibExtension = aLeftOver.toLowerCase(Locale.ENGLISH).endsWith(""bib"");",no
"We will try to import this file. Normally we will import it into a new tab, but if this import has been initiated by another instance through the remote listener, we will instead import it into the current library. This will enable easy integration with web browsers that can open a reference file in JabRef.",if (startupMode == Mode.INITIAL_START) {,no
"write an output, if something could be resolved",if ((newBase != null) && newBase.hasEntries()) {,no
Show just a warning message if encoding did not work for all characters:,if (fileWriter.hasEncodingProblems()) {,yes
This signals that the latest import should be stored in BibTeX format to the given file.,if (!loaded.isEmpty()) {,no
This signals that the latest import should be stored in the given format to the given file.,ParserResult pr = loaded.get(loaded.size() - 1);,no
"Set the global variable for this database's file directory before exporting, so formatters can resolve linked files correctly. (This is an ugly hack!)",File theFile = pr.getFile().get();,no
"String clearSearch = ""clearSearch""; mainTable.getInputMap().put(Globals.getKeyPrefs().getKey(KeyBinding.CLEAR_SEARCH), clearSearch); mainTable.getActionMap().put(clearSearch, new AbstractAction() {@Override public void actionPerformed(ActionEvent e) { // need to close these here, b/c this action overshadows the responsible actions when the main table is selected switch (mode) { case SHOWING_NOTHING: frame.getGlobalSearchBar().endSearch(); break; case SHOWING_PREVIEW: getPreviewPanel().close(); break; case SHOWING_EDITOR: case WILL_SHOW_EDITOR: entryEditorClosing(getEntryEditor()); break; default: LOGGER.warn(""unknown BasePanelMode: '"" + mode + ""', doing nothing""); break; } } });mainTable.getActionMap().put(Actions.CUT, new AbstractAction() {@Override public void actionPerformed(ActionEvent e) { try { runCommand(Actions.CUT); } catch (Throwable ex) { LOGGER.warn(""Could not cut"", ex); } } }); mainTable.getActionMap().put(Actions.COPY, new AbstractAction() {@Override public void actionPerformed(ActionEvent e) { try { runCommand(Actions.COPY); } catch (Throwable ex) { LOGGER.warn(""Could not copy"", ex); } } }); mainTable.getActionMap().put(Actions.PASTE, new AbstractAction() {@Override public void actionPerformed(ActionEvent e) { try { runCommand(Actions.PASTE); } catch (Throwable ex) { LOGGER.warn(""Could not paste"", ex); } } });",},no
"The search can lead to an unexpected 100% CPU usage which is perceived as a bug, if the search incidentally starts at a directory with lots of stuff below. It is now disabled by default. *",private class SearchAutoCompleteListener {,no
"Returns a collection of suggestion providers, which are populated from the current library.",public SuggestionProviders getSuggestionProviders() {,no
*Generates and copies citations based on the selected entries to the clipboard @param outputFormat the desired {@link CitationStyleOutputFormat},private void copyCitationToClipboard(CitationStyleOutputFormat outputFormat) {,no
"Removes the selected entries from the database @param cut If false the user will get asked if he really wants to delete the entries, and it will be localized as ""deleted"". If true the action will be localized as ""cut""",public void delete(boolean cut) {,no
"This method is called from JabRefFrame if a database specific action is requested by the user. Runs the command if it is defined, or prints an error message to the standard error stream.",public void runCommand(final Actions command) {,no
This method is called from JabRefFrame when the user wants to create a new entry. @param bibEntry The new entry.,public void insertEntry(final BibEntry bibEntry) {,no
Set up auto completion for this database,private void setupAutoCompletion() {,yes
"Sets the entry editor as the bottom component in the split pane. If an entry editor already was shown, makes sure that the divider doesn't move. Updates the mode to SHOWING_EDITOR. Then shows the given entry.@param entry The entry to edit.",public void showAndEdit(BibEntry entry) {,no
"This method selects the given entry, and scrolls it into view in the table. If an entryEditor is shown, it is given focus afterwards.",public void clearAndSelect(final BibEntry bibEntry) {,no
"This method is called from an EntryEditor when it should be closed. We relay to the selection listener, which takes care of the rest.",public void entryEditorClosing() {,no
Closes the entry editor if it is showing the given entry.,private void ensureNotShowingBottomPanel(BibEntry entry) {,no
"Depending on whether a preview or an entry editor is showing, save the current divider location in the correct preference setting.",private void saveDividerLocation(Number position) {,no
Get an array containing the currently selected entries. The array is stable and not changed if the selection changes @return A list containing the selected entries. Is never null.,public List<BibEntry> getSelectedEntries() {,no
Set the query the user currently searches while this basepanel is active,public void setCurrentSearchQuery(Optional<SearchQuery> currentSearchQuery) {,no
"Ensures that the search auto completer is up to date when entries are changed AKA Let the auto completer, if any, harvest words from the entry Actual methods for autocomplete indexingmust run in javafx thread",private class SearchAutoCompleteListener {,no
Ensures that the results of the current search are updated when a new entry is inserted into the database Actual methods for performing search must run in javafx thread,private class SearchListener {,no
Keeps track of the string dialog if it is open.,"private final Map<Actions, BaseAction> actions = new HashMap<>();",no
"To contain instantiated entry editors. This is to save time As most enums, this must not be null",private BasePanelMode mode = BasePanelMode.SHOWING_NOTHING;,no
AutoCompleter used in the search bar,private PersonNameSuggestionProvider searchAutoCompleter;,yes
Used to track whether the base has changed since last save.,private BibEntry showing;,no
the query the user searches when this BasePanel is active,private Optional<SearchQuery> currentSearchQuery = Optional.empty();,no
"ensure that at each addition of a new entry, the entry is added to the groups interface",this.bibDatabaseContext.getDatabase().registerListener(new GroupTreeListener());,no
ensure that all entry changes mark the panel as changed,this.bibDatabaseContext.getDatabase().registerListener(this);,no
check if file is modified,"String changeFlag = isModified() && !isAutosaveEnabled ? ""*"" : """";",yes
"if the database is not empty and no file is assigned, the database came from an import and has to be treated somehow -> mark as changed This also happens internally at basepanel to ensure consistency line 224",title.append('*');,no
The action for copying selected entries.,"actions.put(Actions.COPY, this::copy);",yes
"The action for pasting entries or cell contents. - more robust detection of available content flavors (doesn't only look at first one offered) - support for parsing string-flavor clipboard contents which are bibtex entries. This allows you to (a) paste entire bibtex entries from a text editor, web browser, etc (b) copy and paste entries between multiple instances of JabRef (since only the text representation seems to get as far as the X clipboard, at least on my system)","actions.put(Actions.PASTE, this::paste);",no
The action for copying the selected entry's key.,"actions.put(Actions.COPY_KEY, this::copyKey);",yes
The action for copying the selected entry's title.,"actions.put(Actions.COPY_TITLE, this::copyTitle);",yes
The action for copying a cite for the selected entry.,"actions.put(Actions.COPY_CITE_KEY, this::copyCiteKey);",no
The action for copying the BibTeX keys as hyperlinks to the urls of the selected entries,"actions.put(Actions.COPY_KEY_AND_LINK, new CopyBibTeXKeyAndLinkAction(mainTable, Globals.clipboardManager));",no
Collect all non-null titles.,List<String> titles = selectedBibEntries.stream(),no
All entries had titles.,"output(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(copiedTitles) + ""'."");",no
Collect all non-null keys.,for (BibEntry be : bes) {,yes
All entries had keys.,"output(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(copiedCiteCommand) + ""'."");",no
Collect all non-null keys.,for (BibEntry be : bes) {,yes
All entries had keys.,"output(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(copiedKeys) + ""'."");",no
"OK: in a future version, this string should be configurable to allow arbitrary exports","StringReader sr = new StringReader(""\\bibtexkey - \\begin{title}\\format[RemoveBrackets]{\\title}\\end{title}\n"");",no
Collect all non-null keys.,for (BibEntry be : bes) {,yes
All entries had keys.,"output(Localization.lang(""Copied"") + "" '"" + JabRefDialogService.shortenDialogMessage(copiedKeysAndTitles) + ""'."");",no
Set owner and timestamp,"UpdateField.setAutomaticFields(bibEntry, true, true, Globals.prefs.getUpdateFieldPreferences());",no
Create an UndoableInsertEntry object.,"getUndoManager().addEdit(new UndoableInsertEntry(bibDatabaseContext.getDatabase(), bibEntry));",yes
The database just changed.,markBaseChanged();,yes
Focus field and entry in main table (async to give entry editor time to load),entryEditor.setFocusToField(field);,no
Add the listener that binds selection to state manager (TODO: should be replaced by proper JavaFX binding as soon as table is implemented in JavaFX),mainTable.addSelectionListener(listEvent -> Globals.stateManager.setSelectedEntries(mainTable.getSelectedEntries()));,no
Update entry editor and preview according to selected entries,mainTable.addSelectionListener(event -> mainTable.getSelectedEntries(),no
TODO: Register these actions globally,/*,no
restore last splitting state (before mainTable is created as creation affects the stored size of the entryEditors),adjustSplitter();,no
Set up name autocompleter for search:,instantiateSearchAutoCompleter();,yes
"Saves the divider position as soon as it changes We need to keep a reference to the subscription, otherwise the binding gets garbage collected","dividerPositionSubscription = EasyBind.monadic(Bindings.valueAt(splitPane.getDividers(), 0))",no
create changeMonitor and changePane so we get notifications about outside changes to the file.,resetChangeMonitorAndChangePane();,no
"if the database is not empty and no file is assigned, the database came from an import and has to be treated somehow -> mark as changed",this.baseChanged = true;,no
Ensure that the suggestion providers are in sync with entries,CoarseChangeFilter changeFilter = new CoarseChangeFilter(bibDatabaseContext);,no
Create empty suggestion providers if auto completion is deactivated,suggestionProviders = new SuggestionProviders();,no
Put an asterisk behind the filename to indicate the database has changed.,frame.setWindowTitle();,no
Run the search operation:,FileFinder fileFinder = FileFinders.constructFromConfiguration(Globals.prefs.getAutoLinkPreferences());,no
Automatically add new entry to the selected group (or set of groups),if (Globals.prefs.getBoolean(JabRefPreferences.AUTO_ASSIGN_GROUP)) {,no
IMO only used to update the status (found X entries),DefaultTaskExecutor.runInJavaFXThread(() -> frame.getGlobalSearchBar().performSearch());,no
"No URL or DOI found in the ""url"" and ""doi"" fields. Look for web links in the ""file"" field as a fallback:",,no
Useful for checking out new algorithm improvements and thresholds. Not used inside the JabRef code itself.,public class CrossrefFetcherEvaluator {,no
"This method takes care of creating dependencies. By default, it just creates a new instance of the class. Dependencies without default constructor are constructed by hand.",private static Object createDependency(Class<?> clazz) {,no
Use our own method to construct dependencies,Injector.setInstanceSupplier(DefaultInjector::createDependency);,no
This interface provides methods to create dialogs and show them to the user.,public interface DialogService {,no
"This will create and display new {@link ChoiceDialog} of type T with a default choice and a collection of possible choices  @implNote The implementation should accept {@code null} for {@code defaultChoice}, but callers should use {@link #showChoiceDialogAndWait(String, String, String, Collection)}.","<T> Optional<T> showChoiceDialogAndWait(String title, String content, String okButtonLabel, T defaultChoice, Collection<T> choices);",no
This will create and display new {@link TextInputDialog} with a text fields to enter data,"Optional<String> showInputDialogAndWait(String title, String content);",no
This will create and display new {@link TextInputDialog} with a text field with a default value to enter data,"Optional<String> showInputDialogWithDefaultAndWait(String title, String content, String defaultValue);",yes
"This will create and display a new information dialog. It will include a blue information icon on the left and a single OK Button. To create an information dialog with custom buttons see also {@link #showCustomButtonDialogAndWait(Alert.AlertType, String, String, ButtonType...)}","void showInformationDialogAndWait(String title, String content);",no
"This will create and display a new information dialog. It will include a yellow warning icon on the left and a single OK Button. To create a warning dialog with custom buttons see also {@link #showCustomButtonDialogAndWait(Alert.AlertType, String, String, ButtonType...)}","void showWarningDialogAndWait(String title, String content);",no
"This will create and display a new error dialog. It will include a red error icon on the left and a single OK Button. To create a error dialog with custom buttons see also {@link #showCustomButtonDialogAndWait(Alert.AlertType, String, String, ButtonType...)}","void showErrorDialogAndWait(String title, String content);",no
Create and display error dialog displaying the given exception. @param message   the error message @param exception the exception causing the error,"void showErrorDialogAndWait(String message, Throwable exception);",yes
 Create and display error dialog displaying the given exception. @param exception the exception causing the error,"void showErrorDialogAndWait(String title, String content, Throwable exception);",yes
Create and display error dialog displaying the given message.,void showErrorDialogAndWait(String message);,yes
"This will create and display a new confirmation dialog. It will include a blue question icon on the left and a OK and Cancel button. To create a confirmation dialog with custom buttons see also {@link #showCustomButtonDialogAndWait(Alert.AlertType, String, String, ButtonType...)}","boolean showConfirmationDialogAndWait(String title, String content);",no
"Create and display a new confirmation dialog. It will include a blue question icon on the left and a OK (with given label) and Cancel button. To create a confirmation dialog with custom buttons see also {@link #showCustomButtonDialogAndWait(Alert.AlertType, String, String, ButtonType...)}.","boolean showConfirmationDialogAndWait(String title, String content, String okButtonLabel);",no
"Create and display a new confirmation dialog. It will include a blue question icon on the left and a OK (with given label) and Cancel (also with given label) button. To create a confirmation dialog with custom buttons see also {@link #showCustomButtonDialogAndWait(Alert.AlertType, String, String, ButtonType...)}. @return true if the use clicked ""OK"" otherwise false","boolean showConfirmationDialogAndWait(String title, String content, String okButtonLabel, String cancelButtonLabel);",no
"Create and display a new confirmation dialog. It will include a blue question icon on the left and a YES (with given label) and Cancel (also with given label) button. To create a confirmation dialog with custom buttons see also {@link #showCustomButtonDialogAndWait(Alert.AlertType, String, String, ButtonType...)}. Moreover, the dialog contains a opt-out checkbox with the given text to support ""Do not ask again""-behaviour.","boolean showConfirmationDialogWithOptOutAndWait(String title, String content,",no
"Create and display a new confirmation dialog. It will include a blue question icon on the left and a YES (with given label) and Cancel (also with given label) button. To create a confirmation dialog with custom buttons see also {@link #showCustomButtonDialogAndWait(Alert.AlertType, String, String, ButtonType...)}. Moreover, the dialog contains a opt-out checkbox with the given text to support ""Do not ask again""-behaviour.","boolean showConfirmationDialogWithOptOutAndWait(String title, String content,",no
Shows a custom dialog and returns the result. @param dialog dialog to show @param <R>    type of result,<R> Optional<R> showCustomDialogAndWait(Dialog<R> dialog);,yes
Constructs and shows a canceable {@link ProgressDialog}. Clicking cancel will cancel the underlying service and close the dialog @param title title of the dialog @param content message to show above the progress bar @param task The {@link Task} which executes the work and for which to show the dialog,"<V> void showProgressDialogAndWait(String title, String content, Task<V> task);",no
,void notify(String message);,no
"Shows a new file save dialog. The method doesn't return until the displayed file save dialog is dismissed. The return value specifies the file chosen by the user or an empty {@link Optional} if no selection has been made. After a file was selected, the given file dialog configuration is updated with the selected extension type (if any).",Optional<Path> showFileSaveDialog(FileDialogConfiguration fileDialogConfiguration);,no
" Shows a new file open dialog. The method doesn't return until the displayed open dialog is dismissed. The return value specifies the file chosen by the user or an empty {@link Optional} if no selection has been made. After a file was selected, the given file dialog configuration is updated with the selected extension type (if any). @return the selected file or an empty {@link Optional} if no file has been selected",Optional<Path> showFileOpenDialog(FileDialogConfiguration fileDialogConfiguration);,no
Shows a new file open dialog. The method doesn't return until the displayed open dialog is dismissed. The return value specifies the files chosen by the user or an empty {@link List} if no selection has been made. @return the selected files or an empty {@link List} if no file has been selected,List<Path> showFileOpenDialogAndGetMultipleFiles(FileDialogConfiguration fileDialogConfiguration);,no
Shows a new directory selection dialog. The method doesn't return until the displayed open dialog is dismissed. The return value specifies the file chosen by the user or an empty {@link Optional} if no selection has been made. @return the selected directory or an empty {@link Optional} if no directory has been selected,Optional<Path> showDirectorySelectionDialog(DirectoryDialogConfiguration directoryDialogConfiguration);,no
Displays a Print Dialog. Allow the user to update job state such as printer and settings. These changes will be available in the appropriate properties after the print dialog has returned. The print dialog is also used to confirm the user wants to proceed with printing.,boolean showPrintDialog(PrinterJob job);,no
Shows a new dialog that list all files contained in the given archive and which lets the user select one of these files. The method doesn't return until the displayed open dialog is dismissed. The return value specifies the file chosen by the user or an empty {@link Optional} if no selection has been made. @return the selected file or an empty {@link Optional} if no file has been selected,Optional<Path> showFileOpenFromArchiveDialog(Path archivePath) throws IOException;,no
Contains all the different {@link DataFormat}s that may occur in JabRef.,public class DragAndDropDataFormats {,no
Dialog that prompts the user to choose a type for an entry. Returns null if canceled.,public class EntryTypeView extends BaseDialog<EntryType> {,no
"The buttonType will always be cancel, even if we pressed one of the entry type buttons",return type;,no
we set the managed property so that they will only be rendered when they are visble so that the Nodes only take the space when visible avoids removing and adding from the scence graph,bibTexTitlePane.managedProperty().bind(bibTexTitlePane.visibleProperty());,no
Do nothing,break;,yes
This class provides a super class for all dialogs implemented in JavaFX. To create a custom JavaFX dialog one should create an instance of this class and set a dialog pane through the inherited {@link Dialog#setDialogPane(DialogPane)} method. The dialog can be shown via {@link Dialog#show()} or {@link Dialog#showAndWait()}. The layout of the pane should be defined in an external fxml file and loaded it via the {@link FXMLLoader}.,public class FXDialog extends Alert {,no
"This field is initialized upon startup. Only GUI code is allowed to access it, logic code should use dependency injection.",public static JournalAbbreviationLoader journalAbbreviationLoader;,no
"This field is initialized upon startup. Only GUI code is allowed to access it, logic code should use dependency injection.",public static ProtectedTermsLoader protectedTermsLoader;,no
Manager for the state of the GUI.,,no
Remote listener,public static final RemoteListenerServerLifecycle REMOTE_LISTENER = new RemoteListenerServerLifecycle();,yes
"In the main program, this field is initialized in JabRef.java Each test case initializes this field if required",public static JabRefPreferences prefs;,no
Key binding preferences,private static KeyBindingRepository keyBindingRepository;,no
Key binding preferences,public static synchronized KeyBindingRepository getKeyPrefs() {,yes
Background tasks,public static void startBackgroundTasks() throws JabRefException {,yes
FIXME: Workaround for bug https://github.com/Microsoft/ApplicationInsights-Java/issues/662,SDKShutdownActivity.INSTANCE.stopAll();,no
Static variables for graphics files and keyboard shortcuts.,public class GUIGlobals {,no
"Perform initializations that are only used in graphical mode. This is to prevent the ""Xlib: connection to "":0.0"" refused by server"" error when access to the X server on Un*x is unavailable.",public static void init() {,no
add some additional space to improve appearance,public static final int WIDTH_ICON_COL = 16 + 12;,no
Width of Ranking Icon Column,public static final int WIDTH_ICON_COL_RANKING = 5 * 16;,yes
"Set up entry editor colors, first time:",GUIGlobals.updateEntryEditorColors();,no
update preferences,"Globals.prefs.putInt(JabRefPreferences.FONT_SIZE, size);",yes
Number of characters per line,private static final int WIDTH = 100;,no
boolean options,"options.addOption(""h"", ""help"", false, Localization.lang(""Display help on command line options""));",no
This class provides methods to create default JavaFX dialogs which will also work on top of Swing windows. The created dialogs are instances of the {@link FXDialog} class. The available dialogs in this class are useful for displaying small information graphic dialogs rather than complex windows. For more complex dialogs it is advised to rather create a new sub class of {@link FXDialog}.,public class JabRefDialogService implements DialogService {,no
Need to force the alert to layout in order to grab the graphic as we are replacing the dialog pane with a custom pane,alert.getDialogPane().applyCss();,no
Create a new dialog pane that has a checkbox instead of the hide/show details button Use the supplied callback for the action of the checkbox,alert.setDialogPane(new DialogPane() {,no
Fool the dialog into thinking there is some expandable content; a group won't take up any space if it has no children,alert.getDialogPane().setExpandableContent(new Group());,no
JabRef Launcher,public class JabRefLauncher {,yes
The side pane is displayed at the left side of JabRef and shows instances of {@link SidePaneComponent}.,public class SidePane extends BorderPane {,no
Override this method if the component needs to make any changes before it can close.,public void beforeClosing() {,no
Override this method if the component needs to do any actions after it is shown.,public void afterOpening() {,no
Nothing to do by default,},yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return false;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,,yes
Auto-generated method stub,return false;,yes
Auto-generated method stub,,yes
Auto-generated method stub,,yes
Auto-generated method stub,,yes
Auto-generated method stub,return false;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,,yes
Auto-generated method stub,return false;,yes
Auto-generated method stub,,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,,yes
Auto-generated method stub,return 0;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,,yes
Auto-generated method stub,,yes
Auto-generated method stub,return 0;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,,yes
Auto-generated method stub,,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return false;,yes
Auto-generated method stub,,yes
Auto-generated method stub,,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,,yes
Auto-generated method stub,return null;,yes
Auto-generated method stub,,yes
Auto-generated method stub,,yes
Auto-generated method stub,return 0;,yes
